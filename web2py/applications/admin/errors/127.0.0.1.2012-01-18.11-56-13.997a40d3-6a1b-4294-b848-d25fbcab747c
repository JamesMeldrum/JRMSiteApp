(dp1
S'output'
p2
S''
sS'layer'
p3
S'C:\\webapps\\dopbox\\Dropbox\\Eclipse\\OJDevSourceProject\\project\\web2py\\applications\\admin\\controllers/default.py'
p4
sS'code'
p5
S'# coding: utf8\n\nfrom gluon.admin import *\nfrom gluon.fileutils import abspath, read_file, write_file\nfrom glob import glob\nimport shutil\nimport platform\n\nif DEMO_MODE and request.function in [\'change_password\',\'pack\',\'pack_plugin\',\'upgrade_web2py\',\'uninstall\',\'cleanup\',\'compile_app\',\'remove_compiled_app\',\'delete\',\'delete_plugin\',\'create_file\',\'upload_file\',\'update_languages\',\'reload_routes\']:\n    session.flash = T(\'disabled in demo mode\')\n    redirect(URL(\'site\'))\n\nif not is_manager() and request.function in [\'change_password\',\'upgrade_web2py\']:\n    session.flash = T(\'disabled in multi user mode\')\n    redirect(URL(\'site\'))\n\nif FILTER_APPS and request.args(0) and not request.args(0) in FILTER_APPS:\n    session.flash = T(\'disabled in demo mode\')\n    redirect(URL(\'site\'))\n\ndef safe_open(a,b):\n    if DEMO_MODE and \'w\' in b:\n        class tmp:\n            def write(self,data): pass\n        return tmp()\n    return open(a,b)\n\ndef safe_read(a, b=\'r\'):\n    safe_file = safe_open(a, b)\n    try:\n        return safe_file.read()\n    finally:\n        safe_file.close()\n\ndef safe_write(a, value, b=\'w\'):\n    safe_file = safe_open(a, b)\n    try:\n        safe_file.write(value)\n    finally:\n        safe_file.close()\n\ndef get_app(name=None):\n    app = name or request.args(0)\n    if app and (not MULTI_USER_MODE or db(db.app.name==app)(db.app.owner==auth.user.id).count()):\n        return app\n    session.flash = \'App does not exist or your are not authorized\'\n    redirect(URL(\'site\'))\n\ndef index():\n    """ Index handler """\n\n    send = request.vars.send\n    if DEMO_MODE:\n        session.authorized = True\n        session.last_time = t0\n    if not send:\n        send = URL(\'site\')\n    if session.authorized:\n        redirect(send)\n    elif request.vars.password:\n        if verify_password(request.vars.password):\n            session.authorized = True\n            login_record(True)\n\n            if CHECK_VERSION:\n                session.check_version = True\n            else:\n                session.check_version = False\n\n            session.last_time = t0\n            if isinstance(send, list):  # ## why does this happen?\n                send = str(send[0])\n\n            redirect(send)\n        else:\n            times_denied = login_record(False)\n            if times_denied >= allowed_number_of_attempts:\n                response.flash = \\\n                    T(\'admin disabled because too many invalid login attempts\')\n            elif times_denied == allowed_number_of_attempts - 1:\n                response.flash = \\\n                    T(\'You have one more login attempt before you are locked out\')\n            else:\n                response.flash = T(\'invalid password.\')\n    return dict(send=send)\n\n\ndef check_version():\n    """ Checks if web2py is up to date """\n\n    session.forget()\n    session._unlock(response)\n\n    new_version, version_number = check_new_version(request.env.web2py_version,\n                                    WEB2PY_VERSION_URL)\n\n    if new_version == -1:\n        return A(T(\'Unable to check for upgrades\'), _href=WEB2PY_URL)\n    elif new_version != True:\n        return A(T(\'web2py is up to date\'), _href=WEB2PY_URL)\n    elif platform.system().lower() in (\'windows\',\'win32\',\'win64\') and os.path.exists("web2py.exe"):\n        return SPAN(\'You should upgrade to version %s\' % version_number)\n    else:\n        return sp_button(URL(\'upgrade_web2py\'), T(\'upgrade now\')) \\\n          + XML(\' <strong class="upgrade_version">%s</strong>\' % version_number)\n\n\ndef logout():\n    """ Logout handler """\n    session.authorized = None\n    if MULTI_USER_MODE:\n        redirect(URL(\'user/logout\'))\n    redirect(URL(\'index\'))\n\n\ndef change_password():\n\n    if session.pam_user:\n        session.flash = T(\'PAM authenticated user, cannot change password here\')\n        redirect(URL(\'site\'))\n    form=SQLFORM.factory(Field(\'current_admin_password\',\'password\'),\n                         Field(\'new_admin_password\',\'password\',requires=IS_STRONG()),\n                         Field(\'new_admin_password_again\',\'password\'))\n    if form.accepts(request.vars):\n        if not verify_password(request.vars.current_admin_password):\n            form.errors.current_admin_password = T(\'invalid password\')\n        elif form.vars.new_admin_password != form.vars.new_admin_password_again:\n            form.errors.new_admin_password_again = T(\'no match\')\n        else:\n            path = abspath(\'parameters_%s.py\' % request.env.server_port)\n            safe_write(path, \'password="%s"\' % CRYPT()(request.vars.new_admin_password)[0])\n            session.flash = T(\'password changed\')\n            redirect(URL(\'site\'))\n    return dict(form=form)\n\ndef site():\n    """ Site handler """\n\n    myversion = request.env.web2py_version\n\n    # Shortcut to make the elif statements more legible\n    file_or_appurl = \'file\' in request.vars or \'appurl\' in request.vars\n\n    if DEMO_MODE:\n        pass\n\n    elif request.vars.filename and not \'file\' in request.vars:\n        # create a new application\n        appname = cleanpath(request.vars.filename).replace(\'.\', \'_\')\n        if app_create(appname, request):\n            if MULTI_USER_MODE:\n                db.app.insert(name=appname,owner=auth.user.id)\n            session.flash = T(\'new application "%s" created\', appname)\n            redirect(URL(\'design\',args=appname))\n        else:\n            session.flash = \\\n                T(\'unable to create application "%s" (it may exist already)\', request.vars.filename)\n        redirect(URL(r=request))\n\n    elif file_or_appurl and not request.vars.filename:\n        # can\'t do anything without an app name\n        msg = \'you must specify a name for the uploaded application\'\n        response.flash = T(msg)\n\n    elif file_or_appurl and request.vars.filename:\n        # fetch an application via URL or file upload\n        f = None\n        if request.vars.appurl is not \'\':\n            try:\n                f = urllib.urlopen(request.vars.appurl)\n            except Exception, e:\n                session.flash = DIV(T(\'Unable to download app because:\'),PRE(str(e)))\n                redirect(URL(r=request))\n            fname = request.vars.appurl\n        elif request.vars.file is not \'\':\n            f = request.vars.file.file\n            fname = request.vars.file.filename\n\n        if f:\n            appname = cleanpath(request.vars.filename).replace(\'.\', \'_\')\n            installed = app_install(appname, f, request, fname,\n                                    overwrite=request.vars.overwrite_check)\n        if f and installed:\n            msg = \'application %(appname)s installed with md5sum: %(digest)s\'\n            session.flash = T(msg, dict(appname=appname,\n                                        digest=md5_hash(installed)))\n        elif f and request.vars.overwrite_check:\n            msg = \'unable to install application "%(appname)s"\'\n            session.flash = T(msg, dict(appname=request.vars.filename))\n\n        else:\n            msg = \'unable to install application "%(appname)s"\'\n            session.flash = T(msg, dict(appname=request.vars.filename))\n\n        redirect(URL(r=request))\n\n    regex = re.compile(\'^\\w+$\')\n\n    if is_manager():\n        apps = [f for f in os.listdir(apath(r=request)) if regex.match(f)]\n    else:\n        apps = [f.name for f in db(db.app.owner==auth.user_id).select()]\n\n    if FILTER_APPS:\n        apps = [f for f in apps if f in FILTER_APPS]\n\n    apps = sorted(apps,lambda a,b:cmp(a.upper(),b.upper()))\n\n    return dict(app=None, apps=apps, myversion=myversion)\n\n\ndef pack():\n    app = get_app()\n\n    if len(request.args) == 1:\n        fname = \'web2py.app.%s.w2p\' % app\n        filename = app_pack(app, request)\n    else:\n        fname = \'web2py.app.%s.compiled.w2p\' % app\n        filename = app_pack_compiled(app, request)\n\n    if filename:\n        response.headers[\'Content-Type\'] = \'application/w2p\'\n        disposition = \'attachment; filename=%s\' % fname\n        response.headers[\'Content-Disposition\'] = disposition\n        return safe_read(filename, \'rb\')\n    else:\n        session.flash = T(\'internal error\')\n        redirect(URL(\'site\'))\n\ndef pack_plugin():\n    app = get_app()\n    if len(request.args) == 2:\n        fname = \'web2py.plugin.%s.w2p\' % request.args[1]\n        filename = plugin_pack(app, request.args[1], request)\n    if filename:\n        response.headers[\'Content-Type\'] = \'application/w2p\'\n        disposition = \'attachment; filename=%s\' % fname\n        response.headers[\'Content-Disposition\'] = disposition\n        return safe_read(filename, \'rb\')\n    else:\n        session.flash = T(\'internal error\')\n        redirect(URL(\'plugin\',args=request.args))\n\ndef upgrade_web2py():\n    if \'upgrade\' in request.vars:\n        (success, error) = upgrade(request)\n        if success:\n            session.flash = T(\'web2py upgraded; please restart it\')\n        else:\n            session.flash = T(\'unable to upgrade because "%s"\', error)\n        redirect(URL(\'site\'))\n    elif \'noupgrade\' in request.vars:\n        redirect(URL(\'site\'))\n    return dict()\n\ndef uninstall():\n    app = get_app()\n    if \'delete\' in request.vars:\n        if MULTI_USER_MODE:\n            if is_manager() and db(db.app.name==app).delete():\n                pass\n            elif db(db.app.name==app)(db.app.owner==auth.user.id).delete():\n                pass\n            else:\n                session.flash = T(\'no permission to uninstall "%s"\', app)\n                redirect(URL(\'site\'))\n        if app_uninstall(app, request):            \n            session.flash = T(\'application "%s" uninstalled\', app)\n        else:\n            session.flash = T(\'unable to uninstall "%s"\', app)\n        redirect(URL(\'site\'))\n    elif \'nodelete\' in request.vars:\n        redirect(URL(\'site\'))\n    return dict(app=app)\n\n\ndef cleanup():\n    app = get_app()\n    clean = app_cleanup(app, request)\n    if not clean:\n        session.flash = T("some files could not be removed")\n    else:\n        session.flash = T(\'cache, errors and sessions cleaned\')\n\n    redirect(URL(\'site\'))\n\n\ndef compile_app():\n    app = get_app()\n    c = app_compile(app, request)\n    if not c:\n        session.flash = T(\'application compiled\')\n    else:\n        session.flash = DIV(T(\'Cannot compile: there are errors in your app:\'),\n                              CODE(c))\n    redirect(URL(\'site\'))\n\n\ndef remove_compiled_app():\n    """ Remove the compiled application """\n    app = get_app()\n    remove_compiled_application(apath(app, r=request))\n    session.flash = T(\'compiled application removed\')\n    redirect(URL(\'site\'))\n\ndef delete():\n    """ Object delete handler """\n    app = get_app()\n    filename = \'/\'.join(request.args)\n    sender = request.vars.sender\n\n    if isinstance(sender, list):  # ## fix a problem with Vista\n        sender = sender[0]\n\n    if \'nodelete\' in request.vars:\n        redirect(URL(sender))\n    elif \'delete\' in request.vars:\n        try:\n            os.unlink(apath(filename, r=request))\n            session.flash = T(\'file "%(filename)s" deleted\',\n                              dict(filename=filename))\n        except Exception:\n            session.flash = T(\'unable to delete file "%(filename)s"\',\n                              dict(filename=filename))\n        redirect(URL(sender))\n    return dict(filename=filename, sender=sender)\n\ndef peek():\n    """ Visualize object code """\n    app = get_app()\n    filename = \'/\'.join(request.args)\n    try:\n        data = safe_read(apath(filename, r=request)).replace(\'\\r\',\'\')\n    except IOError:\n        session.flash = T(\'file does not exist\')\n        redirect(URL(\'site\'))\n\n    extension = filename[filename.rfind(\'.\') + 1:].lower()\n\n    return dict(app=request.args[0],\n                filename=filename,\n                data=data,\n                extension=extension)\n\n\ndef test():\n    """ Execute controller tests """\n    app = get_app()\n    if len(request.args) > 1:\n        file = request.args[1]\n    else:\n        file = \'.*\\.py\'\n\n    controllers = listdir(apath(\'%s/controllers/\' % app, r=request), file + \'$\')\n\n    return dict(app=app, controllers=controllers)\n\ndef keepalive():\n    return \'\'\n\ndef search():\n    keywords=request.vars.keywords or \'\'\n    app = get_app()\n    def match(filename,keywords):\n        filename=os.path.join(apath(app, r=request),filename)\n        if keywords in read_file(filename,\'rb\'):\n            return True\n        return False\n    path = apath(request.args[0], r=request)\n    files1 = glob(os.path.join(path,\'*/*.py\'))\n    files2 = glob(os.path.join(path,\'*/*.html\'))\n    files3 = glob(os.path.join(path,\'*/*/*.html\'))\n    files=[x[len(path)+1:].replace(\'\\\\\',\'/\') for x in files1+files2+files3 if match(x,keywords)]\n    return response.json({\'files\':files})\n\ndef edit():\n    """ File edit handler """\n    # Load json only if it is ajax edited...\n    app = get_app()\n    filename = \'/\'.join(request.args)\n    # Try to discover the file type\n    if filename[-3:] == \'.py\':\n        filetype = \'python\'\n    elif filename[-5:] == \'.html\':\n        filetype = \'html\'\n    elif filename[-5:] == \'.load\':\n        filetype = \'html\'\n    elif filename[-4:] == \'.css\':\n        filetype = \'css\'\n    elif filename[-3:] == \'.js\':\n        filetype = \'js\'\n    else:\n        filetype = \'html\'\n\n    # ## check if file is not there\n\n    path = apath(filename, r=request)\n\n    if request.vars.revert and os.path.exists(path + \'.bak\'):\n        try:\n            data = safe_read(path + \'.bak\')\n            data1 = safe_read(path)\n        except IOError:\n            session.flash = T(\'Invalid action\')\n            if \'from_ajax\' in request.vars:\n                 return response.json({\'error\': str(T(\'Invalid action\'))})\n            else:\n                redirect(URL(\'site\'))\n\n        safe_write(path, data)\n        file_hash = md5_hash(data)\n        saved_on = time.ctime(os.stat(path)[stat.ST_MTIME])\n        safe_write(path + \'.bak\', data1)\n        response.flash = T(\'file "%s" of %s restored\', (filename, saved_on))\n    else:\n        try:\n            data = safe_read(path)\n        except IOError:\n            session.flash = T(\'Invalid action\')\n            if \'from_ajax\' in request.vars:\n                return response.json({\'error\': str(T(\'Invalid action\'))})\n            else:\n                redirect(URL(\'site\'))\n\n        file_hash = md5_hash(data)\n        saved_on = time.ctime(os.stat(path)[stat.ST_MTIME])\n\n        if request.vars.file_hash and request.vars.file_hash != file_hash:\n            session.flash = T(\'file changed on disk\')\n            data = request.vars.data.replace(\'\\r\\n\', \'\\n\').strip() + \'\\n\'\n            safe_write(path + \'.1\', data)\n            if \'from_ajax\' in request.vars:\n                return response.json({\'error\': str(T(\'file changed on disk\')),\n                                      \'redirect\': URL(\'resolve\',\n                                                      args=request.args)})\n            else:\n                redirect(URL(\'resolve\', args=request.args))\n        elif request.vars.data:\n            safe_write(path + \'.bak\', data)\n            data = request.vars.data.replace(\'\\r\\n\', \'\\n\').strip() + \'\\n\'\n            safe_write(path, data)\n            file_hash = md5_hash(data)\n            saved_on = time.ctime(os.stat(path)[stat.ST_MTIME])\n            response.flash = T(\'file saved on %s\', saved_on)\n\n    data_or_revert = (request.vars.data or request.vars.revert)\n\n    # Check compile errors\n    highlight = None\n    if filetype == \'python\' and request.vars.data:\n        import _ast\n        try:\n            code = request.vars.data.rstrip().replace(\'\\r\\n\',\'\\n\')+\'\\n\'\n            compile(code, path, "exec", _ast.PyCF_ONLY_AST)\n        except Exception, e:\n            start = sum([len(line)+1 for l, line\n                            in enumerate(request.vars.data.split("\\n"))\n                            if l < e.lineno-1])\n            if e.text and e.offset:\n                offset = e.offset - (len(e.text) - len(e.text.splitlines()[-1]))\n            else:\n                offset = 0\n            highlight = {\'start\': start, \'end\': start + offset + 1}\n            try:\n                ex_name = e.__class__.__name__\n            except:\n                ex_name = \'unknown exception!\'\n            response.flash = DIV(T(\'failed to compile file because:\'), BR(),\n                                 B(ex_name), T(\' at line %s\') % e.lineno,\n                                 offset and T(\' at char %s\') % offset or \'\',\n                                 PRE(str(e)))\n\n    if data_or_revert and request.args[1] == \'modules\':\n        # Lets try to reload the modules\n        try:\n            mopath = \'.\'.join(request.args[2:])[:-3]\n            exec \'import applications.%s.modules.%s\' % (request.args[0], mopath)\n            reload(sys.modules[\'applications.%s.modules.%s\'\n                    % (request.args[0], mopath)])\n        except Exception, e:\n            response.flash = DIV(T(\'failed to reload module because:\'),PRE(str(e)))\n\n    edit_controller = None\n    editviewlinks = None\n    view_link = None\n    if filetype == \'html\' and len(request.args) >= 3:\n        cfilename = os.path.join(request.args[0], \'controllers\',\n                                 request.args[2] + \'.py\')\n        if os.path.exists(apath(cfilename, r=request)):\n            edit_controller = URL(\'edit\', args=[cfilename])\n            view = request.args[3].replace(\'.html\',\'\')\n            view_link = URL(request.args[0],request.args[2],view)\n    elif filetype == \'python\' and request.args[1] == \'controllers\':\n        ## it\'s a controller file.\n        ## Create links to all of the associated view files.\n        app = get_app()\n        viewname = os.path.splitext(request.args[2])[0]\n        viewpath = os.path.join(app,\'views\',viewname)\n        aviewpath = apath(viewpath, r=request)\n        viewlist = []\n        if os.path.exists(aviewpath):\n            if os.path.isdir(aviewpath):\n                viewlist = glob(os.path.join(aviewpath,\'*.html\'))\n        elif os.path.exists(aviewpath+\'.html\'):\n            viewlist.append(aviewpath+\'.html\')\n        if len(viewlist):\n            editviewlinks = []\n            for v in viewlist:\n                vf = os.path.split(v)[-1]\n                vargs = "/".join([viewpath.replace(os.sep,"/"),vf])\n                editviewlinks.append(A(T(vf.split(".")[0]),\\\n                    _href=URL(\'edit\',args=[vargs])))\n\n    if len(request.args) > 2 and request.args[1] == \'controllers\':\n        controller = (request.args[2])[:-3]\n        functions = regex_expose.findall(data)\n    else:\n        (controller, functions) = (None, None)\n\n    if \'from_ajax\' in request.vars:\n        return response.json({\'file_hash\': file_hash, \'saved_on\': saved_on, \'functions\':functions, \'controller\': controller, \'application\': request.args[0], \'highlight\': highlight })\n    else:\n\n        editarea_preferences = {}\n        editarea_preferences[\'FONT_SIZE\'] = \'10\'\n        editarea_preferences[\'FULL_SCREEN\'] = \'false\'\n        editarea_preferences[\'ALLOW_TOGGLE\'] = \'true\'\n        editarea_preferences[\'REPLACE_TAB_BY_SPACES\'] = \'4\'\n        editarea_preferences[\'DISPLAY\'] = \'onload\'\n        for key in editarea_preferences:\n            if globals().has_key(key):\n                editarea_preferences[key]=globals()[key]\n        return dict(app=request.args[0],\n                    filename=filename,\n                    filetype=filetype,\n                    data=data,\n                    edit_controller=edit_controller,\n                    file_hash=file_hash,\n                    saved_on=saved_on,\n                    controller=controller,\n                    functions=functions,\n                    view_link=view_link,\n                    editarea_preferences=editarea_preferences,\n                    editviewlinks=editviewlinks)\n\ndef resolve():\n    """\n    """\n\n    filename = \'/\'.join(request.args)\n    # ## check if file is not there\n    path = apath(filename, r=request)\n    a = safe_read(path).split(\'\\n\')\n    try:\n        b = safe_read(path + \'.1\').split(\'\\n\')\n    except IOError:\n        session.flash = \'Other file, no longer there\'\n        redirect(URL(\'edit\', args=request.args))\n\n    d = difflib.ndiff(a, b)\n\n    def leading(line):\n        """  """\n\n        # TODO: we really need to comment this\n        z = \'\'\n        for (k, c) in enumerate(line):\n            if c == \' \':\n                z += \'&nbsp;\'\n            elif c == \' \\t\':\n                z += \'&nbsp;\'\n            elif k == 0 and c == \'?\':\n                pass\n            else:\n                break\n\n        return XML(z)\n\n    def getclass(item):\n        """ Determine item class """\n\n        if item[0] == \' \':\n            return \'normal\'\n        if item[0] == \'+\':\n            return \'plus\'\n        if item[0] == \'-\':\n            return \'minus\'\n\n    if request.vars:\n        c = \'\\n\'.join([item[2:].rstrip() for (i, item) in enumerate(d) if item[0] \\\n                           == \' \' or \'line%i\' % i in request.vars])\n        safe_write(path, c)\n        session.flash = \'files merged\'\n        redirect(URL(\'edit\', args=request.args))\n    else:\n        # Making the short circuit compatible with <= python2.4\n        gen_data = lambda index,item: not item[:1] in [\'+\',\'-\'] and "" \\\n                   or INPUT(_type=\'checkbox\',\n                            _name=\'line%i\' % index,\n                            value=item[0] == \'+\')\n\n        diff = TABLE(*[TR(TD(gen_data(i,item)),\n                          TD(item[0]),\n                          TD(leading(item[2:]),\n                          TT(item[2:].rstrip())), _class=getclass(item))\n                       for (i, item) in enumerate(d) if item[0] != \'?\'])\n\n    return dict(diff=diff, filename=filename)\n\n\ndef edit_language():\n    """ Edit language file """\n    app = get_app()\n    filename = \'/\'.join(request.args)\n    from gluon.languages import read_dict, write_dict\n    strings = read_dict(apath(filename, r=request))\n    keys = sorted(strings.keys(),lambda x,y: cmp(x.lower(), y.lower()))\n    rows = []\n    rows.append(H2(T(\'Original/Translation\')))\n\n    for key in keys:\n        name = md5_hash(key)\n        if key==strings[key]:\n            _class=\'untranslated\'\n        else:\n            _class=\'translated\'\n        if len(key) <= 40:\n            elem = INPUT(_type=\'text\', _name=name,value=strings[key],\n                         _size=70,_class=_class)\n        else:\n            elem = TEXTAREA(_name=name, value=strings[key], _cols=70,\n                            _rows=5, _class=_class)\n\n        # Making the short circuit compatible with <= python2.4\n        k = (strings[key] != key) and key or B(key)\n\n        rows.append(P(k, BR(), elem, TAG.BUTTON(T(\'delete\'),\n                            _onclick=\'return delkey("%s")\' % name), _id=name))\n\n    rows.append(INPUT(_type=\'submit\', _value=T(\'update\')))\n    form = FORM(*rows)\n    if form.accepts(request.vars, keepvalues=True):\n        strs = dict()\n        for key in keys:\n            name = md5_hash(key)\n            if form.vars[name]==chr(127): continue\n            strs[key] = form.vars[name]\n        write_dict(apath(filename, r=request), strs)\n        session.flash = T(\'file saved on %(time)s\', dict(time=time.ctime()))\n        redirect(URL(r=request,args=request.args))\n    return dict(app=request.args[0], filename=filename, form=form)\n\n\ndef about():\n    """ Read about info """\n    app = get_app()\n    # ## check if file is not there\n    about = safe_read(apath(\'%s/ABOUT\' % app, r=request))\n    license = safe_read(apath(\'%s/LICENSE\' % app, r=request))\n    return dict(app=app, about=MARKMIN(about), license=MARKMIN(license))\n\n\ndef design():\n    """ Application design handler """\n    app = get_app()\n\n    if not response.flash and app == request.application:\n        msg = T(\'ATTENTION: you cannot edit the running application!\')\n        response.flash = msg\n\n    if request.vars.pluginfile!=None and not isinstance(request.vars.pluginfile,str):\n        filename=os.path.basename(request.vars.pluginfile.filename)\n        if plugin_install(app, request.vars.pluginfile.file,\n                          request, filename):\n            session.flash = T(\'new plugin installed\')\n            redirect(URL(\'design\',args=app))\n        else:\n            session.flash = \\\n                T(\'unable to create application "%s"\', request.vars.filename)\n        redirect(URL(r=request))\n    elif isinstance(request.vars.pluginfile,str):\n        session.flash = T(\'plugin not specified\')\n        redirect(URL(r=request))\n\n\n    # If we have only pyc files it means that\n    # we cannot design\n    if os.path.exists(apath(\'%s/compiled\' % app, r=request)):\n        session.flash = \\\n            T(\'application is compiled and cannot be designed\')\n        redirect(URL(\'site\'))\n\n    # Get all models\n    models = listdir(apath(\'%s/models/\' % app, r=request), \'.*\\.py$\')\n    models=[x.replace(\'\\\\\',\'/\') for x in models]\n    defines = {}\n    for m in models:\n        data = safe_read(apath(\'%s/models/%s\' % (app, m), r=request))\n        defines[m] = regex_tables.findall(data)\n        defines[m].sort()\n\n    # Get all controllers\n    controllers = sorted(listdir(apath(\'%s/controllers/\' % app, r=request), \'.*\\.py$\'))\n    controllers = [x.replace(\'\\\\\',\'/\') for x in controllers]\n    functions = {}\n    for c in controllers:\n        data = safe_read(apath(\'%s/controllers/%s\' % (app, c), r=request))\n        items = regex_expose.findall(data)\n        functions[c] = items\n\n    # Get all views\n    views = sorted(listdir(apath(\'%s/views/\' % app, r=request), \'[\\w/\\-]+(\\.\\w+)+$\'))\n    views = [x.replace(\'\\\\\',\'/\') for x in views if not x.endswith(\'.bak\')]\n    extend = {}\n    include = {}\n    for c in views:\n        data = safe_read(apath(\'%s/views/%s\' % (app, c), r=request))\n        items = regex_extend.findall(data)\n\n        if items:\n            extend[c] = items[0][1]\n\n        items = regex_include.findall(data)\n        include[c] = [i[1] for i in items]\n\n    # Get all modules\n    modules = listdir(apath(\'%s/modules/\' % app, r=request), \'.*\\.py$\')\n    modules = modules=[x.replace(\'\\\\\',\'/\') for x in modules]\n    modules.sort()\n\n    # Get all static files\n    statics = listdir(apath(\'%s/static/\' % app, r=request), \'[^\\.#].*\')\n    statics = [x.replace(\'\\\\\',\'/\') for x in statics]\n    statics.sort()\n\n    # Get all languages\n    languages = listdir(apath(\'%s/languages/\' % app, r=request), \'[\\w-]*\\.py\')\n\n    #Get crontab\n    cronfolder = apath(\'%s/cron\' % app, r=request)\n    if not os.path.exists(cronfolder): os.mkdir(cronfolder)\n    crontab = apath(\'%s/cron/crontab\' % app, r=request)\n    if not os.path.exists(crontab):\n        safe_write(crontab, \'#crontab\')\n\n    plugins=[]\n    def filter_plugins(items,plugins):\n        plugins+=[item[7:].split(\'/\')[0].split(\'.\')[0] for item in items if item.startswith(\'plugin_\')]\n        plugins[:]=list(set(plugins))\n        plugins.sort()\n        return [item for item in items if not item.startswith(\'plugin_\')]\n\n    return dict(app=app,\n                models=filter_plugins(models,plugins),\n                defines=defines,\n                controllers=filter_plugins(controllers,plugins),\n                functions=functions,\n                views=filter_plugins(views,plugins),\n                modules=filter_plugins(modules,plugins),\n                extend=extend,\n                include=include,\n                statics=filter_plugins(statics,plugins),\n                languages=languages,\n                crontab=crontab,\n                plugins=plugins)\n\ndef delete_plugin():\n    """ Object delete handler """\n    app=request.args(0)\n    plugin = request.args(1)\n    plugin_name=\'plugin_\'+plugin\n    if \'nodelete\' in request.vars:\n        redirect(URL(\'design\',args=app))\n    elif \'delete\' in request.vars:\n        try:\n            for folder in [\'models\',\'views\',\'controllers\',\'static\',\'modules\']:\n                path=os.path.join(apath(app,r=request),folder)\n                for item in os.listdir(path):\n                    if item.startswith(plugin_name):\n                        filename=os.path.join(path,item)\n                        if os.path.isdir(filename):\n                            shutil.rmtree(filename)\n                        else:\n                            os.unlink(filename)\n            session.flash = T(\'plugin "%(plugin)s" deleted\',\n                              dict(plugin=plugin))\n        except Exception:\n            session.flash = T(\'unable to delete file plugin "%(plugin)s"\',\n                              dict(plugin=plugin))\n        redirect(URL(\'design\',args=request.args(0)))\n    return dict(plugin=plugin)\n\ndef plugin():\n    """ Application design handler """\n    app = get_app()\n    plugin = request.args(1)\n\n    if not response.flash and app == request.application:\n        msg = T(\'ATTENTION: you cannot edit the running application!\')\n        response.flash = msg\n\n    # If we have only pyc files it means that\n    # we cannot design\n    if os.path.exists(apath(\'%s/compiled\' % app, r=request)):\n        session.flash = \\\n            T(\'application is compiled and cannot be designed\')\n        redirect(URL(\'site\'))\n\n    # Get all models\n    models = listdir(apath(\'%s/models/\' % app, r=request), \'.*\\.py$\')\n    models=[x.replace(\'\\\\\',\'/\') for x in models]\n    defines = {}\n    for m in models:\n        data = safe_read(apath(\'%s/models/%s\' % (app, m), r=request))\n        defines[m] = regex_tables.findall(data)\n        defines[m].sort()\n\n    # Get all controllers\n    controllers = sorted(listdir(apath(\'%s/controllers/\' % app, r=request), \'.*\\.py$\'))\n    controllers = [x.replace(\'\\\\\',\'/\') for x in controllers]\n    functions = {}\n    for c in controllers:\n        data = safe_read(apath(\'%s/controllers/%s\' % (app, c), r=request))\n        items = regex_expose.findall(data)\n        functions[c] = items\n\n    # Get all views\n    views = sorted(listdir(apath(\'%s/views/\' % app, r=request), \'[\\w/\\-]+\\.\\w+$\'))\n    views = [x.replace(\'\\\\\',\'/\') for x in views]\n    extend = {}\n    include = {}\n    for c in views:\n        data = safe_read(apath(\'%s/views/%s\' % (app, c), r=request))\n        items = regex_extend.findall(data)\n        if items:\n            extend[c] = items[0][1]\n\n        items = regex_include.findall(data)\n        include[c] = [i[1] for i in items]\n\n    # Get all modules\n    modules = listdir(apath(\'%s/modules/\' % app, r=request), \'.*\\.py$\')\n    modules = modules=[x.replace(\'\\\\\',\'/\') for x in modules]\n    modules.sort()\n\n    # Get all static files\n    statics = listdir(apath(\'%s/static/\' % app, r=request), \'[^\\.#].*\')\n    statics = [x.replace(\'\\\\\',\'/\') for x in statics]\n    statics.sort()\n\n    # Get all languages\n    languages = listdir(apath(\'%s/languages/\' % app, r=request), \'[\\w-]*\\.py\')\n\n    #Get crontab\n    crontab = apath(\'%s/cron/crontab\' % app, r=request)\n    if not os.path.exists(crontab):\n        safe_write(crontab, \'#crontab\')\n\n    def filter_plugins(items):\n        regex=re.compile(\'^plugin_\'+plugin+\'(/.*|\\..*)?$\')\n        return [item for item in items if regex.match(item)]\n\n    return dict(app=app,\n                models=filter_plugins(models),\n                defines=defines,\n                controllers=filter_plugins(controllers),\n                functions=functions,\n                views=filter_plugins(views),\n                modules=filter_plugins(modules),\n                extend=extend,\n                include=include,\n                statics=filter_plugins(statics),\n                languages=languages,\n                crontab=crontab)\n\n\ndef create_file():\n    """ Create files handler """\n    try:\n        app = get_app(name=request.vars.location.split(\'/\')[0])\n        path = apath(request.vars.location, r=request)\n        filename = re.sub(\'[^\\w./-]+\', \'_\', request.vars.filename)\n\n        if path[-11:] == \'/languages/\':\n            # Handle language files\n            if len(filename) == 0:\n                raise SyntaxError\n            if not filename[-3:] == \'.py\':\n                filename += \'.py\'\n            app = path.split(\'/\')[-3]\n            path=os.path.join(apath(app, r=request),\'languages\',filename)\n            if not os.path.exists(path):\n                safe_write(path, \'\')\n            findT(apath(app, r=request), filename[:-3])\n            session.flash = T(\'language file "%(filename)s" created/updated\',\n                              dict(filename=filename))\n            redirect(request.vars.sender)\n\n        elif path[-8:] == \'/models/\':\n            # Handle python models\n            if not filename[-3:] == \'.py\':\n                filename += \'.py\'\n\n            if len(filename) == 3:\n                raise SyntaxError\n\n            text = \'# coding: utf8\\n\'\n\n        elif path[-13:] == \'/controllers/\':\n            # Handle python controllers\n            if not filename[-3:] == \'.py\':\n                filename += \'.py\'\n\n            if len(filename) == 3:\n                raise SyntaxError\n\n            text = \'# coding: utf8\\n# %s\\ndef index(): return dict(message="hello from %s")\'\n            text = text % (T(\'try something like\'), filename)\n\n        elif path[-7:] == \'/views/\':\n            if request.vars.plugin and not filename.startswith(\'plugin_%s/\' % request.vars.plugin):\n                filename = \'plugin_%s/%s\' % (request.vars.plugin, filename)\n            # Handle template (html) views\n            if filename.find(\'.\')<0:\n                filename += \'.html\'\n            extension = filename.split(\'.\')[-1].lower()\n\n            if len(filename) == 5:\n                raise SyntaxError\n\n            msg = T(\'This is the %(filename)s template\',\n                    dict(filename=filename))            \n            if extension == \'html\':\n                text = dedent("""\n                   {{extend \'layout.html\'}}\n                   <h1>%s</h1>\n                   {{=BEAUTIFY(response._vars)}}""" % msg)\n            else:\n                generic = os.path.join(path,\'generic.\'+extension)\n                if os.path.exists(generic):\n                    text = read_file(generic)\n                else:\n                    text = \'\'\n                \n        elif path[-9:] == \'/modules/\':\n            if request.vars.plugin and not filename.startswith(\'plugin_%s/\' % request.vars.plugin):\n                filename = \'plugin_%s/%s\' % (request.vars.plugin, filename)\n            # Handle python module files\n            if not filename[-3:] == \'.py\':\n                filename += \'.py\'\n\n            if len(filename) == 3:\n                raise SyntaxError\n\n            text = dedent("""\n                   #!/usr/bin/env python\n                   # coding: utf8\n                   from gluon import *\\n""")\n\n        elif path[-8:] == \'/static/\':\n            if request.vars.plugin and not filename.startswith(\'plugin_%s/\' % request.vars.plugin):\n                filename = \'plugin_%s/%s\' % (request.vars.plugin, filename)\n            text = \'\'\n        else:\n            redirect(request.vars.sender)\n\n        full_filename = os.path.join(path, filename)\n        dirpath = os.path.dirname(full_filename)\n\n        if not os.path.exists(dirpath):\n            os.makedirs(dirpath)\n\n        if os.path.exists(full_filename):\n            raise SyntaxError\n\n        safe_write(full_filename, text)\n        session.flash = T(\'file "%(filename)s" created\',\n                          dict(filename=full_filename[len(path):]))\n        redirect(URL(\'edit\',\n                 args=[os.path.join(request.vars.location, filename)]))\n    except Exception, e:\n        if not isinstance(e,HTTP):\n            session.flash = T(\'cannot create file\')\n\n    redirect(request.vars.sender)\n\n\ndef upload_file():\n    """ File uploading handler """\n\n    try:\n        filename = None\n        app = get_app(name=request.vars.location.split(\'/\')[0])\n        path = apath(request.vars.location, r=request)\n\n        if request.vars.filename:\n            filename = re.sub(\'[^\\w\\./]+\', \'_\', request.vars.filename)\n        else:\n            filename = os.path.split(request.vars.file.filename)[-1]\n\n        if path[-8:] == \'/models/\' and not filename[-3:] == \'.py\':\n            filename += \'.py\'\n\n        if path[-9:] == \'/modules/\' and not filename[-3:] == \'.py\':\n            filename += \'.py\'\n\n        if path[-13:] == \'/controllers/\' and not filename[-3:] == \'.py\':\n            filename += \'.py\'\n\n        if path[-7:] == \'/views/\' and not filename[-5:] == \'.html\':\n            filename += \'.html\'\n\n        if path[-11:] == \'/languages/\' and not filename[-3:] == \'.py\':\n            filename += \'.py\'\n\n        filename = os.path.join(path, filename)\n        dirpath = os.path.dirname(filename)\n\n        if not os.path.exists(dirpath):\n            os.makedirs(dirpath)\n\n        safe_write(filename, request.vars.file.file.read(), \'wb\')\n        session.flash = T(\'file "%(filename)s" uploaded\',\n                          dict(filename=filename[len(path):]))\n    except Exception:\n        if filename:\n            d = dict(filename = filename[len(path):])\n        else:\n            d = dict(filename = \'unkown\')\n        session.flash = T(\'cannot upload file "%(filename)s"\', d)\n\n    redirect(request.vars.sender)\n\n\ndef errors():\n    """ Error handler """\n    import operator\n    import os\n    import pickle\n    import hashlib\n\n    app = get_app()\n\n    method = request.args(1) or \'new\'\n\n\n    if method == \'new\':\n        errors_path = apath(\'%s/errors\' % app, r=request)\n\n        delete_hashes = []\n        for item in request.vars:\n            if item[:7] == \'delete_\':\n                delete_hashes.append(item[7:])\n\n        hash2error = dict()\n\n        for fn in listdir(errors_path, \'^\\w.*\'):\n            fullpath = os.path.join(errors_path, fn)\n            if not os.path.isfile(fullpath): continue\n            try:\n                fullpath_file = open(fullpath, \'r\')\n                try:\n                    error = pickle.load(fullpath_file)\n                finally:\n                    fullpath_file.close()\n            except IOError:\n                continue\n\n            hash = hashlib.md5(error[\'traceback\']).hexdigest()\n\n            if hash in delete_hashes:\n                os.unlink(fullpath)\n            else:\n                try:\n                    hash2error[hash][\'count\'] += 1\n                except KeyError:\n                    error_lines = error[\'traceback\'].split("\\n")\n                    last_line = error_lines[-2]\n                    error_causer = os.path.split(error[\'layer\'])[1]\n                    hash2error[hash] = dict(count=1, pickel=error,\n                                            causer=error_causer,\n                                            last_line=last_line,\n                                            hash=hash,ticket=fn)\n\n        decorated = [(x[\'count\'], x) for x in hash2error.values()]\n        decorated.sort(key=operator.itemgetter(0), reverse=True)\n\n        return dict(errors = [x[1] for x in decorated], app=app, method=method)\n    else:\n        for item in request.vars:\n            if item[:7] == \'delete_\':\n                os.unlink(apath(\'%s/errors/%s\' % (app, item[7:]), r=request))\n        func = lambda p: os.stat(apath(\'%s/errors/%s\' % \\\n                                           (app, p), r=request)).st_mtime\n        tickets = sorted(listdir(apath(\'%s/errors/\' % app, r=request), \'^\\w.*\'),\n                         key=func,\n                         reverse=True)\n\n        return dict(app=app, tickets=tickets, method=method)\n\n\ndef make_link(path):\n    """ Create a link from a path """\n    tryFile = path.replace(\'\\\\\', \'/\')\n\n    if os.path.isabs(tryFile) and os.path.isfile(tryFile):\n        (folder, filename) = os.path.split(tryFile)\n        (base, ext) = os.path.splitext(filename)\n        app = get_app()\n\n        editable = {\'controllers\': \'.py\', \'models\': \'.py\', \'views\': \'.html\'}\n        for key in editable.keys():\n            check_extension = folder.endswith("%s/%s" % (app,key))\n            if ext.lower() == editable[key] and check_extension:\n                return A(\'"\' + tryFile + \'"\',\n                         _href=URL(r=request,\n                         f=\'edit/%s/%s/%s\' % (app, key, filename))).xml()\n    return \'\'\n\n\ndef make_links(traceback):\n    """ Make links using the given traceback """\n\n    lwords = traceback.split(\'"\')\n\n    # Making the short circuit compatible with <= python2.4\n    result = (len(lwords) != 0) and lwords[0] or \'\'\n\n    i = 1\n\n    while i < len(lwords):\n        link = make_link(lwords[i])\n\n        if link == \'\':\n            result += \'"\' + lwords[i]\n        else:\n            result += link\n\n            if i + 1 < len(lwords):\n                result += lwords[i + 1]\n                i = i + 1\n\n        i = i + 1\n\n    return result\n\n\nclass TRACEBACK(object):\n    """ Generate the traceback """\n\n    def __init__(self, text):\n        """ TRACEBACK constructor """\n\n        self.s = make_links(CODE(text).xml())\n\n    def xml(self):\n        """ Returns the xml """\n\n        return self.s\n\n\ndef ticket():\n    """ Ticket handler """\n\n    if len(request.args) != 2:\n        session.flash = T(\'invalid ticket\')\n        redirect(URL(\'site\'))\n\n    app = get_app()\n    myversion = request.env.web2py_version\n    ticket = request.args[1]\n    e = RestrictedError()\n    e.load(request, app, ticket)\n\n    return dict(app=app,\n                ticket=ticket,\n                output=e.output,\n                traceback=(e.traceback and TRACEBACK(e.traceback)),\n                snapshot=e.snapshot,\n                code=e.code,\n                layer=e.layer,\n                myversion=myversion)\n\ndef error():\n    """ Generate a ticket (for testing) """\n    raise RuntimeError(\'admin ticket generator at your service\')\n\ndef update_languages():\n    """ Update available languages """\n\n    app = get_app()\n    update_all_languages(apath(app, r=request))\n    session.flash = T(\'Language files (static strings) updated\')\n    redirect(URL(\'design\',args=app,anchor=\'languages\'))\n\ndef twitter():\n    session.forget()\n    session._unlock(response)\n    import gluon.tools\n    import gluon.contrib.simplejson as sj\n    try:\n        if TWITTER_HASH:\n            page = gluon.tools.fetch(\'http://twitter.com/%s?format=json\'%TWITTER_HASH)\n            return sj.loads(page)[\'#timeline\']\n        else:\n            return \'disabled\'\n    except Exception, e:\n        return DIV(T(\'Unable to download because:\'),BR(),str(e))\n\ndef user():\n    if MULTI_USER_MODE:\n        if not db(db.auth_user).count():\n            auth.settings.registration_requires_approval = False            \n        return dict(form=auth())\n    else:\n        return dict(form=T("Disabled"))\n\ndef reload_routes():\n    """ Reload routes.py """\n    import gluon.rewrite\n    gluon.rewrite.load()\n    redirect(URL(\'site\'))\n\nresponse._vars=response._caller(check_version)\n'
p6
sS'snapshot'
p7
(dp8
S'exception'
p9
(dp10
S'__hash__'
p11
S"<method-wrapper '__hash__' of exceptions.TypeError object>"
p12
sS'__setattr__'
p13
S"<method-wrapper '__setattr__' of exceptions.TypeError object>"
p14
sS'__reduce_ex__'
p15
S'<built-in method __reduce_ex__ of exceptions.TypeError object>'
p16
sS'__getslice__'
p17
S"<method-wrapper '__getslice__' of exceptions.TypeError object>"
p18
sS'__getitem__'
p19
S"<method-wrapper '__getitem__' of exceptions.TypeError object>"
p20
sS'__setstate__'
p21
S'<built-in method __setstate__ of exceptions.TypeError object>'
p22
sS'__reduce__'
p23
S'<built-in method __reduce__ of exceptions.TypeError object>'
p24
sS'__str__'
p25
S"<method-wrapper '__str__' of exceptions.TypeError object>"
p26
sS'__format__'
p27
S'<built-in method __format__ of exceptions.TypeError object>'
p28
sS'__getattribute__'
p29
S"<method-wrapper '__getattribute__' of exceptions.TypeError object>"
p30
sS'__class__'
p31
S"<type 'exceptions.TypeError'>"
p32
sS'__unicode__'
p33
S'<built-in method __unicode__ of exceptions.TypeError object>'
p34
sS'__delattr__'
p35
S"<method-wrapper '__delattr__' of exceptions.TypeError object>"
p36
sS'__subclasshook__'
p37
S'<built-in method __subclasshook__ of type object>'
p38
sS'__repr__'
p39
S"<method-wrapper '__repr__' of exceptions.TypeError object>"
p40
sS'__dict__'
p41
S'{}'
p42
sS'args'
p43
S"('not all arguments converted during string formatting',)"
p44
sS'__sizeof__'
p45
S'<built-in method __sizeof__ of exceptions.TypeError object>'
p46
sS'__doc__'
p47
S"'Inappropriate argument type.'"
p48
sS'__init__'
p49
S"<method-wrapper '__init__' of exceptions.TypeError object>"
p50
sS'__new__'
p51
S'<built-in method __new__ of type object>'
p52
ssS'evalue'
p53
S'not all arguments converted during string formatting'
p54
sS'request'
p55
ccopy_reg
_reconstructor
p56
(cgluon.html
BEAUTIFY
p57
c__builtin__
object
p58
NtRp59
(dp60
S'attributes'
p61
(dp62
sS'components'
p63
(lp64
g56
(cgluon.html
TABLE
p65
g58
NtRp66
(dp67
g61
(dp68
S'level'
p69
I5
ssS'parent'
p70
Nsg63
(lp71
g56
(cgluon.html
TR
p72
g58
NtRp73
(dp74
g61
(dp75
sg70
g66
sg63
(lp76
g56
(cgluon.html
TD
p77
g58
NtRp78
(dp79
g61
(dp80
S'_style'
p81
S'font-weight:bold;'
p82
ssg70
g73
sg63
(lp83
S'ajax'
p84
asbag56
(g77
g58
NtRp85
(dp86
g61
(dp87
S'_valign'
p88
S'top'
p89
ssg70
g73
sg63
(lp90
S':'
asbag56
(g77
g58
NtRp91
(dp92
g61
(dp93
sg70
g73
sg63
(lp94
g56
(g57
g58
NtRp95
(dp96
g61
(dp97
g69
I5
ssg70
g91
sg63
(lp98
S'True'
p99
asbasbasbag56
(g72
g58
NtRp100
(dp101
g61
(dp102
sg70
g66
sg63
(lp103
g56
(g77
g58
NtRp104
(dp105
g61
(dp106
g81
g82
ssg70
g100
sg63
(lp107
S'application'
p108
asbag56
(g77
g58
NtRp109
(dp110
g61
(dp111
g88
g89
ssg70
g100
sg63
(lp112
S':'
asbag56
(g77
g58
NtRp113
(dp114
g61
(dp115
sg70
g100
sg63
(lp116
g56
(g57
g58
NtRp117
(dp118
g61
(dp119
g69
I5
ssg70
g113
sg63
(lp120
S'admin'
p121
asbasbasbag56
(g72
g58
NtRp122
(dp123
g61
(dp124
sg70
g66
sg63
(lp125
g56
(g77
g58
NtRp126
(dp127
g61
(dp128
g81
g82
ssg70
g122
sg63
(lp129
g43
asbag56
(g77
g58
NtRp130
(dp131
g61
(dp132
g88
g89
ssg70
g122
sg63
(lp133
S':'
asbag56
(g77
g58
NtRp134
(dp135
g61
(dp136
sg70
g122
sg63
(lp137
g56
(g57
g58
NtRp138
(dp139
g61
(dp140
g69
I5
ssg70
g134
sg63
(lp141
g56
(g65
g58
NtRp142
(dp143
g61
(dp144
g69
I4
ssg70
Nsg63
(lp145
sbasbasbasbag56
(g72
g58
NtRp146
(dp147
g61
(dp148
sg70
g66
sg63
(lp149
g56
(g77
g58
NtRp150
(dp151
g61
(dp152
g81
g82
ssg70
g146
sg63
(lp153
S'body'
p154
asbag56
(g77
g58
NtRp155
(dp156
g61
(dp157
g88
g89
ssg70
g146
sg63
(lp158
S':'
asbag56
(g77
g58
NtRp159
(dp160
g61
(dp161
sg70
g146
sg63
(lp162
g56
(g57
g58
NtRp163
(dp164
g61
(dp165
g69
I5
ssg70
g159
sg63
(lp166
S"<open file '<fdopen>', mode 'w+b' at 0x00000000040D9420>"
p167
asbasbasbag56
(g72
g58
NtRp168
(dp169
g61
(dp170
sg70
g66
sg63
(lp171
g56
(g77
g58
NtRp172
(dp173
g61
(dp174
g81
g82
ssg70
g168
sg63
(lp175
S'client'
p176
asbag56
(g77
g58
NtRp177
(dp178
g61
(dp179
g88
g89
ssg70
g168
sg63
(lp180
S':'
asbag56
(g77
g58
NtRp181
(dp182
g61
(dp183
sg70
g168
sg63
(lp184
g56
(g57
g58
NtRp185
(dp186
g61
(dp187
g69
I5
ssg70
g181
sg63
(lp188
S'127.0.0.1'
p189
asbasbasbag56
(g72
g58
NtRp190
(dp191
g61
(dp192
sg70
g66
sg63
(lp193
g56
(g77
g58
NtRp194
(dp195
g61
(dp196
g81
g82
ssg70
g190
sg63
(lp197
S'controller'
p198
asbag56
(g77
g58
NtRp199
(dp200
g61
(dp201
g88
g89
ssg70
g190
sg63
(lp202
S':'
asbag56
(g77
g58
NtRp203
(dp204
g61
(dp205
sg70
g190
sg63
(lp206
g56
(g57
g58
NtRp207
(dp208
g61
(dp209
g69
I5
ssg70
g203
sg63
(lp210
S'default'
p211
asbasbasbag56
(g72
g58
NtRp212
(dp213
g61
(dp214
sg70
g66
sg63
(lp215
g56
(g77
g58
NtRp216
(dp217
g61
(dp218
g81
g82
ssg70
g212
sg63
(lp219
S'cookies'
p220
asbag56
(g77
g58
NtRp221
(dp222
g61
(dp223
g88
g89
ssg70
g212
sg63
(lp224
S':'
asbag56
(g77
g58
NtRp225
(dp226
g61
(dp227
sg70
g212
sg63
(lp228
g56
(g57
g58
NtRp229
(dp230
g61
(dp231
g69
I5
ssg70
g225
sg63
(lp232
g56
(g65
g58
NtRp233
(dp234
g61
(dp235
g69
I4
ssg70
Nsg63
(lp236
g56
(g72
g58
NtRp237
(dp238
g61
(dp239
sg70
g233
sg63
(lp240
g56
(g77
g58
NtRp241
(dp242
g61
(dp243
g81
g82
ssg70
g237
sg63
(lp244
S'session_id_admin'
p245
asbag56
(g77
g58
NtRp246
(dp247
g61
(dp248
g88
g89
ssg70
g237
sg63
(lp249
S':'
asbag56
(g77
g58
NtRp250
(dp251
g61
(dp252
sg70
g237
sg63
(lp253
g56
(g57
g58
NtRp254
(dp255
g61
(dp256
g69
I4
ssg70
g250
sg63
(lp257
g56
(g65
g58
NtRp258
(dp259
g61
(dp260
g69
I3
ssg70
Nsg63
(lp261
g56
(g72
g58
NtRp262
(dp263
g61
(dp264
sg70
g258
sg63
(lp265
g56
(g77
g58
NtRp266
(dp267
g61
(dp268
g81
g82
ssg70
g262
sg63
(lp269
S'comment'
p270
asbag56
(g77
g58
NtRp271
(dp272
g61
(dp273
g88
g89
ssg70
g262
sg63
(lp274
S':'
asbag56
(g77
g58
NtRp275
(dp276
g61
(dp277
sg70
g262
sg63
(lp278
g56
(g57
g58
NtRp279
(dp280
g61
(dp281
g69
I3
ssg70
g275
sg63
(lp282
S''
asbasbasbag56
(g72
g58
NtRp283
(dp284
g61
(dp285
sg70
g258
sg63
(lp286
g56
(g77
g58
NtRp287
(dp288
g61
(dp289
g81
g82
ssg70
g283
sg63
(lp290
S'domain'
p291
asbag56
(g77
g58
NtRp292
(dp293
g61
(dp294
g88
g89
ssg70
g283
sg63
(lp295
S':'
asbag56
(g77
g58
NtRp296
(dp297
g61
(dp298
sg70
g283
sg63
(lp299
g56
(g57
g58
NtRp300
(dp301
g61
(dp302
g69
I3
ssg70
g296
sg63
(lp303
S''
asbasbasbag56
(g72
g58
NtRp304
(dp305
g61
(dp306
sg70
g258
sg63
(lp307
g56
(g77
g58
NtRp308
(dp309
g61
(dp310
g81
g82
ssg70
g304
sg63
(lp311
S'expires'
p312
asbag56
(g77
g58
NtRp313
(dp314
g61
(dp315
g88
g89
ssg70
g304
sg63
(lp316
S':'
asbag56
(g77
g58
NtRp317
(dp318
g61
(dp319
sg70
g304
sg63
(lp320
g56
(g57
g58
NtRp321
(dp322
g61
(dp323
g69
I3
ssg70
g317
sg63
(lp324
S''
asbasbasbag56
(g72
g58
NtRp325
(dp326
g61
(dp327
sg70
g258
sg63
(lp328
g56
(g77
g58
NtRp329
(dp330
g61
(dp331
g81
g82
ssg70
g325
sg63
(lp332
S'httponly'
p333
asbag56
(g77
g58
NtRp334
(dp335
g61
(dp336
g88
g89
ssg70
g325
sg63
(lp337
S':'
asbag56
(g77
g58
NtRp338
(dp339
g61
(dp340
sg70
g325
sg63
(lp341
g56
(g57
g58
NtRp342
(dp343
g61
(dp344
g69
I3
ssg70
g338
sg63
(lp345
S''
asbasbasbag56
(g72
g58
NtRp346
(dp347
g61
(dp348
sg70
g258
sg63
(lp349
g56
(g77
g58
NtRp350
(dp351
g61
(dp352
g81
g82
ssg70
g346
sg63
(lp353
S'max-age'
p354
asbag56
(g77
g58
NtRp355
(dp356
g61
(dp357
g88
g89
ssg70
g346
sg63
(lp358
S':'
asbag56
(g77
g58
NtRp359
(dp360
g61
(dp361
sg70
g346
sg63
(lp362
g56
(g57
g58
NtRp363
(dp364
g61
(dp365
g69
I3
ssg70
g359
sg63
(lp366
S''
asbasbasbag56
(g72
g58
NtRp367
(dp368
g61
(dp369
sg70
g258
sg63
(lp370
g56
(g77
g58
NtRp371
(dp372
g61
(dp373
g81
g82
ssg70
g367
sg63
(lp374
S'path'
p375
asbag56
(g77
g58
NtRp376
(dp377
g61
(dp378
g88
g89
ssg70
g367
sg63
(lp379
S':'
asbag56
(g77
g58
NtRp380
(dp381
g61
(dp382
sg70
g367
sg63
(lp383
g56
(g57
g58
NtRp384
(dp385
g61
(dp386
g69
I3
ssg70
g380
sg63
(lp387
S''
asbasbasbag56
(g72
g58
NtRp388
(dp389
g61
(dp390
sg70
g258
sg63
(lp391
g56
(g77
g58
NtRp392
(dp393
g61
(dp394
g81
g82
ssg70
g388
sg63
(lp395
S'secure'
p396
asbag56
(g77
g58
NtRp397
(dp398
g61
(dp399
g88
g89
ssg70
g388
sg63
(lp400
S':'
asbag56
(g77
g58
NtRp401
(dp402
g61
(dp403
sg70
g388
sg63
(lp404
g56
(g57
g58
NtRp405
(dp406
g61
(dp407
g69
I3
ssg70
g401
sg63
(lp408
S''
asbasbasbag56
(g72
g58
NtRp409
(dp410
g61
(dp411
sg70
g258
sg63
(lp412
g56
(g77
g58
NtRp413
(dp414
g61
(dp415
g81
g82
ssg70
g409
sg63
(lp416
S'version'
p417
asbag56
(g77
g58
NtRp418
(dp419
g61
(dp420
g88
g89
ssg70
g409
sg63
(lp421
S':'
asbag56
(g77
g58
NtRp422
(dp423
g61
(dp424
sg70
g409
sg63
(lp425
g56
(g57
g58
NtRp426
(dp427
g61
(dp428
g69
I3
ssg70
g422
sg63
(lp429
S''
asbasbasbasbasbasbasbasbasbasbasbag56
(g72
g58
NtRp430
(dp431
g61
(dp432
sg70
g66
sg63
(lp433
g56
(g77
g58
NtRp434
(dp435
g61
(dp436
g81
g82
ssg70
g430
sg63
(lp437
S'env'
p438
asbag56
(g77
g58
NtRp439
(dp440
g61
(dp441
g88
g89
ssg70
g430
sg63
(lp442
S':'
asbag56
(g77
g58
NtRp443
(dp444
g61
(dp445
sg70
g430
sg63
(lp446
g56
(g57
g58
NtRp447
(dp448
g61
(dp449
g69
I5
ssg70
g443
sg63
(lp450
g56
(g65
g58
NtRp451
(dp452
g61
(dp453
g69
I4
ssg70
Nsg63
(lp454
g56
(g72
g58
NtRp455
(dp456
g61
(dp457
sg70
g451
sg63
(lp458
g56
(g77
g58
NtRp459
(dp460
g61
(dp461
g81
g82
ssg70
g455
sg63
(lp462
S'app_folders'
p463
asbag56
(g77
g58
NtRp464
(dp465
g61
(dp466
g88
g89
ssg70
g455
sg63
(lp467
S':'
asbag56
(g77
g58
NtRp468
(dp469
g61
(dp470
sg70
g455
sg63
(lp471
g56
(g57
g58
NtRp472
(dp473
g61
(dp474
g69
I4
ssg70
g468
sg63
(lp475
S"set(['C:\\\\webapps\\\\dopbox\\\\Dropbox\\\\Eclipse\\\\OJDevSourceProject\\\\project\\\\web2py\\\\applications\\\\OJTest\\\\', 'C:\\\\webapps\\\\dopbox\\\\Dropbox\\\\Eclipse\\\\OJDevSourceProject\\\\project\\\\web2py\\\\applications\\\\ojtest\\\\', 'C:\\\\webapps\\\\dopbox\\\\Dropbox\\\\Eclipse\\\\OJDevSourceProject\\\\project\\\\web2py\\\\applications\\\\admin\\\\'])"
p476
asbasbasbag56
(g72
g58
NtRp477
(dp478
g61
(dp479
sg70
g451
sg63
(lp480
g56
(g77
g58
NtRp481
(dp482
g61
(dp483
g81
g82
ssg70
g477
sg63
(lp484
S'applications_parent'
p485
asbag56
(g77
g58
NtRp486
(dp487
g61
(dp488
g88
g89
ssg70
g477
sg63
(lp489
S':'
asbag56
(g77
g58
NtRp490
(dp491
g61
(dp492
sg70
g477
sg63
(lp493
g56
(g57
g58
NtRp494
(dp495
g61
(dp496
g69
I4
ssg70
g490
sg63
(lp497
S'C:\\webapps\\dopbox\\Dropbox\\Eclipse\\OJDevSourceProject\\project\\web2py'
p498
asbasbasbag56
(g72
g58
NtRp499
(dp500
g61
(dp501
sg70
g451
sg63
(lp502
g56
(g77
g58
NtRp503
(dp504
g61
(dp505
g81
g82
ssg70
g499
sg63
(lp506
S'cmd_args'
p507
asbag56
(g77
g58
NtRp508
(dp509
g61
(dp510
g88
g89
ssg70
g499
sg63
(lp511
S':'
asbag56
(g77
g58
NtRp512
(dp513
g61
(dp514
sg70
g499
sg63
(lp515
g56
(g57
g58
NtRp516
(dp517
g61
(dp518
g69
I4
ssg70
g512
sg63
(lp519
g56
(g65
g58
NtRp520
(dp521
g61
(dp522
g69
I3
ssg70
Nsg63
(lp523
sbasbasbasbag56
(g72
g58
NtRp524
(dp525
g61
(dp526
sg70
g451
sg63
(lp527
g56
(g77
g58
NtRp528
(dp529
g61
(dp530
g81
g82
ssg70
g524
sg63
(lp531
S'cmd_options'
p532
asbag56
(g77
g58
NtRp533
(dp534
g61
(dp535
g88
g89
ssg70
g524
sg63
(lp536
S':'
asbag56
(g77
g58
NtRp537
(dp538
g61
(dp539
sg70
g524
sg63
(lp540
g56
(g57
g58
NtRp541
(dp542
g61
(dp543
g69
I4
ssg70
g537
sg63
(lp544
S"<Values at 0x38bce08: {'verbose': False, 'ip': '127.0.0.1', 'shutdown_timeout': 5, 'taskbar': False, 'nocron': False, 'pid_filename': 'httpserver.pid', 'maxthreads': None, 'softcron': False, 'server_name': 'Sablasticus-hp', 'bpython': False, 'nogui': False, 'port': 8000, 'extcron': False, 'debuglevel': 30, 'test': None, 'folder': 'C:\\\\webapps\\\\dopbox\\\\Dropbox\\\\Eclipse\\\\OJDevSourceProject\\\\project\\\\web2py', 'config': '', 'import_models': False, 'winservice': '', 'shell': None, 'run': '', 'log_filename': 'httpserver.log', 'args': [''], 'ssl_ca_certificate': None, 'scheduler': None, 'profiler_filename': None, 'ssl_private_key': '', 'password': '<ask>', 'request_queue_size': 5, 'ssl_certificate': '', 'cronjob': False, 'plain': False, 'quiet': False, 'interfaces': None, 'minthreads': None, 'timeout': 10, 'numthreads': None, 'nobanner': False}>"
p545
asbasbasbag56
(g72
g58
NtRp546
(dp547
g61
(dp548
sg70
g451
sg63
(lp549
g56
(g77
g58
NtRp550
(dp551
g61
(dp552
g81
g82
ssg70
g546
sg63
(lp553
S'content_length'
p554
asbag56
(g77
g58
NtRp555
(dp556
g61
(dp557
g88
g89
ssg70
g546
sg63
(lp558
S':'
asbag56
(g77
g58
NtRp559
(dp560
g61
(dp561
sg70
g546
sg63
(lp562
g56
(g57
g58
NtRp563
(dp564
g61
(dp565
g69
I4
ssg70
g559
sg63
(lp566
S'0'
asbasbasbag56
(g72
g58
NtRp567
(dp568
g61
(dp569
sg70
g451
sg63
(lp570
g56
(g77
g58
NtRp571
(dp572
g61
(dp573
g81
g82
ssg70
g567
sg63
(lp574
S'db_sessions'
p575
asbag56
(g77
g58
NtRp576
(dp577
g61
(dp578
g88
g89
ssg70
g567
sg63
(lp579
S':'
asbag56
(g77
g58
NtRp580
(dp581
g61
(dp582
sg70
g567
sg63
(lp583
g56
(g57
g58
NtRp584
(dp585
g61
(dp586
g69
I4
ssg70
g580
sg63
(lp587
S'set([])'
p588
asbasbasbag56
(g72
g58
NtRp589
(dp590
g61
(dp591
sg70
g451
sg63
(lp592
g56
(g77
g58
NtRp593
(dp594
g61
(dp595
g81
g82
ssg70
g589
sg63
(lp596
S'debugging'
p597
asbag56
(g77
g58
NtRp598
(dp599
g61
(dp600
g88
g89
ssg70
g589
sg63
(lp601
S':'
asbag56
(g77
g58
NtRp602
(dp603
g61
(dp604
sg70
g589
sg63
(lp605
g56
(g57
g58
NtRp606
(dp607
g61
(dp608
g69
I4
ssg70
g602
sg63
(lp609
S'False'
p610
asbasbasbag56
(g72
g58
NtRp611
(dp612
g61
(dp613
sg70
g451
sg63
(lp614
g56
(g77
g58
NtRp615
(dp616
g61
(dp617
g81
g82
ssg70
g611
sg63
(lp618
S'gluon_parent'
p619
asbag56
(g77
g58
NtRp620
(dp621
g61
(dp622
g88
g89
ssg70
g611
sg63
(lp623
S':'
asbag56
(g77
g58
NtRp624
(dp625
g61
(dp626
sg70
g611
sg63
(lp627
g56
(g57
g58
NtRp628
(dp629
g61
(dp630
g69
I4
ssg70
g624
sg63
(lp631
S'C:\\webapps\\dopbox\\Dropbox\\Eclipse\\OJDevSourceProject\\project\\web2py'
p632
asbasbasbag56
(g72
g58
NtRp633
(dp634
g61
(dp635
sg70
g451
sg63
(lp636
g56
(g77
g58
NtRp637
(dp638
g61
(dp639
g81
g82
ssg70
g633
sg63
(lp640
S'http_accept'
p641
asbag56
(g77
g58
NtRp642
(dp643
g61
(dp644
g88
g89
ssg70
g633
sg63
(lp645
S':'
asbag56
(g77
g58
NtRp646
(dp647
g61
(dp648
sg70
g633
sg63
(lp649
g56
(g57
g58
NtRp650
(dp651
g61
(dp652
g69
I4
ssg70
g646
sg63
(lp653
S'*/*'
p654
asbasbasbag56
(g72
g58
NtRp655
(dp656
g61
(dp657
sg70
g451
sg63
(lp658
g56
(g77
g58
NtRp659
(dp660
g61
(dp661
g81
g82
ssg70
g655
sg63
(lp662
S'http_accept_charset'
p663
asbag56
(g77
g58
NtRp664
(dp665
g61
(dp666
g88
g89
ssg70
g655
sg63
(lp667
S':'
asbag56
(g77
g58
NtRp668
(dp669
g61
(dp670
sg70
g655
sg63
(lp671
g56
(g57
g58
NtRp672
(dp673
g61
(dp674
g69
I4
ssg70
g668
sg63
(lp675
S'ISO-8859-1,utf-8;q=0.7,*;q=0.3'
p676
asbasbasbag56
(g72
g58
NtRp677
(dp678
g61
(dp679
sg70
g451
sg63
(lp680
g56
(g77
g58
NtRp681
(dp682
g61
(dp683
g81
g82
ssg70
g677
sg63
(lp684
S'http_accept_encoding'
p685
asbag56
(g77
g58
NtRp686
(dp687
g61
(dp688
g88
g89
ssg70
g677
sg63
(lp689
S':'
asbag56
(g77
g58
NtRp690
(dp691
g61
(dp692
sg70
g677
sg63
(lp693
g56
(g57
g58
NtRp694
(dp695
g61
(dp696
g69
I4
ssg70
g690
sg63
(lp697
S'gzip,deflate,sdch'
p698
asbasbasbag56
(g72
g58
NtRp699
(dp700
g61
(dp701
sg70
g451
sg63
(lp702
g56
(g77
g58
NtRp703
(dp704
g61
(dp705
g81
g82
ssg70
g699
sg63
(lp706
S'http_accept_language'
p707
asbag56
(g77
g58
NtRp708
(dp709
g61
(dp710
g88
g89
ssg70
g699
sg63
(lp711
S':'
asbag56
(g77
g58
NtRp712
(dp713
g61
(dp714
sg70
g699
sg63
(lp715
g56
(g57
g58
NtRp716
(dp717
g61
(dp718
g69
I4
ssg70
g712
sg63
(lp719
S'en-GB,en-US;q=0.8,en;q=0.6'
p720
asbasbasbag56
(g72
g58
NtRp721
(dp722
g61
(dp723
sg70
g451
sg63
(lp724
g56
(g77
g58
NtRp725
(dp726
g61
(dp727
g81
g82
ssg70
g721
sg63
(lp728
S'http_connection'
p729
asbag56
(g77
g58
NtRp730
(dp731
g61
(dp732
g88
g89
ssg70
g721
sg63
(lp733
S':'
asbag56
(g77
g58
NtRp734
(dp735
g61
(dp736
sg70
g721
sg63
(lp737
g56
(g57
g58
NtRp738
(dp739
g61
(dp740
g69
I4
ssg70
g734
sg63
(lp741
S'keep-alive'
p742
asbasbasbag56
(g72
g58
NtRp743
(dp744
g61
(dp745
sg70
g451
sg63
(lp746
g56
(g77
g58
NtRp747
(dp748
g61
(dp749
g81
g82
ssg70
g743
sg63
(lp750
S'http_content_length'
p751
asbag56
(g77
g58
NtRp752
(dp753
g61
(dp754
g88
g89
ssg70
g743
sg63
(lp755
S':'
asbag56
(g77
g58
NtRp756
(dp757
g61
(dp758
sg70
g743
sg63
(lp759
g56
(g57
g58
NtRp760
(dp761
g61
(dp762
g69
I4
ssg70
g756
sg63
(lp763
S'0'
asbasbasbag56
(g72
g58
NtRp764
(dp765
g61
(dp766
sg70
g451
sg63
(lp767
g56
(g77
g58
NtRp768
(dp769
g61
(dp770
g81
g82
ssg70
g764
sg63
(lp771
S'http_cookie'
p772
asbag56
(g77
g58
NtRp773
(dp774
g61
(dp775
g88
g89
ssg70
g764
sg63
(lp776
S':'
asbag56
(g77
g58
NtRp777
(dp778
g61
(dp779
sg70
g764
sg63
(lp780
g56
(g57
g58
NtRp781
(dp782
g61
(dp783
g69
I4
ssg70
g777
sg63
(lp784
S'__utma_a2a=6359846849.1349104586.1317547660.1319653128.1320077843.5; __utma=96992031.1518381523.1326395213.1326395213.1326395213.1; __utmz=96992031.1326395213.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none); session_id_admin=127.0.0.1-3b96fdfa-561d-4180-af06-c5837c53b6d1'
p785
asbasbasbag56
(g72
g58
NtRp786
(dp787
g61
(dp788
sg70
g451
sg63
(lp789
g56
(g77
g58
NtRp790
(dp791
g61
(dp792
g81
g82
ssg70
g786
sg63
(lp793
S'http_host'
p794
asbag56
(g77
g58
NtRp795
(dp796
g61
(dp797
g88
g89
ssg70
g786
sg63
(lp798
S':'
asbag56
(g77
g58
NtRp799
(dp800
g61
(dp801
sg70
g786
sg63
(lp802
g56
(g57
g58
NtRp803
(dp804
g61
(dp805
g69
I4
ssg70
g799
sg63
(lp806
S'127.0.0.1:8000'
p807
asbasbasbag56
(g72
g58
NtRp808
(dp809
g61
(dp810
sg70
g451
sg63
(lp811
g56
(g77
g58
NtRp812
(dp813
g61
(dp814
g81
g82
ssg70
g808
sg63
(lp815
S'http_origin'
p816
asbag56
(g77
g58
NtRp817
(dp818
g61
(dp819
g88
g89
ssg70
g808
sg63
(lp820
S':'
asbag56
(g77
g58
NtRp821
(dp822
g61
(dp823
sg70
g808
sg63
(lp824
g56
(g57
g58
NtRp825
(dp826
g61
(dp827
g69
I4
ssg70
g821
sg63
(lp828
S'http://127.0.0.1:8000'
p829
asbasbasbag56
(g72
g58
NtRp830
(dp831
g61
(dp832
sg70
g451
sg63
(lp833
g56
(g77
g58
NtRp834
(dp835
g61
(dp836
g81
g82
ssg70
g830
sg63
(lp837
S'http_referer'
p838
asbag56
(g77
g58
NtRp839
(dp840
g61
(dp841
g88
g89
ssg70
g830
sg63
(lp842
S':'
asbag56
(g77
g58
NtRp843
(dp844
g61
(dp845
sg70
g830
sg63
(lp846
g56
(g57
g58
NtRp847
(dp848
g61
(dp849
g69
I4
ssg70
g843
sg63
(lp850
S'http://127.0.0.1:8000/admin/default/site'
p851
asbasbasbag56
(g72
g58
NtRp852
(dp853
g61
(dp854
sg70
g451
sg63
(lp855
g56
(g77
g58
NtRp856
(dp857
g61
(dp858
g81
g82
ssg70
g852
sg63
(lp859
S'http_user_agent'
p860
asbag56
(g77
g58
NtRp861
(dp862
g61
(dp863
g88
g89
ssg70
g852
sg63
(lp864
S':'
asbag56
(g77
g58
NtRp865
(dp866
g61
(dp867
sg70
g852
sg63
(lp868
g56
(g57
g58
NtRp869
(dp870
g61
(dp871
g69
I4
ssg70
g865
sg63
(lp872
S'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/535.7 (KHTML, like Gecko) Chrome/16.0.912.75 Safari/535.7'
p873
asbasbasbag56
(g72
g58
NtRp874
(dp875
g61
(dp876
sg70
g451
sg63
(lp877
g56
(g77
g58
NtRp878
(dp879
g61
(dp880
g81
g82
ssg70
g874
sg63
(lp881
S'http_x_requested_with'
p882
asbag56
(g77
g58
NtRp883
(dp884
g61
(dp885
g88
g89
ssg70
g874
sg63
(lp886
S':'
asbag56
(g77
g58
NtRp887
(dp888
g61
(dp889
sg70
g874
sg63
(lp890
g56
(g57
g58
NtRp891
(dp892
g61
(dp893
g69
I4
ssg70
g887
sg63
(lp894
S'XMLHttpRequest'
p895
asbasbasbag56
(g72
g58
NtRp896
(dp897
g61
(dp898
sg70
g451
sg63
(lp899
g56
(g77
g58
NtRp900
(dp901
g61
(dp902
g81
g82
ssg70
g896
sg63
(lp903
S'is_jython'
p904
asbag56
(g77
g58
NtRp905
(dp906
g61
(dp907
g88
g89
ssg70
g896
sg63
(lp908
S':'
asbag56
(g77
g58
NtRp909
(dp910
g61
(dp911
sg70
g896
sg63
(lp912
g56
(g57
g58
NtRp913
(dp914
g61
(dp915
g69
I4
ssg70
g909
sg63
(lp916
g610
asbasbasbag56
(g72
g58
NtRp917
(dp918
g61
(dp919
sg70
g451
sg63
(lp920
g56
(g77
g58
NtRp921
(dp922
g61
(dp923
g81
g82
ssg70
g917
sg63
(lp924
S'path_info'
p925
asbag56
(g77
g58
NtRp926
(dp927
g61
(dp928
g88
g89
ssg70
g917
sg63
(lp929
S':'
asbag56
(g77
g58
NtRp930
(dp931
g61
(dp932
sg70
g917
sg63
(lp933
g56
(g57
g58
NtRp934
(dp935
g61
(dp936
g69
I4
ssg70
g930
sg63
(lp937
S'/admin/default/check_version'
p938
asbasbasbag56
(g72
g58
NtRp939
(dp940
g61
(dp941
sg70
g451
sg63
(lp942
g56
(g77
g58
NtRp943
(dp944
g61
(dp945
g81
g82
ssg70
g939
sg63
(lp946
S'query_string'
p947
asbag56
(g77
g58
NtRp948
(dp949
g61
(dp950
g88
g89
ssg70
g939
sg63
(lp951
S':'
asbag56
(g77
g58
NtRp952
(dp953
g61
(dp954
sg70
g939
sg63
(lp955
g56
(g57
g58
NtRp956
(dp957
g61
(dp958
g69
I4
ssg70
g952
sg63
(lp959
S''
asbasbasbag56
(g72
g58
NtRp960
(dp961
g61
(dp962
sg70
g451
sg63
(lp963
g56
(g77
g58
NtRp964
(dp965
g61
(dp966
g81
g82
ssg70
g960
sg63
(lp967
S'remote_addr'
p968
asbag56
(g77
g58
NtRp969
(dp970
g61
(dp971
g88
g89
ssg70
g960
sg63
(lp972
S':'
asbag56
(g77
g58
NtRp973
(dp974
g61
(dp975
sg70
g960
sg63
(lp976
g56
(g57
g58
NtRp977
(dp978
g61
(dp979
g69
I4
ssg70
g973
sg63
(lp980
g189
asbasbasbag56
(g72
g58
NtRp981
(dp982
g61
(dp983
sg70
g451
sg63
(lp984
g56
(g77
g58
NtRp985
(dp986
g61
(dp987
g81
g82
ssg70
g981
sg63
(lp988
S'remote_port'
p989
asbag56
(g77
g58
NtRp990
(dp991
g61
(dp992
g88
g89
ssg70
g981
sg63
(lp993
S':'
asbag56
(g77
g58
NtRp994
(dp995
g61
(dp996
sg70
g981
sg63
(lp997
g56
(g57
g58
NtRp998
(dp999
g61
(dp1000
g69
I4
ssg70
g994
sg63
(lp1001
S'51567'
p1002
asbasbasbag56
(g72
g58
NtRp1003
(dp1004
g61
(dp1005
sg70
g451
sg63
(lp1006
g56
(g77
g58
NtRp1007
(dp1008
g61
(dp1009
g81
g82
ssg70
g1003
sg63
(lp1010
S'request_method'
p1011
asbag56
(g77
g58
NtRp1012
(dp1013
g61
(dp1014
g88
g89
ssg70
g1003
sg63
(lp1015
S':'
asbag56
(g77
g58
NtRp1016
(dp1017
g61
(dp1018
sg70
g1003
sg63
(lp1019
g56
(g57
g58
NtRp1020
(dp1021
g61
(dp1022
g69
I4
ssg70
g1016
sg63
(lp1023
S'POST'
p1024
asbasbasbag56
(g72
g58
NtRp1025
(dp1026
g61
(dp1027
sg70
g451
sg63
(lp1028
g56
(g77
g58
NtRp1029
(dp1030
g61
(dp1031
g81
g82
ssg70
g1025
sg63
(lp1032
S'request_uri'
p1033
asbag56
(g77
g58
NtRp1034
(dp1035
g61
(dp1036
g88
g89
ssg70
g1025
sg63
(lp1037
S':'
asbag56
(g77
g58
NtRp1038
(dp1039
g61
(dp1040
sg70
g1025
sg63
(lp1041
g56
(g57
g58
NtRp1042
(dp1043
g61
(dp1044
g69
I4
ssg70
g1038
sg63
(lp1045
g938
asbasbasbag56
(g72
g58
NtRp1046
(dp1047
g61
(dp1048
sg70
g451
sg63
(lp1049
g56
(g77
g58
NtRp1050
(dp1051
g61
(dp1052
g81
g82
ssg70
g1046
sg63
(lp1053
S'script_name'
p1054
asbag56
(g77
g58
NtRp1055
(dp1056
g61
(dp1057
g88
g89
ssg70
g1046
sg63
(lp1058
S':'
asbag56
(g77
g58
NtRp1059
(dp1060
g61
(dp1061
sg70
g1046
sg63
(lp1062
g56
(g57
g58
NtRp1063
(dp1064
g61
(dp1065
g69
I4
ssg70
g1059
sg63
(lp1066
S''
asbasbasbag56
(g72
g58
NtRp1067
(dp1068
g61
(dp1069
sg70
g451
sg63
(lp1070
g56
(g77
g58
NtRp1071
(dp1072
g61
(dp1073
g81
g82
ssg70
g1067
sg63
(lp1074
S'server_name'
p1075
asbag56
(g77
g58
NtRp1076
(dp1077
g61
(dp1078
g88
g89
ssg70
g1067
sg63
(lp1079
S':'
asbag56
(g77
g58
NtRp1080
(dp1081
g61
(dp1082
sg70
g1067
sg63
(lp1083
g56
(g57
g58
NtRp1084
(dp1085
g61
(dp1086
g69
I4
ssg70
g1080
sg63
(lp1087
S'Sablasticus-hp'
p1088
asbasbasbag56
(g72
g58
NtRp1089
(dp1090
g61
(dp1091
sg70
g451
sg63
(lp1092
g56
(g77
g58
NtRp1093
(dp1094
g61
(dp1095
g81
g82
ssg70
g1089
sg63
(lp1096
S'server_port'
p1097
asbag56
(g77
g58
NtRp1098
(dp1099
g61
(dp1100
g88
g89
ssg70
g1089
sg63
(lp1101
S':'
asbag56
(g77
g58
NtRp1102
(dp1103
g61
(dp1104
sg70
g1089
sg63
(lp1105
g56
(g57
g58
NtRp1106
(dp1107
g61
(dp1108
g69
I4
ssg70
g1102
sg63
(lp1109
S'8000'
p1110
asbasbasbag56
(g72
g58
NtRp1111
(dp1112
g61
(dp1113
sg70
g451
sg63
(lp1114
g56
(g77
g58
NtRp1115
(dp1116
g61
(dp1117
g81
g82
ssg70
g1111
sg63
(lp1118
S'server_protocol'
p1119
asbag56
(g77
g58
NtRp1120
(dp1121
g61
(dp1122
g88
g89
ssg70
g1111
sg63
(lp1123
S':'
asbag56
(g77
g58
NtRp1124
(dp1125
g61
(dp1126
sg70
g1111
sg63
(lp1127
g56
(g57
g58
NtRp1128
(dp1129
g61
(dp1130
g69
I4
ssg70
g1124
sg63
(lp1131
S'HTTP/1.1'
p1132
asbasbasbag56
(g72
g58
NtRp1133
(dp1134
g61
(dp1135
sg70
g451
sg63
(lp1136
g56
(g77
g58
NtRp1137
(dp1138
g61
(dp1139
g81
g82
ssg70
g1133
sg63
(lp1140
S'server_software'
p1141
asbag56
(g77
g58
NtRp1142
(dp1143
g61
(dp1144
g88
g89
ssg70
g1133
sg63
(lp1145
S':'
asbag56
(g77
g58
NtRp1146
(dp1147
g61
(dp1148
sg70
g1133
sg63
(lp1149
g56
(g57
g58
NtRp1150
(dp1151
g61
(dp1152
g69
I4
ssg70
g1146
sg63
(lp1153
S'Rocket 1.2.4'
p1154
asbasbasbag56
(g72
g58
NtRp1155
(dp1156
g61
(dp1157
sg70
g451
sg63
(lp1158
g56
(g77
g58
NtRp1159
(dp1160
g61
(dp1161
g81
g82
ssg70
g1155
sg63
(lp1162
S'web2py_crontype'
p1163
asbag56
(g77
g58
NtRp1164
(dp1165
g61
(dp1166
g88
g89
ssg70
g1155
sg63
(lp1167
S':'
asbag56
(g77
g58
NtRp1168
(dp1169
g61
(dp1170
sg70
g1155
sg63
(lp1171
g56
(g57
g58
NtRp1172
(dp1173
g61
(dp1174
g69
I4
ssg70
g1168
sg63
(lp1175
S'hard'
p1176
asbasbasbag56
(g72
g58
NtRp1177
(dp1178
g61
(dp1179
sg70
g451
sg63
(lp1180
g56
(g77
g58
NtRp1181
(dp1182
g61
(dp1183
g81
g82
ssg70
g1177
sg63
(lp1184
S'web2py_original_uri'
p1185
asbag56
(g77
g58
NtRp1186
(dp1187
g61
(dp1188
g88
g89
ssg70
g1177
sg63
(lp1189
S':'
asbag56
(g77
g58
NtRp1190
(dp1191
g61
(dp1192
sg70
g1177
sg63
(lp1193
g56
(g57
g58
NtRp1194
(dp1195
g61
(dp1196
g69
I4
ssg70
g1190
sg63
(lp1197
g938
asbasbasbag56
(g72
g58
NtRp1198
(dp1199
g61
(dp1200
sg70
g451
sg63
(lp1201
g56
(g77
g58
NtRp1202
(dp1203
g61
(dp1204
g81
g82
ssg70
g1198
sg63
(lp1205
S'web2py_path'
p1206
asbag56
(g77
g58
NtRp1207
(dp1208
g61
(dp1209
g88
g89
ssg70
g1198
sg63
(lp1210
S':'
asbag56
(g77
g58
NtRp1211
(dp1212
g61
(dp1213
sg70
g1198
sg63
(lp1214
g56
(g57
g58
NtRp1215
(dp1216
g61
(dp1217
g69
I4
ssg70
g1211
sg63
(lp1218
g498
asbasbasbag56
(g72
g58
NtRp1219
(dp1220
g61
(dp1221
sg70
g451
sg63
(lp1222
g56
(g77
g58
NtRp1223
(dp1224
g61
(dp1225
g81
g82
ssg70
g1219
sg63
(lp1226
S'web2py_version'
p1227
asbag56
(g77
g58
NtRp1228
(dp1229
g61
(dp1230
g88
g89
ssg70
g1219
sg63
(lp1231
S':'
asbag56
(g77
g58
NtRp1232
(dp1233
g61
(dp1234
sg70
g1219
sg63
(lp1235
g56
(g57
g58
NtRp1236
(dp1237
g61
(dp1238
g69
I4
ssg70
g1232
sg63
(lp1239
g56
(g65
g58
NtRp1240
(dp1241
g61
(dp1242
g69
I3
ssg70
Nsg63
(lp1243
g56
(g72
g58
NtRp1244
(dp1245
g61
(dp1246
sg70
g1240
sg63
(lp1247
g56
(g77
g58
NtRp1248
(dp1249
g61
(dp1250
sg70
g1244
sg63
(lp1251
g56
(g57
g58
NtRp1252
(dp1253
g61
(dp1254
g69
I3
ssg70
g1248
sg63
(lp1255
S'1'
asbasbasbag56
(g72
g58
NtRp1256
(dp1257
g61
(dp1258
sg70
g1240
sg63
(lp1259
g56
(g77
g58
NtRp1260
(dp1261
g61
(dp1262
sg70
g1256
sg63
(lp1263
g56
(g57
g58
NtRp1264
(dp1265
g61
(dp1266
g69
I3
ssg70
g1260
sg63
(lp1267
S'99'
p1268
asbasbasbag56
(g72
g58
NtRp1269
(dp1270
g61
(dp1271
sg70
g1240
sg63
(lp1272
g56
(g77
g58
NtRp1273
(dp1274
g61
(dp1275
sg70
g1269
sg63
(lp1276
g56
(g57
g58
NtRp1277
(dp1278
g61
(dp1279
g69
I3
ssg70
g1273
sg63
(lp1280
S'2'
asbasbasbag56
(g72
g58
NtRp1281
(dp1282
g61
(dp1283
sg70
g1240
sg63
(lp1284
g56
(g77
g58
NtRp1285
(dp1286
g61
(dp1287
sg70
g1281
sg63
(lp1288
g56
(g57
g58
NtRp1289
(dp1290
g61
(dp1291
g69
I3
ssg70
g1285
sg63
(lp1292
S'datetime.datetime(2011, 9, 26, 6, 55, 33)'
p1293
asbasbasbag56
(g72
g58
NtRp1294
(dp1295
g61
(dp1296
sg70
g1240
sg63
(lp1297
g56
(g77
g58
NtRp1298
(dp1299
g61
(dp1300
sg70
g1294
sg63
(lp1301
g56
(g57
g58
NtRp1302
(dp1303
g61
(dp1304
g69
I3
ssg70
g1298
sg63
(lp1305
S'stable'
p1306
asbasbasbasbasbasbasbag56
(g72
g58
NtRp1307
(dp1308
g61
(dp1309
sg70
g451
sg63
(lp1310
g56
(g77
g58
NtRp1311
(dp1312
g61
(dp1313
g81
g82
ssg70
g1307
sg63
(lp1314
S'wsgi_errors'
p1315
asbag56
(g77
g58
NtRp1316
(dp1317
g61
(dp1318
g88
g89
ssg70
g1307
sg63
(lp1319
S':'
asbag56
(g77
g58
NtRp1320
(dp1321
g61
(dp1322
sg70
g1307
sg63
(lp1323
g56
(g57
g58
NtRp1324
(dp1325
g61
(dp1326
g69
I4
ssg70
g1320
sg63
(lp1327
S"<open file '<stderr>', mode 'w' at 0x0000000001E2E1E0>"
p1328
asbasbasbag56
(g72
g58
NtRp1329
(dp1330
g61
(dp1331
sg70
g451
sg63
(lp1332
g56
(g77
g58
NtRp1333
(dp1334
g61
(dp1335
g81
g82
ssg70
g1329
sg63
(lp1336
S'wsgi_file_wrapper'
p1337
asbag56
(g77
g58
NtRp1338
(dp1339
g61
(dp1340
g88
g89
ssg70
g1329
sg63
(lp1341
S':'
asbag56
(g77
g58
NtRp1342
(dp1343
g61
(dp1344
sg70
g1329
sg63
(lp1345
g56
(g57
g58
NtRp1346
(dp1347
g61
(dp1348
g69
I4
ssg70
g1342
sg63
(lp1349
S'<class wsgiref.util.FileWrapper at 0x00000000037A0288>'
p1350
asbasbasbag56
(g72
g58
NtRp1351
(dp1352
g61
(dp1353
sg70
g451
sg63
(lp1354
g56
(g77
g58
NtRp1355
(dp1356
g61
(dp1357
g81
g82
ssg70
g1351
sg63
(lp1358
S'wsgi_input'
p1359
asbag56
(g77
g58
NtRp1360
(dp1361
g61
(dp1362
g88
g89
ssg70
g1351
sg63
(lp1363
S':'
asbag56
(g77
g58
NtRp1364
(dp1365
g61
(dp1366
sg70
g1351
sg63
(lp1367
g56
(g57
g58
NtRp1368
(dp1369
g61
(dp1370
g69
I4
ssg70
g1364
sg63
(lp1371
S'<socket._fileobject object at 0x00000000040DDA98>'
p1372
asbasbasbag56
(g72
g58
NtRp1373
(dp1374
g61
(dp1375
sg70
g451
sg63
(lp1376
g56
(g77
g58
NtRp1377
(dp1378
g61
(dp1379
g81
g82
ssg70
g1373
sg63
(lp1380
S'wsgi_multiprocess'
p1381
asbag56
(g77
g58
NtRp1382
(dp1383
g61
(dp1384
g88
g89
ssg70
g1373
sg63
(lp1385
S':'
asbag56
(g77
g58
NtRp1386
(dp1387
g61
(dp1388
sg70
g1373
sg63
(lp1389
g56
(g57
g58
NtRp1390
(dp1391
g61
(dp1392
g69
I4
ssg70
g1386
sg63
(lp1393
g610
asbasbasbag56
(g72
g58
NtRp1394
(dp1395
g61
(dp1396
sg70
g451
sg63
(lp1397
g56
(g77
g58
NtRp1398
(dp1399
g61
(dp1400
g81
g82
ssg70
g1394
sg63
(lp1401
S'wsgi_multithread'
p1402
asbag56
(g77
g58
NtRp1403
(dp1404
g61
(dp1405
g88
g89
ssg70
g1394
sg63
(lp1406
S':'
asbag56
(g77
g58
NtRp1407
(dp1408
g61
(dp1409
sg70
g1394
sg63
(lp1410
g56
(g57
g58
NtRp1411
(dp1412
g61
(dp1413
g69
I4
ssg70
g1407
sg63
(lp1414
g99
asbasbasbag56
(g72
g58
NtRp1415
(dp1416
g61
(dp1417
sg70
g451
sg63
(lp1418
g56
(g77
g58
NtRp1419
(dp1420
g61
(dp1421
g81
g82
ssg70
g1415
sg63
(lp1422
S'wsgi_run_once'
p1423
asbag56
(g77
g58
NtRp1424
(dp1425
g61
(dp1426
g88
g89
ssg70
g1415
sg63
(lp1427
S':'
asbag56
(g77
g58
NtRp1428
(dp1429
g61
(dp1430
sg70
g1415
sg63
(lp1431
g56
(g57
g58
NtRp1432
(dp1433
g61
(dp1434
g69
I4
ssg70
g1428
sg63
(lp1435
g610
asbasbasbag56
(g72
g58
NtRp1436
(dp1437
g61
(dp1438
sg70
g451
sg63
(lp1439
g56
(g77
g58
NtRp1440
(dp1441
g61
(dp1442
g81
g82
ssg70
g1436
sg63
(lp1443
S'wsgi_url_scheme'
p1444
asbag56
(g77
g58
NtRp1445
(dp1446
g61
(dp1447
g88
g89
ssg70
g1436
sg63
(lp1448
S':'
asbag56
(g77
g58
NtRp1449
(dp1450
g61
(dp1451
sg70
g1436
sg63
(lp1452
g56
(g57
g58
NtRp1453
(dp1454
g61
(dp1455
g69
I4
ssg70
g1449
sg63
(lp1456
S'http'
p1457
asbasbasbag56
(g72
g58
NtRp1458
(dp1459
g61
(dp1460
sg70
g451
sg63
(lp1461
g56
(g77
g58
NtRp1462
(dp1463
g61
(dp1464
g81
g82
ssg70
g1458
sg63
(lp1465
S'wsgi_version'
p1466
asbag56
(g77
g58
NtRp1467
(dp1468
g61
(dp1469
g88
g89
ssg70
g1458
sg63
(lp1470
S':'
asbag56
(g77
g58
NtRp1471
(dp1472
g61
(dp1473
sg70
g1458
sg63
(lp1474
g56
(g57
g58
NtRp1475
(dp1476
g61
(dp1477
g69
I4
ssg70
g1471
sg63
(lp1478
g56
(g65
g58
NtRp1479
(dp1480
g61
(dp1481
g69
I3
ssg70
Nsg63
(lp1482
g56
(g72
g58
NtRp1483
(dp1484
g61
(dp1485
sg70
g1479
sg63
(lp1486
g56
(g77
g58
NtRp1487
(dp1488
g61
(dp1489
sg70
g1483
sg63
(lp1490
g56
(g57
g58
NtRp1491
(dp1492
g61
(dp1493
g69
I3
ssg70
g1487
sg63
(lp1494
S'1'
asbasbasbag56
(g72
g58
NtRp1495
(dp1496
g61
(dp1497
sg70
g1479
sg63
(lp1498
g56
(g77
g58
NtRp1499
(dp1500
g61
(dp1501
sg70
g1495
sg63
(lp1502
g56
(g57
g58
NtRp1503
(dp1504
g61
(dp1505
g69
I3
ssg70
g1499
sg63
(lp1506
S'0'
asbasbasbasbasbasbasbasbasbasbasbag56
(g72
g58
NtRp1507
(dp1508
g61
(dp1509
sg70
g66
sg63
(lp1510
g56
(g77
g58
NtRp1511
(dp1512
g61
(dp1513
g81
g82
ssg70
g1507
sg63
(lp1514
S'extension'
p1515
asbag56
(g77
g58
NtRp1516
(dp1517
g61
(dp1518
g88
g89
ssg70
g1507
sg63
(lp1519
S':'
asbag56
(g77
g58
NtRp1520
(dp1521
g61
(dp1522
sg70
g1507
sg63
(lp1523
g56
(g57
g58
NtRp1524
(dp1525
g61
(dp1526
g69
I5
ssg70
g1520
sg63
(lp1527
S'html'
p1528
asbasbasbag56
(g72
g58
NtRp1529
(dp1530
g61
(dp1531
sg70
g66
sg63
(lp1532
g56
(g77
g58
NtRp1533
(dp1534
g61
(dp1535
g81
g82
ssg70
g1529
sg63
(lp1536
S'folder'
p1537
asbag56
(g77
g58
NtRp1538
(dp1539
g61
(dp1540
g88
g89
ssg70
g1529
sg63
(lp1541
S':'
asbag56
(g77
g58
NtRp1542
(dp1543
g61
(dp1544
sg70
g1529
sg63
(lp1545
g56
(g57
g58
NtRp1546
(dp1547
g61
(dp1548
g69
I5
ssg70
g1542
sg63
(lp1549
S'C:\\webapps\\dopbox\\Dropbox\\Eclipse\\OJDevSourceProject\\project\\web2py\\applications\\admin\\'
p1550
asbasbasbag56
(g72
g58
NtRp1551
(dp1552
g61
(dp1553
sg70
g66
sg63
(lp1554
g56
(g77
g58
NtRp1555
(dp1556
g61
(dp1557
g81
g82
ssg70
g1551
sg63
(lp1558
S'function'
p1559
asbag56
(g77
g58
NtRp1560
(dp1561
g61
(dp1562
g88
g89
ssg70
g1551
sg63
(lp1563
S':'
asbag56
(g77
g58
NtRp1564
(dp1565
g61
(dp1566
sg70
g1551
sg63
(lp1567
g56
(g57
g58
NtRp1568
(dp1569
g61
(dp1570
g69
I5
ssg70
g1564
sg63
(lp1571
S'check_version'
p1572
asbasbasbag56
(g72
g58
NtRp1573
(dp1574
g61
(dp1575
sg70
g66
sg63
(lp1576
g56
(g77
g58
NtRp1577
(dp1578
g61
(dp1579
g81
g82
ssg70
g1573
sg63
(lp1580
S'get_vars'
p1581
asbag56
(g77
g58
NtRp1582
(dp1583
g61
(dp1584
g88
g89
ssg70
g1573
sg63
(lp1585
S':'
asbag56
(g77
g58
NtRp1586
(dp1587
g61
(dp1588
sg70
g1573
sg63
(lp1589
g56
(g57
g58
NtRp1590
(dp1591
g61
(dp1592
g69
I5
ssg70
g1586
sg63
(lp1593
g56
(g65
g58
NtRp1594
(dp1595
g61
(dp1596
g69
I4
ssg70
Nsg63
(lp1597
sbasbasbasbag56
(g72
g58
NtRp1598
(dp1599
g61
(dp1600
sg70
g66
sg63
(lp1601
g56
(g77
g58
NtRp1602
(dp1603
g61
(dp1604
g81
g82
ssg70
g1598
sg63
(lp1605
S'global_settings'
p1606
asbag56
(g77
g58
NtRp1607
(dp1608
g61
(dp1609
g88
g89
ssg70
g1598
sg63
(lp1610
S':'
asbag56
(g77
g58
NtRp1611
(dp1612
g61
(dp1613
sg70
g1598
sg63
(lp1614
g56
(g57
g58
NtRp1615
(dp1616
g61
(dp1617
g69
I5
ssg70
g1611
sg63
(lp1618
g56
(g65
g58
NtRp1619
(dp1620
g61
(dp1621
g69
I4
ssg70
Nsg63
(lp1622
g56
(g72
g58
NtRp1623
(dp1624
g61
(dp1625
sg70
g1619
sg63
(lp1626
g56
(g77
g58
NtRp1627
(dp1628
g61
(dp1629
g81
g82
ssg70
g1623
sg63
(lp1630
g463
asbag56
(g77
g58
NtRp1631
(dp1632
g61
(dp1633
g88
g89
ssg70
g1623
sg63
(lp1634
S':'
asbag56
(g77
g58
NtRp1635
(dp1636
g61
(dp1637
sg70
g1623
sg63
(lp1638
g56
(g57
g58
NtRp1639
(dp1640
g61
(dp1641
g69
I4
ssg70
g1635
sg63
(lp1642
S"set(['C:\\\\webapps\\\\dopbox\\\\Dropbox\\\\Eclipse\\\\OJDevSourceProject\\\\project\\\\web2py\\\\applications\\\\OJTest\\\\', 'C:\\\\webapps\\\\dopbox\\\\Dropbox\\\\Eclipse\\\\OJDevSourceProject\\\\project\\\\web2py\\\\applications\\\\ojtest\\\\', 'C:\\\\webapps\\\\dopbox\\\\Dropbox\\\\Eclipse\\\\OJDevSourceProject\\\\project\\\\web2py\\\\applications\\\\admin\\\\'])"
p1643
asbasbasbag56
(g72
g58
NtRp1644
(dp1645
g61
(dp1646
sg70
g1619
sg63
(lp1647
g56
(g77
g58
NtRp1648
(dp1649
g61
(dp1650
g81
g82
ssg70
g1644
sg63
(lp1651
g485
asbag56
(g77
g58
NtRp1652
(dp1653
g61
(dp1654
g88
g89
ssg70
g1644
sg63
(lp1655
S':'
asbag56
(g77
g58
NtRp1656
(dp1657
g61
(dp1658
sg70
g1644
sg63
(lp1659
g56
(g57
g58
NtRp1660
(dp1661
g61
(dp1662
g69
I4
ssg70
g1656
sg63
(lp1663
g498
asbasbasbag56
(g72
g58
NtRp1664
(dp1665
g61
(dp1666
sg70
g1619
sg63
(lp1667
g56
(g77
g58
NtRp1668
(dp1669
g61
(dp1670
g81
g82
ssg70
g1664
sg63
(lp1671
g507
asbag56
(g77
g58
NtRp1672
(dp1673
g61
(dp1674
g88
g89
ssg70
g1664
sg63
(lp1675
S':'
asbag56
(g77
g58
NtRp1676
(dp1677
g61
(dp1678
sg70
g1664
sg63
(lp1679
g56
(g57
g58
NtRp1680
(dp1681
g61
(dp1682
g69
I4
ssg70
g1676
sg63
(lp1683
g56
(g65
g58
NtRp1684
(dp1685
g61
(dp1686
g69
I3
ssg70
Nsg63
(lp1687
sbasbasbasbag56
(g72
g58
NtRp1688
(dp1689
g61
(dp1690
sg70
g1619
sg63
(lp1691
g56
(g77
g58
NtRp1692
(dp1693
g61
(dp1694
g81
g82
ssg70
g1688
sg63
(lp1695
g532
asbag56
(g77
g58
NtRp1696
(dp1697
g61
(dp1698
g88
g89
ssg70
g1688
sg63
(lp1699
S':'
asbag56
(g77
g58
NtRp1700
(dp1701
g61
(dp1702
sg70
g1688
sg63
(lp1703
g56
(g57
g58
NtRp1704
(dp1705
g61
(dp1706
g69
I4
ssg70
g1700
sg63
(lp1707
S"<Values at 0x38bce08: {'verbose': False, 'ip': '127.0.0.1', 'shutdown_timeout': 5, 'taskbar': False, 'nocron': False, 'pid_filename': 'httpserver.pid', 'maxthreads': None, 'softcron': False, 'server_name': 'Sablasticus-hp', 'bpython': False, 'nogui': False, 'port': 8000, 'extcron': False, 'debuglevel': 30, 'test': None, 'folder': 'C:\\\\webapps\\\\dopbox\\\\Dropbox\\\\Eclipse\\\\OJDevSourceProject\\\\project\\\\web2py', 'config': '', 'import_models': False, 'winservice': '', 'shell': None, 'run': '', 'log_filename': 'httpserver.log', 'args': [''], 'ssl_ca_certificate': None, 'scheduler': None, 'profiler_filename': None, 'ssl_private_key': '', 'password': '<ask>', 'request_queue_size': 5, 'ssl_certificate': '', 'cronjob': False, 'plain': False, 'quiet': False, 'interfaces': None, 'minthreads': None, 'timeout': 10, 'numthreads': None, 'nobanner': False}>"
p1708
asbasbasbag56
(g72
g58
NtRp1709
(dp1710
g61
(dp1711
sg70
g1619
sg63
(lp1712
g56
(g77
g58
NtRp1713
(dp1714
g61
(dp1715
g81
g82
ssg70
g1709
sg63
(lp1716
g575
asbag56
(g77
g58
NtRp1717
(dp1718
g61
(dp1719
g88
g89
ssg70
g1709
sg63
(lp1720
S':'
asbag56
(g77
g58
NtRp1721
(dp1722
g61
(dp1723
sg70
g1709
sg63
(lp1724
g56
(g57
g58
NtRp1725
(dp1726
g61
(dp1727
g69
I4
ssg70
g1721
sg63
(lp1728
S'set([])'
p1729
asbasbasbag56
(g72
g58
NtRp1730
(dp1731
g61
(dp1732
sg70
g1619
sg63
(lp1733
g56
(g77
g58
NtRp1734
(dp1735
g61
(dp1736
g81
g82
ssg70
g1730
sg63
(lp1737
g597
asbag56
(g77
g58
NtRp1738
(dp1739
g61
(dp1740
g88
g89
ssg70
g1730
sg63
(lp1741
S':'
asbag56
(g77
g58
NtRp1742
(dp1743
g61
(dp1744
sg70
g1730
sg63
(lp1745
g56
(g57
g58
NtRp1746
(dp1747
g61
(dp1748
g69
I4
ssg70
g1742
sg63
(lp1749
g610
asbasbasbag56
(g72
g58
NtRp1750
(dp1751
g61
(dp1752
sg70
g1619
sg63
(lp1753
g56
(g77
g58
NtRp1754
(dp1755
g61
(dp1756
g81
g82
ssg70
g1750
sg63
(lp1757
g619
asbag56
(g77
g58
NtRp1758
(dp1759
g61
(dp1760
g88
g89
ssg70
g1750
sg63
(lp1761
S':'
asbag56
(g77
g58
NtRp1762
(dp1763
g61
(dp1764
sg70
g1750
sg63
(lp1765
g56
(g57
g58
NtRp1766
(dp1767
g61
(dp1768
g69
I4
ssg70
g1762
sg63
(lp1769
g632
asbasbasbag56
(g72
g58
NtRp1770
(dp1771
g61
(dp1772
sg70
g1619
sg63
(lp1773
g56
(g77
g58
NtRp1774
(dp1775
g61
(dp1776
g81
g82
ssg70
g1770
sg63
(lp1777
g904
asbag56
(g77
g58
NtRp1778
(dp1779
g61
(dp1780
g88
g89
ssg70
g1770
sg63
(lp1781
S':'
asbag56
(g77
g58
NtRp1782
(dp1783
g61
(dp1784
sg70
g1770
sg63
(lp1785
g56
(g57
g58
NtRp1786
(dp1787
g61
(dp1788
g69
I4
ssg70
g1782
sg63
(lp1789
g610
asbasbasbag56
(g72
g58
NtRp1790
(dp1791
g61
(dp1792
sg70
g1619
sg63
(lp1793
g56
(g77
g58
NtRp1794
(dp1795
g61
(dp1796
g81
g82
ssg70
g1790
sg63
(lp1797
g1163
asbag56
(g77
g58
NtRp1798
(dp1799
g61
(dp1800
g88
g89
ssg70
g1790
sg63
(lp1801
S':'
asbag56
(g77
g58
NtRp1802
(dp1803
g61
(dp1804
sg70
g1790
sg63
(lp1805
g56
(g57
g58
NtRp1806
(dp1807
g61
(dp1808
g69
I4
ssg70
g1802
sg63
(lp1809
g1176
asbasbasbag56
(g72
g58
NtRp1810
(dp1811
g61
(dp1812
sg70
g1619
sg63
(lp1813
g56
(g77
g58
NtRp1814
(dp1815
g61
(dp1816
g81
g82
ssg70
g1810
sg63
(lp1817
g1227
asbag56
(g77
g58
NtRp1818
(dp1819
g61
(dp1820
g88
g89
ssg70
g1810
sg63
(lp1821
S':'
asbag56
(g77
g58
NtRp1822
(dp1823
g61
(dp1824
sg70
g1810
sg63
(lp1825
g56
(g57
g58
NtRp1826
(dp1827
g61
(dp1828
g69
I4
ssg70
g1822
sg63
(lp1829
g56
(g65
g58
NtRp1830
(dp1831
g61
(dp1832
g69
I3
ssg70
Nsg63
(lp1833
g56
(g72
g58
NtRp1834
(dp1835
g61
(dp1836
sg70
g1830
sg63
(lp1837
g56
(g77
g58
NtRp1838
(dp1839
g61
(dp1840
sg70
g1834
sg63
(lp1841
g56
(g57
g58
NtRp1842
(dp1843
g61
(dp1844
g69
I3
ssg70
g1838
sg63
(lp1845
S'1'
asbasbasbag56
(g72
g58
NtRp1846
(dp1847
g61
(dp1848
sg70
g1830
sg63
(lp1849
g56
(g77
g58
NtRp1850
(dp1851
g61
(dp1852
sg70
g1846
sg63
(lp1853
g56
(g57
g58
NtRp1854
(dp1855
g61
(dp1856
g69
I3
ssg70
g1850
sg63
(lp1857
S'99'
p1858
asbasbasbag56
(g72
g58
NtRp1859
(dp1860
g61
(dp1861
sg70
g1830
sg63
(lp1862
g56
(g77
g58
NtRp1863
(dp1864
g61
(dp1865
sg70
g1859
sg63
(lp1866
g56
(g57
g58
NtRp1867
(dp1868
g61
(dp1869
g69
I3
ssg70
g1863
sg63
(lp1870
S'2'
asbasbasbag56
(g72
g58
NtRp1871
(dp1872
g61
(dp1873
sg70
g1830
sg63
(lp1874
g56
(g77
g58
NtRp1875
(dp1876
g61
(dp1877
sg70
g1871
sg63
(lp1878
g56
(g57
g58
NtRp1879
(dp1880
g61
(dp1881
g69
I3
ssg70
g1875
sg63
(lp1882
S'datetime.datetime(2011, 9, 26, 6, 55, 33)'
p1883
asbasbasbag56
(g72
g58
NtRp1884
(dp1885
g61
(dp1886
sg70
g1830
sg63
(lp1887
g56
(g77
g58
NtRp1888
(dp1889
g61
(dp1890
sg70
g1884
sg63
(lp1891
g56
(g57
g58
NtRp1892
(dp1893
g61
(dp1894
g69
I3
ssg70
g1888
sg63
(lp1895
g1306
asbasbasbasbasbasbasbasbasbasbasbag56
(g72
g58
NtRp1896
(dp1897
g61
(dp1898
sg70
g66
sg63
(lp1899
g56
(g77
g58
NtRp1900
(dp1901
g61
(dp1902
g81
g82
ssg70
g1896
sg63
(lp1903
S'is_https'
p1904
asbag56
(g77
g58
NtRp1905
(dp1906
g61
(dp1907
g88
g89
ssg70
g1896
sg63
(lp1908
S':'
asbag56
(g77
g58
NtRp1909
(dp1910
g61
(dp1911
sg70
g1896
sg63
(lp1912
g56
(g57
g58
NtRp1913
(dp1914
g61
(dp1915
g69
I5
ssg70
g1909
sg63
(lp1916
g610
asbasbasbag56
(g72
g58
NtRp1917
(dp1918
g61
(dp1919
sg70
g66
sg63
(lp1920
g56
(g77
g58
NtRp1921
(dp1922
g61
(dp1923
g81
g82
ssg70
g1917
sg63
(lp1924
S'is_local'
p1925
asbag56
(g77
g58
NtRp1926
(dp1927
g61
(dp1928
g88
g89
ssg70
g1917
sg63
(lp1929
S':'
asbag56
(g77
g58
NtRp1930
(dp1931
g61
(dp1932
sg70
g1917
sg63
(lp1933
g56
(g57
g58
NtRp1934
(dp1935
g61
(dp1936
g69
I5
ssg70
g1930
sg63
(lp1937
g99
asbasbasbag56
(g72
g58
NtRp1938
(dp1939
g61
(dp1940
sg70
g66
sg63
(lp1941
g56
(g77
g58
NtRp1942
(dp1943
g61
(dp1944
g81
g82
ssg70
g1938
sg63
(lp1945
S'is_restful'
p1946
asbag56
(g77
g58
NtRp1947
(dp1948
g61
(dp1949
g88
g89
ssg70
g1938
sg63
(lp1950
S':'
asbag56
(g77
g58
NtRp1951
(dp1952
g61
(dp1953
sg70
g1938
sg63
(lp1954
g56
(g57
g58
NtRp1955
(dp1956
g61
(dp1957
g69
I5
ssg70
g1951
sg63
(lp1958
g610
asbasbasbag56
(g72
g58
NtRp1959
(dp1960
g61
(dp1961
sg70
g66
sg63
(lp1962
g56
(g77
g58
NtRp1963
(dp1964
g61
(dp1965
g81
g82
ssg70
g1959
sg63
(lp1966
S'now'
p1967
asbag56
(g77
g58
NtRp1968
(dp1969
g61
(dp1970
g88
g89
ssg70
g1959
sg63
(lp1971
S':'
asbag56
(g77
g58
NtRp1972
(dp1973
g61
(dp1974
sg70
g1959
sg63
(lp1975
g56
(g57
g58
NtRp1976
(dp1977
g61
(dp1978
g69
I5
ssg70
g1972
sg63
(lp1979
S'datetime.datetime(2012, 1, 18, 11, 56, 13, 195000)'
p1980
asbasbasbag56
(g72
g58
NtRp1981
(dp1982
g61
(dp1983
sg70
g66
sg63
(lp1984
g56
(g77
g58
NtRp1985
(dp1986
g61
(dp1987
g81
g82
ssg70
g1981
sg63
(lp1988
S'post_vars'
p1989
asbag56
(g77
g58
NtRp1990
(dp1991
g61
(dp1992
g88
g89
ssg70
g1981
sg63
(lp1993
S':'
asbag56
(g77
g58
NtRp1994
(dp1995
g61
(dp1996
sg70
g1981
sg63
(lp1997
g56
(g57
g58
NtRp1998
(dp1999
g61
(dp2000
g69
I5
ssg70
g1994
sg63
(lp2001
g56
(g65
g58
NtRp2002
(dp2003
g61
(dp2004
g69
I4
ssg70
Nsg63
(lp2005
sbasbasbasbag56
(g72
g58
NtRp2006
(dp2007
g61
(dp2008
sg70
g66
sg63
(lp2009
g56
(g77
g58
NtRp2010
(dp2011
g61
(dp2012
g81
g82
ssg70
g2006
sg63
(lp2013
S'url'
p2014
asbag56
(g77
g58
NtRp2015
(dp2016
g61
(dp2017
g88
g89
ssg70
g2006
sg63
(lp2018
S':'
asbag56
(g77
g58
NtRp2019
(dp2020
g61
(dp2021
sg70
g2006
sg63
(lp2022
g56
(g57
g58
NtRp2023
(dp2024
g61
(dp2025
g69
I5
ssg70
g2019
sg63
(lp2026
S'/admin/default/check_version'
p2027
asbasbasbag56
(g72
g58
NtRp2028
(dp2029
g61
(dp2030
sg70
g66
sg63
(lp2031
g56
(g77
g58
NtRp2032
(dp2033
g61
(dp2034
g81
g82
ssg70
g2028
sg63
(lp2035
S'utcnow'
p2036
asbag56
(g77
g58
NtRp2037
(dp2038
g61
(dp2039
g88
g89
ssg70
g2028
sg63
(lp2040
S':'
asbag56
(g77
g58
NtRp2041
(dp2042
g61
(dp2043
sg70
g2028
sg63
(lp2044
g56
(g57
g58
NtRp2045
(dp2046
g61
(dp2047
g69
I5
ssg70
g2041
sg63
(lp2048
S'datetime.datetime(2012, 1, 18, 0, 56, 13, 195000)'
p2049
asbasbasbag56
(g72
g58
NtRp2050
(dp2051
g61
(dp2052
sg70
g66
sg63
(lp2053
g56
(g77
g58
NtRp2054
(dp2055
g61
(dp2056
g81
g82
ssg70
g2050
sg63
(lp2057
S'uuid'
p2058
asbag56
(g77
g58
NtRp2059
(dp2060
g61
(dp2061
g88
g89
ssg70
g2050
sg63
(lp2062
S':'
asbag56
(g77
g58
NtRp2063
(dp2064
g61
(dp2065
sg70
g2050
sg63
(lp2066
g56
(g57
g58
NtRp2067
(dp2068
g61
(dp2069
g69
I5
ssg70
g2063
sg63
(lp2070
S'admin/127.0.0.1.2012-01-18.11-56-13.997a40d3-6a1b-4294-b848-d25fbcab747c'
p2071
asbasbasbag56
(g72
g58
NtRp2072
(dp2073
g61
(dp2074
sg70
g66
sg63
(lp2075
g56
(g77
g58
NtRp2076
(dp2077
g61
(dp2078
g81
g82
ssg70
g2072
sg63
(lp2079
S'vars'
p2080
asbag56
(g77
g58
NtRp2081
(dp2082
g61
(dp2083
g88
g89
ssg70
g2072
sg63
(lp2084
S':'
asbag56
(g77
g58
NtRp2085
(dp2086
g61
(dp2087
sg70
g2072
sg63
(lp2088
g56
(g57
g58
NtRp2089
(dp2090
g61
(dp2091
g69
I5
ssg70
g2085
sg63
(lp2092
g56
(g65
g58
NtRp2093
(dp2094
g61
(dp2095
g69
I4
ssg70
Nsg63
(lp2096
sbasbasbasbag56
(g72
g58
NtRp2097
(dp2098
g61
(dp2099
sg70
g66
sg63
(lp2100
g56
(g77
g58
NtRp2101
(dp2102
g61
(dp2103
g81
g82
ssg70
g2097
sg63
(lp2104
S'wsgi'
p2105
asbag56
(g77
g58
NtRp2106
(dp2107
g61
(dp2108
g88
g89
ssg70
g2097
sg63
(lp2109
S':'
asbag56
(g77
g58
NtRp2110
(dp2111
g61
(dp2112
sg70
g2097
sg63
(lp2113
g56
(g57
g58
NtRp2114
(dp2115
g61
(dp2116
g69
I5
ssg70
g2110
sg63
(lp2117
g56
(g65
g58
NtRp2118
(dp2119
g61
(dp2120
g69
I4
ssg70
Nsg63
(lp2121
g56
(g72
g58
NtRp2122
(dp2123
g61
(dp2124
sg70
g2118
sg63
(lp2125
g56
(g77
g58
NtRp2126
(dp2127
g61
(dp2128
g81
g82
ssg70
g2122
sg63
(lp2129
S'environ'
p2130
asbag56
(g77
g58
NtRp2131
(dp2132
g61
(dp2133
g88
g89
ssg70
g2122
sg63
(lp2134
S':'
asbag56
(g77
g58
NtRp2135
(dp2136
g61
(dp2137
sg70
g2122
sg63
(lp2138
g56
(g57
g58
NtRp2139
(dp2140
g61
(dp2141
g69
I4
ssg70
g2135
sg63
(lp2142
g56
(g65
g58
NtRp2143
(dp2144
g61
(dp2145
g69
I3
ssg70
Nsg63
(lp2146
g56
(g72
g58
NtRp2147
(dp2148
g61
(dp2149
sg70
g2143
sg63
(lp2150
g56
(g77
g58
NtRp2151
(dp2152
g61
(dp2153
g81
g82
ssg70
g2147
sg63
(lp2154
S'CONTENT_LENGTH'
p2155
asbag56
(g77
g58
NtRp2156
(dp2157
g61
(dp2158
g88
g89
ssg70
g2147
sg63
(lp2159
S':'
asbag56
(g77
g58
NtRp2160
(dp2161
g61
(dp2162
sg70
g2147
sg63
(lp2163
g56
(g57
g58
NtRp2164
(dp2165
g61
(dp2166
g69
I3
ssg70
g2160
sg63
(lp2167
S'0'
asbasbasbag56
(g72
g58
NtRp2168
(dp2169
g61
(dp2170
sg70
g2143
sg63
(lp2171
g56
(g77
g58
NtRp2172
(dp2173
g61
(dp2174
g81
g82
ssg70
g2168
sg63
(lp2175
S'HTTP_ACCEPT'
p2176
asbag56
(g77
g58
NtRp2177
(dp2178
g61
(dp2179
g88
g89
ssg70
g2168
sg63
(lp2180
S':'
asbag56
(g77
g58
NtRp2181
(dp2182
g61
(dp2183
sg70
g2168
sg63
(lp2184
g56
(g57
g58
NtRp2185
(dp2186
g61
(dp2187
g69
I3
ssg70
g2181
sg63
(lp2188
g654
asbasbasbag56
(g72
g58
NtRp2189
(dp2190
g61
(dp2191
sg70
g2143
sg63
(lp2192
g56
(g77
g58
NtRp2193
(dp2194
g61
(dp2195
g81
g82
ssg70
g2189
sg63
(lp2196
S'HTTP_ACCEPT_CHARSET'
p2197
asbag56
(g77
g58
NtRp2198
(dp2199
g61
(dp2200
g88
g89
ssg70
g2189
sg63
(lp2201
S':'
asbag56
(g77
g58
NtRp2202
(dp2203
g61
(dp2204
sg70
g2189
sg63
(lp2205
g56
(g57
g58
NtRp2206
(dp2207
g61
(dp2208
g69
I3
ssg70
g2202
sg63
(lp2209
g676
asbasbasbag56
(g72
g58
NtRp2210
(dp2211
g61
(dp2212
sg70
g2143
sg63
(lp2213
g56
(g77
g58
NtRp2214
(dp2215
g61
(dp2216
g81
g82
ssg70
g2210
sg63
(lp2217
S'HTTP_ACCEPT_ENCODING'
p2218
asbag56
(g77
g58
NtRp2219
(dp2220
g61
(dp2221
g88
g89
ssg70
g2210
sg63
(lp2222
S':'
asbag56
(g77
g58
NtRp2223
(dp2224
g61
(dp2225
sg70
g2210
sg63
(lp2226
g56
(g57
g58
NtRp2227
(dp2228
g61
(dp2229
g69
I3
ssg70
g2223
sg63
(lp2230
g698
asbasbasbag56
(g72
g58
NtRp2231
(dp2232
g61
(dp2233
sg70
g2143
sg63
(lp2234
g56
(g77
g58
NtRp2235
(dp2236
g61
(dp2237
g81
g82
ssg70
g2231
sg63
(lp2238
S'HTTP_ACCEPT_LANGUAGE'
p2239
asbag56
(g77
g58
NtRp2240
(dp2241
g61
(dp2242
g88
g89
ssg70
g2231
sg63
(lp2243
S':'
asbag56
(g77
g58
NtRp2244
(dp2245
g61
(dp2246
sg70
g2231
sg63
(lp2247
g56
(g57
g58
NtRp2248
(dp2249
g61
(dp2250
g69
I3
ssg70
g2244
sg63
(lp2251
g720
asbasbasbag56
(g72
g58
NtRp2252
(dp2253
g61
(dp2254
sg70
g2143
sg63
(lp2255
g56
(g77
g58
NtRp2256
(dp2257
g61
(dp2258
g81
g82
ssg70
g2252
sg63
(lp2259
S'HTTP_CONNECTION'
p2260
asbag56
(g77
g58
NtRp2261
(dp2262
g61
(dp2263
g88
g89
ssg70
g2252
sg63
(lp2264
S':'
asbag56
(g77
g58
NtRp2265
(dp2266
g61
(dp2267
sg70
g2252
sg63
(lp2268
g56
(g57
g58
NtRp2269
(dp2270
g61
(dp2271
g69
I3
ssg70
g2265
sg63
(lp2272
g742
asbasbasbag56
(g72
g58
NtRp2273
(dp2274
g61
(dp2275
sg70
g2143
sg63
(lp2276
g56
(g77
g58
NtRp2277
(dp2278
g61
(dp2279
g81
g82
ssg70
g2273
sg63
(lp2280
S'HTTP_CONTENT_LENGTH'
p2281
asbag56
(g77
g58
NtRp2282
(dp2283
g61
(dp2284
g88
g89
ssg70
g2273
sg63
(lp2285
S':'
asbag56
(g77
g58
NtRp2286
(dp2287
g61
(dp2288
sg70
g2273
sg63
(lp2289
g56
(g57
g58
NtRp2290
(dp2291
g61
(dp2292
g69
I3
ssg70
g2286
sg63
(lp2293
S'0'
asbasbasbag56
(g72
g58
NtRp2294
(dp2295
g61
(dp2296
sg70
g2143
sg63
(lp2297
g56
(g77
g58
NtRp2298
(dp2299
g61
(dp2300
g81
g82
ssg70
g2294
sg63
(lp2301
S'HTTP_COOKIE'
p2302
asbag56
(g77
g58
NtRp2303
(dp2304
g61
(dp2305
g88
g89
ssg70
g2294
sg63
(lp2306
S':'
asbag56
(g77
g58
NtRp2307
(dp2308
g61
(dp2309
sg70
g2294
sg63
(lp2310
g56
(g57
g58
NtRp2311
(dp2312
g61
(dp2313
g69
I3
ssg70
g2307
sg63
(lp2314
g785
asbasbasbag56
(g72
g58
NtRp2315
(dp2316
g61
(dp2317
sg70
g2143
sg63
(lp2318
g56
(g77
g58
NtRp2319
(dp2320
g61
(dp2321
g81
g82
ssg70
g2315
sg63
(lp2322
S'HTTP_HOST'
p2323
asbag56
(g77
g58
NtRp2324
(dp2325
g61
(dp2326
g88
g89
ssg70
g2315
sg63
(lp2327
S':'
asbag56
(g77
g58
NtRp2328
(dp2329
g61
(dp2330
sg70
g2315
sg63
(lp2331
g56
(g57
g58
NtRp2332
(dp2333
g61
(dp2334
g69
I3
ssg70
g2328
sg63
(lp2335
g807
asbasbasbag56
(g72
g58
NtRp2336
(dp2337
g61
(dp2338
sg70
g2143
sg63
(lp2339
g56
(g77
g58
NtRp2340
(dp2341
g61
(dp2342
g81
g82
ssg70
g2336
sg63
(lp2343
S'HTTP_ORIGIN'
p2344
asbag56
(g77
g58
NtRp2345
(dp2346
g61
(dp2347
g88
g89
ssg70
g2336
sg63
(lp2348
S':'
asbag56
(g77
g58
NtRp2349
(dp2350
g61
(dp2351
sg70
g2336
sg63
(lp2352
g56
(g57
g58
NtRp2353
(dp2354
g61
(dp2355
g69
I3
ssg70
g2349
sg63
(lp2356
g829
asbasbasbag56
(g72
g58
NtRp2357
(dp2358
g61
(dp2359
sg70
g2143
sg63
(lp2360
g56
(g77
g58
NtRp2361
(dp2362
g61
(dp2363
g81
g82
ssg70
g2357
sg63
(lp2364
S'HTTP_REFERER'
p2365
asbag56
(g77
g58
NtRp2366
(dp2367
g61
(dp2368
g88
g89
ssg70
g2357
sg63
(lp2369
S':'
asbag56
(g77
g58
NtRp2370
(dp2371
g61
(dp2372
sg70
g2357
sg63
(lp2373
g56
(g57
g58
NtRp2374
(dp2375
g61
(dp2376
g69
I3
ssg70
g2370
sg63
(lp2377
g851
asbasbasbag56
(g72
g58
NtRp2378
(dp2379
g61
(dp2380
sg70
g2143
sg63
(lp2381
g56
(g77
g58
NtRp2382
(dp2383
g61
(dp2384
g81
g82
ssg70
g2378
sg63
(lp2385
S'HTTP_USER_AGENT'
p2386
asbag56
(g77
g58
NtRp2387
(dp2388
g61
(dp2389
g88
g89
ssg70
g2378
sg63
(lp2390
S':'
asbag56
(g77
g58
NtRp2391
(dp2392
g61
(dp2393
sg70
g2378
sg63
(lp2394
g56
(g57
g58
NtRp2395
(dp2396
g61
(dp2397
g69
I3
ssg70
g2391
sg63
(lp2398
g873
asbasbasbag56
(g72
g58
NtRp2399
(dp2400
g61
(dp2401
sg70
g2143
sg63
(lp2402
g56
(g77
g58
NtRp2403
(dp2404
g61
(dp2405
g81
g82
ssg70
g2399
sg63
(lp2406
S'HTTP_X_REQUESTED_WITH'
p2407
asbag56
(g77
g58
NtRp2408
(dp2409
g61
(dp2410
g88
g89
ssg70
g2399
sg63
(lp2411
S':'
asbag56
(g77
g58
NtRp2412
(dp2413
g61
(dp2414
sg70
g2399
sg63
(lp2415
g56
(g57
g58
NtRp2416
(dp2417
g61
(dp2418
g69
I3
ssg70
g2412
sg63
(lp2419
g895
asbasbasbag56
(g72
g58
NtRp2420
(dp2421
g61
(dp2422
sg70
g2143
sg63
(lp2423
g56
(g77
g58
NtRp2424
(dp2425
g61
(dp2426
g81
g82
ssg70
g2420
sg63
(lp2427
S'PATH_INFO'
p2428
asbag56
(g77
g58
NtRp2429
(dp2430
g61
(dp2431
g88
g89
ssg70
g2420
sg63
(lp2432
S':'
asbag56
(g77
g58
NtRp2433
(dp2434
g61
(dp2435
sg70
g2420
sg63
(lp2436
g56
(g57
g58
NtRp2437
(dp2438
g61
(dp2439
g69
I3
ssg70
g2433
sg63
(lp2440
g938
asbasbasbag56
(g72
g58
NtRp2441
(dp2442
g61
(dp2443
sg70
g2143
sg63
(lp2444
g56
(g77
g58
NtRp2445
(dp2446
g61
(dp2447
g81
g82
ssg70
g2441
sg63
(lp2448
S'QUERY_STRING'
p2449
asbag56
(g77
g58
NtRp2450
(dp2451
g61
(dp2452
g88
g89
ssg70
g2441
sg63
(lp2453
S':'
asbag56
(g77
g58
NtRp2454
(dp2455
g61
(dp2456
sg70
g2441
sg63
(lp2457
g56
(g57
g58
NtRp2458
(dp2459
g61
(dp2460
g69
I3
ssg70
g2454
sg63
(lp2461
S''
asbasbasbag56
(g72
g58
NtRp2462
(dp2463
g61
(dp2464
sg70
g2143
sg63
(lp2465
g56
(g77
g58
NtRp2466
(dp2467
g61
(dp2468
g81
g82
ssg70
g2462
sg63
(lp2469
S'REMOTE_ADDR'
p2470
asbag56
(g77
g58
NtRp2471
(dp2472
g61
(dp2473
g88
g89
ssg70
g2462
sg63
(lp2474
S':'
asbag56
(g77
g58
NtRp2475
(dp2476
g61
(dp2477
sg70
g2462
sg63
(lp2478
g56
(g57
g58
NtRp2479
(dp2480
g61
(dp2481
g69
I3
ssg70
g2475
sg63
(lp2482
g189
asbasbasbag56
(g72
g58
NtRp2483
(dp2484
g61
(dp2485
sg70
g2143
sg63
(lp2486
g56
(g77
g58
NtRp2487
(dp2488
g61
(dp2489
g81
g82
ssg70
g2483
sg63
(lp2490
S'REMOTE_PORT'
p2491
asbag56
(g77
g58
NtRp2492
(dp2493
g61
(dp2494
g88
g89
ssg70
g2483
sg63
(lp2495
S':'
asbag56
(g77
g58
NtRp2496
(dp2497
g61
(dp2498
sg70
g2483
sg63
(lp2499
g56
(g57
g58
NtRp2500
(dp2501
g61
(dp2502
g69
I3
ssg70
g2496
sg63
(lp2503
g1002
asbasbasbag56
(g72
g58
NtRp2504
(dp2505
g61
(dp2506
sg70
g2143
sg63
(lp2507
g56
(g77
g58
NtRp2508
(dp2509
g61
(dp2510
g81
g82
ssg70
g2504
sg63
(lp2511
S'REQUEST_METHOD'
p2512
asbag56
(g77
g58
NtRp2513
(dp2514
g61
(dp2515
g88
g89
ssg70
g2504
sg63
(lp2516
S':'
asbag56
(g77
g58
NtRp2517
(dp2518
g61
(dp2519
sg70
g2504
sg63
(lp2520
g56
(g57
g58
NtRp2521
(dp2522
g61
(dp2523
g69
I3
ssg70
g2517
sg63
(lp2524
g1024
asbasbasbag56
(g72
g58
NtRp2525
(dp2526
g61
(dp2527
sg70
g2143
sg63
(lp2528
g56
(g77
g58
NtRp2529
(dp2530
g61
(dp2531
g81
g82
ssg70
g2525
sg63
(lp2532
S'REQUEST_URI'
p2533
asbag56
(g77
g58
NtRp2534
(dp2535
g61
(dp2536
g88
g89
ssg70
g2525
sg63
(lp2537
S':'
asbag56
(g77
g58
NtRp2538
(dp2539
g61
(dp2540
sg70
g2525
sg63
(lp2541
g56
(g57
g58
NtRp2542
(dp2543
g61
(dp2544
g69
I3
ssg70
g2538
sg63
(lp2545
g938
asbasbasbag56
(g72
g58
NtRp2546
(dp2547
g61
(dp2548
sg70
g2143
sg63
(lp2549
g56
(g77
g58
NtRp2550
(dp2551
g61
(dp2552
g81
g82
ssg70
g2546
sg63
(lp2553
S'SCRIPT_NAME'
p2554
asbag56
(g77
g58
NtRp2555
(dp2556
g61
(dp2557
g88
g89
ssg70
g2546
sg63
(lp2558
S':'
asbag56
(g77
g58
NtRp2559
(dp2560
g61
(dp2561
sg70
g2546
sg63
(lp2562
g56
(g57
g58
NtRp2563
(dp2564
g61
(dp2565
g69
I3
ssg70
g2559
sg63
(lp2566
S''
asbasbasbag56
(g72
g58
NtRp2567
(dp2568
g61
(dp2569
sg70
g2143
sg63
(lp2570
g56
(g77
g58
NtRp2571
(dp2572
g61
(dp2573
g81
g82
ssg70
g2567
sg63
(lp2574
S'SERVER_NAME'
p2575
asbag56
(g77
g58
NtRp2576
(dp2577
g61
(dp2578
g88
g89
ssg70
g2567
sg63
(lp2579
S':'
asbag56
(g77
g58
NtRp2580
(dp2581
g61
(dp2582
sg70
g2567
sg63
(lp2583
g56
(g57
g58
NtRp2584
(dp2585
g61
(dp2586
g69
I3
ssg70
g2580
sg63
(lp2587
g1088
asbasbasbag56
(g72
g58
NtRp2588
(dp2589
g61
(dp2590
sg70
g2143
sg63
(lp2591
g56
(g77
g58
NtRp2592
(dp2593
g61
(dp2594
g81
g82
ssg70
g2588
sg63
(lp2595
S'SERVER_PORT'
p2596
asbag56
(g77
g58
NtRp2597
(dp2598
g61
(dp2599
g88
g89
ssg70
g2588
sg63
(lp2600
S':'
asbag56
(g77
g58
NtRp2601
(dp2602
g61
(dp2603
sg70
g2588
sg63
(lp2604
g56
(g57
g58
NtRp2605
(dp2606
g61
(dp2607
g69
I3
ssg70
g2601
sg63
(lp2608
g1110
asbasbasbag56
(g72
g58
NtRp2609
(dp2610
g61
(dp2611
sg70
g2143
sg63
(lp2612
g56
(g77
g58
NtRp2613
(dp2614
g61
(dp2615
g81
g82
ssg70
g2609
sg63
(lp2616
S'SERVER_PROTOCOL'
p2617
asbag56
(g77
g58
NtRp2618
(dp2619
g61
(dp2620
g88
g89
ssg70
g2609
sg63
(lp2621
S':'
asbag56
(g77
g58
NtRp2622
(dp2623
g61
(dp2624
sg70
g2609
sg63
(lp2625
g56
(g57
g58
NtRp2626
(dp2627
g61
(dp2628
g69
I3
ssg70
g2622
sg63
(lp2629
g1132
asbasbasbag56
(g72
g58
NtRp2630
(dp2631
g61
(dp2632
sg70
g2143
sg63
(lp2633
g56
(g77
g58
NtRp2634
(dp2635
g61
(dp2636
g81
g82
ssg70
g2630
sg63
(lp2637
S'SERVER_SOFTWARE'
p2638
asbag56
(g77
g58
NtRp2639
(dp2640
g61
(dp2641
g88
g89
ssg70
g2630
sg63
(lp2642
S':'
asbag56
(g77
g58
NtRp2643
(dp2644
g61
(dp2645
sg70
g2630
sg63
(lp2646
g56
(g57
g58
NtRp2647
(dp2648
g61
(dp2649
g69
I3
ssg70
g2643
sg63
(lp2650
g1154
asbasbasbag56
(g72
g58
NtRp2651
(dp2652
g61
(dp2653
sg70
g2143
sg63
(lp2654
g56
(g77
g58
NtRp2655
(dp2656
g61
(dp2657
g81
g82
ssg70
g2651
sg63
(lp2658
S'WEB2PY_ORIGINAL_URI'
p2659
asbag56
(g77
g58
NtRp2660
(dp2661
g61
(dp2662
g88
g89
ssg70
g2651
sg63
(lp2663
S':'
asbag56
(g77
g58
NtRp2664
(dp2665
g61
(dp2666
sg70
g2651
sg63
(lp2667
g56
(g57
g58
NtRp2668
(dp2669
g61
(dp2670
g69
I3
ssg70
g2664
sg63
(lp2671
g938
asbasbasbag56
(g72
g58
NtRp2672
(dp2673
g61
(dp2674
sg70
g2143
sg63
(lp2675
g56
(g77
g58
NtRp2676
(dp2677
g61
(dp2678
g81
g82
ssg70
g2672
sg63
(lp2679
S'wsgi.errors'
p2680
asbag56
(g77
g58
NtRp2681
(dp2682
g61
(dp2683
g88
g89
ssg70
g2672
sg63
(lp2684
S':'
asbag56
(g77
g58
NtRp2685
(dp2686
g61
(dp2687
sg70
g2672
sg63
(lp2688
g56
(g57
g58
NtRp2689
(dp2690
g61
(dp2691
g69
I3
ssg70
g2685
sg63
(lp2692
S"<open file '<stderr>', mode 'w' at 0x0000000001E2E1E0>"
p2693
asbasbasbag56
(g72
g58
NtRp2694
(dp2695
g61
(dp2696
sg70
g2143
sg63
(lp2697
g56
(g77
g58
NtRp2698
(dp2699
g61
(dp2700
g81
g82
ssg70
g2694
sg63
(lp2701
S'wsgi.file_wrapper'
p2702
asbag56
(g77
g58
NtRp2703
(dp2704
g61
(dp2705
g88
g89
ssg70
g2694
sg63
(lp2706
S':'
asbag56
(g77
g58
NtRp2707
(dp2708
g61
(dp2709
sg70
g2694
sg63
(lp2710
g56
(g57
g58
NtRp2711
(dp2712
g61
(dp2713
g69
I3
ssg70
g2707
sg63
(lp2714
S'<class wsgiref.util.FileWrapper at 0x00000000037A0288>'
p2715
asbasbasbag56
(g72
g58
NtRp2716
(dp2717
g61
(dp2718
sg70
g2143
sg63
(lp2719
g56
(g77
g58
NtRp2720
(dp2721
g61
(dp2722
g81
g82
ssg70
g2716
sg63
(lp2723
S'wsgi.input'
p2724
asbag56
(g77
g58
NtRp2725
(dp2726
g61
(dp2727
g88
g89
ssg70
g2716
sg63
(lp2728
S':'
asbag56
(g77
g58
NtRp2729
(dp2730
g61
(dp2731
sg70
g2716
sg63
(lp2732
g56
(g57
g58
NtRp2733
(dp2734
g61
(dp2735
g69
I3
ssg70
g2729
sg63
(lp2736
S"<open file '<fdopen>', mode 'w+b' at 0x00000000040D9420>"
p2737
asbasbasbag56
(g72
g58
NtRp2738
(dp2739
g61
(dp2740
sg70
g2143
sg63
(lp2741
g56
(g77
g58
NtRp2742
(dp2743
g61
(dp2744
g81
g82
ssg70
g2738
sg63
(lp2745
S'wsgi.multiprocess'
p2746
asbag56
(g77
g58
NtRp2747
(dp2748
g61
(dp2749
g88
g89
ssg70
g2738
sg63
(lp2750
S':'
asbag56
(g77
g58
NtRp2751
(dp2752
g61
(dp2753
sg70
g2738
sg63
(lp2754
g56
(g57
g58
NtRp2755
(dp2756
g61
(dp2757
g69
I3
ssg70
g2751
sg63
(lp2758
g610
asbasbasbag56
(g72
g58
NtRp2759
(dp2760
g61
(dp2761
sg70
g2143
sg63
(lp2762
g56
(g77
g58
NtRp2763
(dp2764
g61
(dp2765
g81
g82
ssg70
g2759
sg63
(lp2766
S'wsgi.multithread'
p2767
asbag56
(g77
g58
NtRp2768
(dp2769
g61
(dp2770
g88
g89
ssg70
g2759
sg63
(lp2771
S':'
asbag56
(g77
g58
NtRp2772
(dp2773
g61
(dp2774
sg70
g2759
sg63
(lp2775
g56
(g57
g58
NtRp2776
(dp2777
g61
(dp2778
g69
I3
ssg70
g2772
sg63
(lp2779
g99
asbasbasbag56
(g72
g58
NtRp2780
(dp2781
g61
(dp2782
sg70
g2143
sg63
(lp2783
g56
(g77
g58
NtRp2784
(dp2785
g61
(dp2786
g81
g82
ssg70
g2780
sg63
(lp2787
S'wsgi.run_once'
p2788
asbag56
(g77
g58
NtRp2789
(dp2790
g61
(dp2791
g88
g89
ssg70
g2780
sg63
(lp2792
S':'
asbag56
(g77
g58
NtRp2793
(dp2794
g61
(dp2795
sg70
g2780
sg63
(lp2796
g56
(g57
g58
NtRp2797
(dp2798
g61
(dp2799
g69
I3
ssg70
g2793
sg63
(lp2800
g610
asbasbasbag56
(g72
g58
NtRp2801
(dp2802
g61
(dp2803
sg70
g2143
sg63
(lp2804
g56
(g77
g58
NtRp2805
(dp2806
g61
(dp2807
g81
g82
ssg70
g2801
sg63
(lp2808
S'wsgi.url_scheme'
p2809
asbag56
(g77
g58
NtRp2810
(dp2811
g61
(dp2812
g88
g89
ssg70
g2801
sg63
(lp2813
S':'
asbag56
(g77
g58
NtRp2814
(dp2815
g61
(dp2816
sg70
g2801
sg63
(lp2817
g56
(g57
g58
NtRp2818
(dp2819
g61
(dp2820
g69
I3
ssg70
g2814
sg63
(lp2821
g1457
asbasbasbag56
(g72
g58
NtRp2822
(dp2823
g61
(dp2824
sg70
g2143
sg63
(lp2825
g56
(g77
g58
NtRp2826
(dp2827
g61
(dp2828
g81
g82
ssg70
g2822
sg63
(lp2829
S'wsgi.version'
p2830
asbag56
(g77
g58
NtRp2831
(dp2832
g61
(dp2833
g88
g89
ssg70
g2822
sg63
(lp2834
S':'
asbag56
(g77
g58
NtRp2835
(dp2836
g61
(dp2837
sg70
g2822
sg63
(lp2838
g56
(g57
g58
NtRp2839
(dp2840
g61
(dp2841
g69
I3
ssg70
g2835
sg63
(lp2842
S'1'
asbasbasbasbasbasbasbasbasbasbasbasbasbsS'frames'
p2843
(lp2844
(dp2845
S'file'
p2846
S'C:\\webapps\\dopbox\\Dropbox\\Eclipse\\OJDevSourceProject\\project\\web2py\\gluon\\restricted.py'
p2847
sS'dump'
p2848
(dp2849
S'environment'
p2850
S"{'A': <class 'gluon.html.A'>, 'ALLOW_TOGGLE': 'true', 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, 'CENTER': <class 'gluon.html.CENTER'>, 'CHECK_VERSION': True, ...}"
p2851
sS'ccode'
p2852
S'<code object <module> at 00000000043D79B0, file ...plications\\admin\\controllers/default.py", line 3>'
p2853
ssS'lnum'
p2854
I194
sS'lines'
p2855
(dp2856
I192
S'        else:'
p2857
sI193
S'            ccode = compile2(code,layer)'
p2858
sI194
S'        exec ccode in environment'
p2859
sI195
S'    except HTTP:'
p2860
sI196
S'        raise'
p2861
sI197
S'    except Exception, error:'
p2862
sI198
S'        # XXX Show exception in Wing IDE if running in debugger'
p2863
sI189
S'    try:'
p2864
sI190
S'        if type(code) == types.CodeType:'
p2865
sI191
S'            ccode = code'
p2866
ssS'call'
p2867
S"(code='# coding: utf8\\n\\nfrom gluon.admin import *\\nfrom g...\\n\\nresponse._vars=response._caller(check_version)\\n', environment={'A': <class 'gluon.html.A'>, 'ALLOW_TOGGLE': 'true', 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, 'CENTER': <class 'gluon.html.CENTER'>, 'CHECK_VERSION': True, ...}, layer=r'C:\\webapps\\dopbox\\Dropbox\\Eclipse\\OJDevSourcePro...\\web2py\\applications\\admin\\controllers/default.py')"
p2868
sS'func'
p2869
S'restricted'
p2870
sa(dp2871
g2846
S'C:\\webapps\\dopbox\\Dropbox\\Eclipse\\OJDevSourceProject\\project\\web2py\\applications\\admin\\controllers\\default.py'
p2872
sg2848
(dp2873
sg2854
I1225
sg2855
(dp2874
I1216
S'    else:'
p2875
sI1217
S'        return dict(form=T("Disabled"))'
p2876
sI1218
S''
sI1219
S'def reload_routes():'
p2877
sI1220
S'    """ Reload routes.py """'
p2878
sI1221
S'    import gluon.rewrite'
p2879
sI1222
S'    gluon.rewrite.load()'
p2880
sI1223
S"    redirect(URL('site'))"
p2881
sI1214
S'            auth.settings.registration_requires_approval = False'
p2882
sI1215
S'        return dict(form=auth())'
p2883
ssg2867
S'()'
p2884
sg2869
S'<module>'
p2885
sa(dp2886
g2846
S'C:\\webapps\\dopbox\\Dropbox\\Eclipse\\OJDevSourceProject\\project\\web2py\\gluon\\globals.py'
p2887
sg2848
(dp2888
S'self'
p2889
S'undefined'
p2890
sS'f'
S'<function check_version>'
p2891
ssg2854
I149
sg2855
(dp2892
I144
S'        self.meta = Storage()      # used by web2py_ajax.html'
p2893
sI145
S'        self.menu = []             # used by the default view layout'
p2894
sI146
S'        self.files = []            # used by web2py_ajax.html'
p2895
sI147
S'        self.generic_patterns = [] # patterns to allow generic views'
p2896
sI148
S'        self._vars = None'
p2897
sI149
S'        self._caller = lambda f: f()'
p2898
sI150
S'        self._view_environment = None'
p2899
sI151
S'        self._custom_commit = None'
p2900
sI152
S'        self._custom_rollback = None'
p2901
sI153
S''
ssg2867
S'(f=<function check_version>)'
p2902
sg2869
S'<lambda>'
p2903
sa(dp2904
g2846
S'C:\\webapps\\dopbox\\Dropbox\\Eclipse\\OJDevSourceProject\\project\\web2py\\applications\\admin\\controllers\\default.py'
p2905
sg2848
(dp2906
S'global XML'
p2907
S"<class 'gluon.html.XML'>"
p2908
sS'version_number'
p2909
S"(1, 99, 4, datetime.datetime(2011, 12, 14, 14, 46, 14), 'stable')"
p2910
ssg2854
I105
sg2855
(dp2911
I100
S"        return A(T('web2py is up to date'), _href=WEB2PY_URL)"
p2912
sI101
S'    elif platform.system().lower() in (\'windows\',\'win32\',\'win64\') and os.path.exists("web2py.exe"):'
p2913
sI102
S"        return SPAN('You should upgrade to version %s' % version_number)"
p2914
sI103
S'    else:'
p2915
sI104
S"        return sp_button(URL('upgrade_web2py'), T('upgrade now')) \\"
p2916
sI105
S'          + XML(\' <strong class="upgrade_version">%s</strong>\' % version_number)'
p2917
sI106
S''
sI107
S''
sI108
S'def logout():'
p2918
sI109
S'    """ Logout handler """'
p2919
ssg2867
S'()'
p2920
sg2869
S'check_version'
p2921
sasS'pyver'
p2922
S'Python 2.7.2: C:\\Python27\\python.exe'
p2923
sS'session'
p2924
g56
(g57
g58
NtRp2925
(dp2926
g61
(dp2927
sg63
(lp2928
g56
(g65
g58
NtRp2929
(dp2930
g61
(dp2931
g69
I5
ssg70
Nsg63
(lp2932
g56
(g72
g58
NtRp2933
(dp2934
g61
(dp2935
sg70
g2929
sg63
(lp2936
g56
(g77
g58
NtRp2937
(dp2938
g61
(dp2939
g81
g82
ssg70
g2933
sg63
(lp2940
S'authorized'
p2941
asbag56
(g77
g58
NtRp2942
(dp2943
g61
(dp2944
g88
g89
ssg70
g2933
sg63
(lp2945
S':'
asbag56
(g77
g58
NtRp2946
(dp2947
g61
(dp2948
sg70
g2933
sg63
(lp2949
g56
(g57
g58
NtRp2950
(dp2951
g61
(dp2952
g69
I5
ssg70
g2946
sg63
(lp2953
g99
asbasbasbag56
(g72
g58
NtRp2954
(dp2955
g61
(dp2956
sg70
g2929
sg63
(lp2957
g56
(g77
g58
NtRp2958
(dp2959
g61
(dp2960
g81
g82
ssg70
g2954
sg63
(lp2961
S'check_version'
p2962
asbag56
(g77
g58
NtRp2963
(dp2964
g61
(dp2965
g88
g89
ssg70
g2954
sg63
(lp2966
S':'
asbag56
(g77
g58
NtRp2967
(dp2968
g61
(dp2969
sg70
g2954
sg63
(lp2970
g56
(g57
g58
NtRp2971
(dp2972
g61
(dp2973
g69
I5
ssg70
g2967
sg63
(lp2974
g610
asbasbasbag56
(g72
g58
NtRp2975
(dp2976
g61
(dp2977
sg70
g2929
sg63
(lp2978
g56
(g77
g58
NtRp2979
(dp2980
g61
(dp2981
g81
g82
ssg70
g2975
sg63
(lp2982
S'last_time'
p2983
asbag56
(g77
g58
NtRp2984
(dp2985
g61
(dp2986
g88
g89
ssg70
g2975
sg63
(lp2987
S':'
asbag56
(g77
g58
NtRp2988
(dp2989
g61
(dp2990
sg70
g2975
sg63
(lp2991
g56
(g57
g58
NtRp2992
(dp2993
g61
(dp2994
g69
I5
ssg70
g2988
sg63
(lp2995
S'1326848173.21'
p2996
asbasbasbasbasbsS'etype'
p2997
S"<type 'exceptions.TypeError'>"
p2998
sS'date'
p2999
S'Wed Jan 18 11:56:14 2012'
p3000
sS'response'
p3001
g56
(g57
g58
NtRp3002
(dp3003
g61
(dp3004
sg63
(lp3005
g56
(g65
g58
NtRp3006
(dp3007
g61
(dp3008
g69
I5
ssg70
Nsg63
(lp3009
g56
(g72
g58
NtRp3010
(dp3011
g61
(dp3012
sg70
g3006
sg63
(lp3013
g56
(g77
g58
NtRp3014
(dp3015
g61
(dp3016
g81
g82
ssg70
g3010
sg63
(lp3017
g154
asbag56
(g77
g58
NtRp3018
(dp3019
g61
(dp3020
g88
g89
ssg70
g3010
sg63
(lp3021
S':'
asbag56
(g77
g58
NtRp3022
(dp3023
g61
(dp3024
sg70
g3010
sg63
(lp3025
g56
(g57
g58
NtRp3026
(dp3027
g61
(dp3028
g69
I5
ssg70
g3022
sg63
(lp3029
S'<cStringIO.StringO object at 0x00000000043B1E30>'
p3030
asbasbasbag56
(g72
g58
NtRp3031
(dp3032
g61
(dp3033
sg70
g3006
sg63
(lp3034
g56
(g77
g58
NtRp3035
(dp3036
g61
(dp3037
g81
g82
ssg70
g3031
sg63
(lp3038
g220
asbag56
(g77
g58
NtRp3039
(dp3040
g61
(dp3041
g88
g89
ssg70
g3031
sg63
(lp3042
S':'
asbag56
(g77
g58
NtRp3043
(dp3044
g61
(dp3045
sg70
g3031
sg63
(lp3046
g56
(g57
g58
NtRp3047
(dp3048
g61
(dp3049
g69
I5
ssg70
g3043
sg63
(lp3050
g56
(g65
g58
NtRp3051
(dp3052
g61
(dp3053
g69
I4
ssg70
Nsg63
(lp3054
g56
(g72
g58
NtRp3055
(dp3056
g61
(dp3057
sg70
g3051
sg63
(lp3058
g56
(g77
g58
NtRp3059
(dp3060
g61
(dp3061
g81
g82
ssg70
g3055
sg63
(lp3062
S'session_id_admin'
p3063
asbag56
(g77
g58
NtRp3064
(dp3065
g61
(dp3066
g88
g89
ssg70
g3055
sg63
(lp3067
S':'
asbag56
(g77
g58
NtRp3068
(dp3069
g61
(dp3070
sg70
g3055
sg63
(lp3071
g56
(g57
g58
NtRp3072
(dp3073
g61
(dp3074
g69
I4
ssg70
g3068
sg63
(lp3075
g56
(g65
g58
NtRp3076
(dp3077
g61
(dp3078
g69
I3
ssg70
Nsg63
(lp3079
g56
(g72
g58
NtRp3080
(dp3081
g61
(dp3082
sg70
g3076
sg63
(lp3083
g56
(g77
g58
NtRp3084
(dp3085
g61
(dp3086
g81
g82
ssg70
g3080
sg63
(lp3087
g270
asbag56
(g77
g58
NtRp3088
(dp3089
g61
(dp3090
g88
g89
ssg70
g3080
sg63
(lp3091
S':'
asbag56
(g77
g58
NtRp3092
(dp3093
g61
(dp3094
sg70
g3080
sg63
(lp3095
g56
(g57
g58
NtRp3096
(dp3097
g61
(dp3098
g69
I3
ssg70
g3092
sg63
(lp3099
S''
asbasbasbag56
(g72
g58
NtRp3100
(dp3101
g61
(dp3102
sg70
g3076
sg63
(lp3103
g56
(g77
g58
NtRp3104
(dp3105
g61
(dp3106
g81
g82
ssg70
g3100
sg63
(lp3107
g291
asbag56
(g77
g58
NtRp3108
(dp3109
g61
(dp3110
g88
g89
ssg70
g3100
sg63
(lp3111
S':'
asbag56
(g77
g58
NtRp3112
(dp3113
g61
(dp3114
sg70
g3100
sg63
(lp3115
g56
(g57
g58
NtRp3116
(dp3117
g61
(dp3118
g69
I3
ssg70
g3112
sg63
(lp3119
S''
asbasbasbag56
(g72
g58
NtRp3120
(dp3121
g61
(dp3122
sg70
g3076
sg63
(lp3123
g56
(g77
g58
NtRp3124
(dp3125
g61
(dp3126
g81
g82
ssg70
g3120
sg63
(lp3127
g312
asbag56
(g77
g58
NtRp3128
(dp3129
g61
(dp3130
g88
g89
ssg70
g3120
sg63
(lp3131
S':'
asbag56
(g77
g58
NtRp3132
(dp3133
g61
(dp3134
sg70
g3120
sg63
(lp3135
g56
(g57
g58
NtRp3136
(dp3137
g61
(dp3138
g69
I3
ssg70
g3132
sg63
(lp3139
S''
asbasbasbag56
(g72
g58
NtRp3140
(dp3141
g61
(dp3142
sg70
g3076
sg63
(lp3143
g56
(g77
g58
NtRp3144
(dp3145
g61
(dp3146
g81
g82
ssg70
g3140
sg63
(lp3147
g333
asbag56
(g77
g58
NtRp3148
(dp3149
g61
(dp3150
g88
g89
ssg70
g3140
sg63
(lp3151
S':'
asbag56
(g77
g58
NtRp3152
(dp3153
g61
(dp3154
sg70
g3140
sg63
(lp3155
g56
(g57
g58
NtRp3156
(dp3157
g61
(dp3158
g69
I3
ssg70
g3152
sg63
(lp3159
S''
asbasbasbag56
(g72
g58
NtRp3160
(dp3161
g61
(dp3162
sg70
g3076
sg63
(lp3163
g56
(g77
g58
NtRp3164
(dp3165
g61
(dp3166
g81
g82
ssg70
g3160
sg63
(lp3167
g354
asbag56
(g77
g58
NtRp3168
(dp3169
g61
(dp3170
g88
g89
ssg70
g3160
sg63
(lp3171
S':'
asbag56
(g77
g58
NtRp3172
(dp3173
g61
(dp3174
sg70
g3160
sg63
(lp3175
g56
(g57
g58
NtRp3176
(dp3177
g61
(dp3178
g69
I3
ssg70
g3172
sg63
(lp3179
S''
asbasbasbag56
(g72
g58
NtRp3180
(dp3181
g61
(dp3182
sg70
g3076
sg63
(lp3183
g56
(g77
g58
NtRp3184
(dp3185
g61
(dp3186
g81
g82
ssg70
g3180
sg63
(lp3187
g375
asbag56
(g77
g58
NtRp3188
(dp3189
g61
(dp3190
g88
g89
ssg70
g3180
sg63
(lp3191
S':'
asbag56
(g77
g58
NtRp3192
(dp3193
g61
(dp3194
sg70
g3180
sg63
(lp3195
g56
(g57
g58
NtRp3196
(dp3197
g61
(dp3198
g69
I3
ssg70
g3192
sg63
(lp3199
S'/'
asbasbasbag56
(g72
g58
NtRp3200
(dp3201
g61
(dp3202
sg70
g3076
sg63
(lp3203
g56
(g77
g58
NtRp3204
(dp3205
g61
(dp3206
g81
g82
ssg70
g3200
sg63
(lp3207
g396
asbag56
(g77
g58
NtRp3208
(dp3209
g61
(dp3210
g88
g89
ssg70
g3200
sg63
(lp3211
S':'
asbag56
(g77
g58
NtRp3212
(dp3213
g61
(dp3214
sg70
g3200
sg63
(lp3215
g56
(g57
g58
NtRp3216
(dp3217
g61
(dp3218
g69
I3
ssg70
g3212
sg63
(lp3219
S''
asbasbasbag56
(g72
g58
NtRp3220
(dp3221
g61
(dp3222
sg70
g3076
sg63
(lp3223
g56
(g77
g58
NtRp3224
(dp3225
g61
(dp3226
g81
g82
ssg70
g3220
sg63
(lp3227
g417
asbag56
(g77
g58
NtRp3228
(dp3229
g61
(dp3230
g88
g89
ssg70
g3220
sg63
(lp3231
S':'
asbag56
(g77
g58
NtRp3232
(dp3233
g61
(dp3234
sg70
g3220
sg63
(lp3235
g56
(g57
g58
NtRp3236
(dp3237
g61
(dp3238
g69
I3
ssg70
g3232
sg63
(lp3239
S''
asbasbasbasbasbasbasbasbasbasbasbag56
(g72
g58
NtRp3240
(dp3241
g61
(dp3242
sg70
g3006
sg63
(lp3243
g56
(g77
g58
NtRp3244
(dp3245
g61
(dp3246
g81
g82
ssg70
g3240
sg63
(lp3247
S'files'
p3248
asbag56
(g77
g58
NtRp3249
(dp3250
g61
(dp3251
g88
g89
ssg70
g3240
sg63
(lp3252
S':'
asbag56
(g77
g58
NtRp3253
(dp3254
g61
(dp3255
sg70
g3240
sg63
(lp3256
g56
(g57
g58
NtRp3257
(dp3258
g61
(dp3259
g69
I5
ssg70
g3253
sg63
(lp3260
g56
(g65
g58
NtRp3261
(dp3262
g61
(dp3263
g69
I4
ssg70
Nsg63
(lp3264
g56
(g72
g58
NtRp3265
(dp3266
g61
(dp3267
sg70
g3261
sg63
(lp3268
g56
(g77
g58
NtRp3269
(dp3270
g61
(dp3271
sg70
g3265
sg63
(lp3272
g56
(g57
g58
NtRp3273
(dp3274
g61
(dp3275
g69
I4
ssg70
g3269
sg63
(lp3276
S'/admin/static/plugin_multiselect/jquery.dimensions.js'
p3277
asbasbasbag56
(g72
g58
NtRp3278
(dp3279
g61
(dp3280
sg70
g3261
sg63
(lp3281
g56
(g77
g58
NtRp3282
(dp3283
g61
(dp3284
sg70
g3278
sg63
(lp3285
g56
(g57
g58
NtRp3286
(dp3287
g61
(dp3288
g69
I4
ssg70
g3282
sg63
(lp3289
S'/admin/static/plugin_multiselect/jquery.multiselect.js'
p3290
asbasbasbag56
(g72
g58
NtRp3291
(dp3292
g61
(dp3293
sg70
g3261
sg63
(lp3294
g56
(g77
g58
NtRp3295
(dp3296
g61
(dp3297
sg70
g3291
sg63
(lp3298
g56
(g57
g58
NtRp3299
(dp3300
g61
(dp3301
g69
I4
ssg70
g3295
sg63
(lp3302
S'/admin/static/plugin_multiselect/jquery.multiselect.css'
p3303
asbasbasbag56
(g72
g58
NtRp3304
(dp3305
g61
(dp3306
sg70
g3261
sg63
(lp3307
g56
(g77
g58
NtRp3308
(dp3309
g61
(dp3310
sg70
g3304
sg63
(lp3311
g56
(g57
g58
NtRp3312
(dp3313
g61
(dp3314
g69
I4
ssg70
g3308
sg63
(lp3315
S'/admin/static/plugin_multiselect/start.js'
p3316
asbasbasbasbasbasbasbag56
(g72
g58
NtRp3317
(dp3318
g61
(dp3319
sg70
g3006
sg63
(lp3320
g56
(g77
g58
NtRp3321
(dp3322
g61
(dp3323
g81
g82
ssg70
g3317
sg63
(lp3324
S'flash'
p3325
asbag56
(g77
g58
NtRp3326
(dp3327
g61
(dp3328
g88
g89
ssg70
g3317
sg63
(lp3329
S':'
asbag56
(g77
g58
NtRp3330
(dp3331
g61
(dp3332
sg70
g3317
sg63
(lp3333
g56
(g57
g58
NtRp3334
(dp3335
g61
(dp3336
g69
I5
ssg70
g3330
sg63
(lp3337
S''
asbasbasbag56
(g72
g58
NtRp3338
(dp3339
g61
(dp3340
sg70
g3006
sg63
(lp3341
g56
(g77
g58
NtRp3342
(dp3343
g61
(dp3344
g81
g82
ssg70
g3338
sg63
(lp3345
S'generic_patterns'
p3346
asbag56
(g77
g58
NtRp3347
(dp3348
g61
(dp3349
g88
g89
ssg70
g3338
sg63
(lp3350
S':'
asbag56
(g77
g58
NtRp3351
(dp3352
g61
(dp3353
sg70
g3338
sg63
(lp3354
g56
(g57
g58
NtRp3355
(dp3356
g61
(dp3357
g69
I5
ssg70
g3351
sg63
(lp3358
g56
(g65
g58
NtRp3359
(dp3360
g61
(dp3361
g69
I4
ssg70
Nsg63
(lp3362
sbasbasbasbag56
(g72
g58
NtRp3363
(dp3364
g61
(dp3365
sg70
g3006
sg63
(lp3366
g56
(g77
g58
NtRp3367
(dp3368
g61
(dp3369
g81
g82
ssg70
g3363
sg63
(lp3370
S'headers'
p3371
asbag56
(g77
g58
NtRp3372
(dp3373
g61
(dp3374
g88
g89
ssg70
g3363
sg63
(lp3375
S':'
asbag56
(g77
g58
NtRp3376
(dp3377
g61
(dp3378
sg70
g3363
sg63
(lp3379
g56
(g57
g58
NtRp3380
(dp3381
g61
(dp3382
g69
I5
ssg70
g3376
sg63
(lp3383
g56
(g65
g58
NtRp3384
(dp3385
g61
(dp3386
g69
I4
ssg70
Nsg63
(lp3387
g56
(g72
g58
NtRp3388
(dp3389
g61
(dp3390
sg70
g3384
sg63
(lp3391
g56
(g77
g58
NtRp3392
(dp3393
g61
(dp3394
g81
g82
ssg70
g3388
sg63
(lp3395
S'Cache-Control'
p3396
asbag56
(g77
g58
NtRp3397
(dp3398
g61
(dp3399
g88
g89
ssg70
g3388
sg63
(lp3400
S':'
asbag56
(g77
g58
NtRp3401
(dp3402
g61
(dp3403
sg70
g3388
sg63
(lp3404
g56
(g57
g58
NtRp3405
(dp3406
g61
(dp3407
g69
I4
ssg70
g3401
sg63
(lp3408
S'no-store, no-cache, must-revalidate, post-check=0, pre-check=0'
p3409
asbasbasbag56
(g72
g58
NtRp3410
(dp3411
g61
(dp3412
sg70
g3384
sg63
(lp3413
g56
(g77
g58
NtRp3414
(dp3415
g61
(dp3416
g81
g82
ssg70
g3410
sg63
(lp3417
S'Content-Type'
p3418
asbag56
(g77
g58
NtRp3419
(dp3420
g61
(dp3421
g88
g89
ssg70
g3410
sg63
(lp3422
S':'
asbag56
(g77
g58
NtRp3423
(dp3424
g61
(dp3425
sg70
g3410
sg63
(lp3426
g56
(g57
g58
NtRp3427
(dp3428
g61
(dp3429
g69
I4
ssg70
g3423
sg63
(lp3430
S'text/html; charset=utf-8'
p3431
asbasbasbag56
(g72
g58
NtRp3432
(dp3433
g61
(dp3434
sg70
g3384
sg63
(lp3435
g56
(g77
g58
NtRp3436
(dp3437
g61
(dp3438
g81
g82
ssg70
g3432
sg63
(lp3439
S'Expires'
p3440
asbag56
(g77
g58
NtRp3441
(dp3442
g61
(dp3443
g88
g89
ssg70
g3432
sg63
(lp3444
S':'
asbag56
(g77
g58
NtRp3445
(dp3446
g61
(dp3447
sg70
g3432
sg63
(lp3448
g56
(g57
g58
NtRp3449
(dp3450
g61
(dp3451
g69
I4
ssg70
g3445
sg63
(lp3452
S'Wed, 18 Jan 2012 00:56:13 GMT'
p3453
asbasbasbag56
(g72
g58
NtRp3454
(dp3455
g61
(dp3456
sg70
g3384
sg63
(lp3457
g56
(g77
g58
NtRp3458
(dp3459
g61
(dp3460
g81
g82
ssg70
g3454
sg63
(lp3461
S'NingNang'
p3462
asbag56
(g77
g58
NtRp3463
(dp3464
g61
(dp3465
g88
g89
ssg70
g3454
sg63
(lp3466
S':'
asbag56
(g77
g58
NtRp3467
(dp3468
g61
(dp3469
sg70
g3454
sg63
(lp3470
g56
(g57
g58
NtRp3471
(dp3472
g61
(dp3473
g69
I4
ssg70
g3467
sg63
(lp3474
S'Nong'
p3475
asbasbasbag56
(g72
g58
NtRp3476
(dp3477
g61
(dp3478
sg70
g3384
sg63
(lp3479
g56
(g77
g58
NtRp3480
(dp3481
g61
(dp3482
g81
g82
ssg70
g3476
sg63
(lp3483
S'Pragma'
p3484
asbag56
(g77
g58
NtRp3485
(dp3486
g61
(dp3487
g88
g89
ssg70
g3476
sg63
(lp3488
S':'
asbag56
(g77
g58
NtRp3489
(dp3490
g61
(dp3491
sg70
g3476
sg63
(lp3492
g56
(g57
g58
NtRp3493
(dp3494
g61
(dp3495
g69
I4
ssg70
g3489
sg63
(lp3496
S'no-cache'
p3497
asbasbasbasbasbasbasbag56
(g72
g58
NtRp3498
(dp3499
g61
(dp3500
sg70
g3006
sg63
(lp3501
g56
(g77
g58
NtRp3502
(dp3503
g61
(dp3504
g81
g82
ssg70
g3498
sg63
(lp3505
S'menu'
p3506
asbag56
(g77
g58
NtRp3507
(dp3508
g61
(dp3509
g88
g89
ssg70
g3498
sg63
(lp3510
S':'
asbag56
(g77
g58
NtRp3511
(dp3512
g61
(dp3513
sg70
g3498
sg63
(lp3514
g56
(g57
g58
NtRp3515
(dp3516
g61
(dp3517
g69
I5
ssg70
g3511
sg63
(lp3518
g56
(g65
g58
NtRp3519
(dp3520
g61
(dp3521
g69
I4
ssg70
Nsg63
(lp3522
g56
(g72
g58
NtRp3523
(dp3524
g61
(dp3525
sg70
g3519
sg63
(lp3526
g56
(g77
g58
NtRp3527
(dp3528
g61
(dp3529
sg70
g3523
sg63
(lp3530
g56
(g57
g58
NtRp3531
(dp3532
g61
(dp3533
g69
I4
ssg70
g3527
sg63
(lp3534
g56
(g65
g58
NtRp3535
(dp3536
g61
(dp3537
g69
I3
ssg70
Nsg63
(lp3538
g56
(g72
g58
NtRp3539
(dp3540
g61
(dp3541
sg70
g3535
sg63
(lp3542
g56
(g77
g58
NtRp3543
(dp3544
g61
(dp3545
sg70
g3539
sg63
(lp3546
g56
(g57
g58
NtRp3547
(dp3548
g61
(dp3549
g69
I3
ssg70
g3543
sg63
(lp3550
cgluon.languages
lazyT_unpickle
p3551
(S't\x04\x00\x00\x00Site'
tRp3552
asbasbasbag56
(g72
g58
NtRp3553
(dp3554
g61
(dp3555
sg70
g3535
sg63
(lp3556
g56
(g77
g58
NtRp3557
(dp3558
g61
(dp3559
sg70
g3553
sg63
(lp3560
g56
(g57
g58
NtRp3561
(dp3562
g61
(dp3563
g69
I3
ssg70
g3557
sg63
(lp3564
g610
asbasbasbag56
(g72
g58
NtRp3565
(dp3566
g61
(dp3567
sg70
g3535
sg63
(lp3568
g56
(g77
g58
NtRp3569
(dp3570
g61
(dp3571
sg70
g3565
sg63
(lp3572
g56
(g57
g58
NtRp3573
(dp3574
g61
(dp3575
g69
I3
ssg70
g3569
sg63
(lp3576
S'/admin/default/site'
p3577
asbasbasbasbasbasbasbag56
(g72
g58
NtRp3578
(dp3579
g61
(dp3580
sg70
g3519
sg63
(lp3581
g56
(g77
g58
NtRp3582
(dp3583
g61
(dp3584
sg70
g3578
sg63
(lp3585
g56
(g57
g58
NtRp3586
(dp3587
g61
(dp3588
g69
I4
ssg70
g3582
sg63
(lp3589
g56
(g65
g58
NtRp3590
(dp3591
g61
(dp3592
g69
I3
ssg70
Nsg63
(lp3593
g56
(g72
g58
NtRp3594
(dp3595
g61
(dp3596
sg70
g3590
sg63
(lp3597
g56
(g77
g58
NtRp3598
(dp3599
g61
(dp3600
sg70
g3594
sg63
(lp3601
g56
(g57
g58
NtRp3602
(dp3603
g61
(dp3604
g69
I3
ssg70
g3598
sg63
(lp3605
g3551
(S't\x06\x00\x00\x00Logout'
tRp3606
asbasbasbag56
(g72
g58
NtRp3607
(dp3608
g61
(dp3609
sg70
g3590
sg63
(lp3610
g56
(g77
g58
NtRp3611
(dp3612
g61
(dp3613
sg70
g3607
sg63
(lp3614
g56
(g57
g58
NtRp3615
(dp3616
g61
(dp3617
g69
I3
ssg70
g3611
sg63
(lp3618
g610
asbasbasbag56
(g72
g58
NtRp3619
(dp3620
g61
(dp3621
sg70
g3590
sg63
(lp3622
g56
(g77
g58
NtRp3623
(dp3624
g61
(dp3625
sg70
g3619
sg63
(lp3626
g56
(g57
g58
NtRp3627
(dp3628
g61
(dp3629
g69
I3
ssg70
g3623
sg63
(lp3630
S'/admin/default/logout'
p3631
asbasbasbasbasbasbasbag56
(g72
g58
NtRp3632
(dp3633
g61
(dp3634
sg70
g3519
sg63
(lp3635
g56
(g77
g58
NtRp3636
(dp3637
g61
(dp3638
sg70
g3632
sg63
(lp3639
g56
(g57
g58
NtRp3640
(dp3641
g61
(dp3642
g69
I4
ssg70
g3636
sg63
(lp3643
g56
(g65
g58
NtRp3644
(dp3645
g61
(dp3646
g69
I3
ssg70
Nsg63
(lp3647
g56
(g72
g58
NtRp3648
(dp3649
g61
(dp3650
sg70
g3644
sg63
(lp3651
g56
(g77
g58
NtRp3652
(dp3653
g61
(dp3654
sg70
g3648
sg63
(lp3655
g56
(g57
g58
NtRp3656
(dp3657
g61
(dp3658
g69
I3
ssg70
g3652
sg63
(lp3659
g3551
(S't\x04\x00\x00\x00Help'
tRp3660
asbasbasbag56
(g72
g58
NtRp3661
(dp3662
g61
(dp3663
sg70
g3644
sg63
(lp3664
g56
(g77
g58
NtRp3665
(dp3666
g61
(dp3667
sg70
g3661
sg63
(lp3668
g56
(g57
g58
NtRp3669
(dp3670
g61
(dp3671
g69
I3
ssg70
g3665
sg63
(lp3672
g610
asbasbasbag56
(g72
g58
NtRp3673
(dp3674
g61
(dp3675
sg70
g3644
sg63
(lp3676
g56
(g77
g58
NtRp3677
(dp3678
g61
(dp3679
sg70
g3673
sg63
(lp3680
g56
(g57
g58
NtRp3681
(dp3682
g61
(dp3683
g69
I3
ssg70
g3677
sg63
(lp3684
S'/examples/default/index'
p3685
asbasbasbasbasbasbasbasbasbasbasbag56
(g72
g58
NtRp3686
(dp3687
g61
(dp3688
sg70
g3006
sg63
(lp3689
g56
(g77
g58
NtRp3690
(dp3691
g61
(dp3692
g81
g82
ssg70
g3686
sg63
(lp3693
S'meta'
p3694
asbag56
(g77
g58
NtRp3695
(dp3696
g61
(dp3697
g88
g89
ssg70
g3686
sg63
(lp3698
S':'
asbag56
(g77
g58
NtRp3699
(dp3700
g61
(dp3701
sg70
g3686
sg63
(lp3702
g56
(g57
g58
NtRp3703
(dp3704
g61
(dp3705
g69
I5
ssg70
g3699
sg63
(lp3706
g56
(g65
g58
NtRp3707
(dp3708
g61
(dp3709
g69
I4
ssg70
Nsg63
(lp3710
sbasbasbasbag56
(g72
g58
NtRp3711
(dp3712
g61
(dp3713
sg70
g3006
sg63
(lp3714
g56
(g77
g58
NtRp3715
(dp3716
g61
(dp3717
g81
g82
ssg70
g3711
sg63
(lp3718
S'postprocessing'
p3719
asbag56
(g77
g58
NtRp3720
(dp3721
g61
(dp3722
g88
g89
ssg70
g3711
sg63
(lp3723
S':'
asbag56
(g77
g58
NtRp3724
(dp3725
g61
(dp3726
sg70
g3711
sg63
(lp3727
g56
(g57
g58
NtRp3728
(dp3729
g61
(dp3730
g69
I5
ssg70
g3724
sg63
(lp3731
g56
(g65
g58
NtRp3732
(dp3733
g61
(dp3734
g69
I4
ssg70
Nsg63
(lp3735
sbasbasbasbag56
(g72
g58
NtRp3736
(dp3737
g61
(dp3738
sg70
g3006
sg63
(lp3739
g56
(g77
g58
NtRp3740
(dp3741
g61
(dp3742
g81
g82
ssg70
g3736
sg63
(lp3743
S'session_file'
p3744
asbag56
(g77
g58
NtRp3745
(dp3746
g61
(dp3747
g88
g89
ssg70
g3736
sg63
(lp3748
S':'
asbag56
(g77
g58
NtRp3749
(dp3750
g61
(dp3751
sg70
g3736
sg63
(lp3752
g56
(g57
g58
NtRp3753
(dp3754
g61
(dp3755
g69
I5
ssg70
g3749
sg63
(lp3756
S"<open file 'C:\\webapps\\dopbox\\Dropbox\\Eclipse\\OJDevSourceProject\\project\\web2py\\applications\\admin\\sessions\\127.0.0.1-3b96fdfa-561d-4180-af06-c5837c53b6d1', mode 'rb+' at 0x00000000040BA150>"
p3757
asbasbasbag56
(g72
g58
NtRp3758
(dp3759
g61
(dp3760
sg70
g3006
sg63
(lp3761
g56
(g77
g58
NtRp3762
(dp3763
g61
(dp3764
g81
g82
ssg70
g3758
sg63
(lp3765
S'session_filename'
p3766
asbag56
(g77
g58
NtRp3767
(dp3768
g61
(dp3769
g88
g89
ssg70
g3758
sg63
(lp3770
S':'
asbag56
(g77
g58
NtRp3771
(dp3772
g61
(dp3773
sg70
g3758
sg63
(lp3774
g56
(g57
g58
NtRp3775
(dp3776
g61
(dp3777
g69
I5
ssg70
g3771
sg63
(lp3778
S'C:\\webapps\\dopbox\\Dropbox\\Eclipse\\OJDevSourceProject\\project\\web2py\\applications\\admin\\sessions\\127.0.0.1-3b96fdfa-561d-4180-af06-c5837c53b6d1'
p3779
asbasbasbag56
(g72
g58
NtRp3780
(dp3781
g61
(dp3782
sg70
g3006
sg63
(lp3783
g56
(g77
g58
NtRp3784
(dp3785
g61
(dp3786
g81
g82
ssg70
g3780
sg63
(lp3787
S'session_id'
p3788
asbag56
(g77
g58
NtRp3789
(dp3790
g61
(dp3791
g88
g89
ssg70
g3780
sg63
(lp3792
S':'
asbag56
(g77
g58
NtRp3793
(dp3794
g61
(dp3795
sg70
g3780
sg63
(lp3796
g56
(g57
g58
NtRp3797
(dp3798
g61
(dp3799
g69
I5
ssg70
g3793
sg63
(lp3800
S'127.0.0.1-3b96fdfa-561d-4180-af06-c5837c53b6d1'
p3801
asbasbasbag56
(g72
g58
NtRp3802
(dp3803
g61
(dp3804
sg70
g3006
sg63
(lp3805
g56
(g77
g58
NtRp3806
(dp3807
g61
(dp3808
g81
g82
ssg70
g3802
sg63
(lp3809
S'session_id_name'
p3810
asbag56
(g77
g58
NtRp3811
(dp3812
g61
(dp3813
g88
g89
ssg70
g3802
sg63
(lp3814
S':'
asbag56
(g77
g58
NtRp3815
(dp3816
g61
(dp3817
sg70
g3802
sg63
(lp3818
g56
(g57
g58
NtRp3819
(dp3820
g61
(dp3821
g69
I5
ssg70
g3815
sg63
(lp3822
g3063
asbasbasbag56
(g72
g58
NtRp3823
(dp3824
g61
(dp3825
sg70
g3006
sg63
(lp3826
g56
(g77
g58
NtRp3827
(dp3828
g61
(dp3829
g81
g82
ssg70
g3823
sg63
(lp3830
S'session_locked'
p3831
asbag56
(g77
g58
NtRp3832
(dp3833
g61
(dp3834
g88
g89
ssg70
g3823
sg63
(lp3835
S':'
asbag56
(g77
g58
NtRp3836
(dp3837
g61
(dp3838
sg70
g3823
sg63
(lp3839
g56
(g57
g58
NtRp3840
(dp3841
g61
(dp3842
g69
I5
ssg70
g3836
sg63
(lp3843
g610
asbasbasbag56
(g72
g58
NtRp3844
(dp3845
g61
(dp3846
sg70
g3006
sg63
(lp3847
g56
(g77
g58
NtRp3848
(dp3849
g61
(dp3850
g81
g82
ssg70
g3844
sg63
(lp3851
S'session_new'
p3852
asbag56
(g77
g58
NtRp3853
(dp3854
g61
(dp3855
g88
g89
ssg70
g3844
sg63
(lp3856
S':'
asbag56
(g77
g58
NtRp3857
(dp3858
g61
(dp3859
sg70
g3844
sg63
(lp3860
g56
(g57
g58
NtRp3861
(dp3862
g61
(dp3863
g69
I5
ssg70
g3857
sg63
(lp3864
g610
asbasbasbag56
(g72
g58
NtRp3865
(dp3866
g61
(dp3867
sg70
g3006
sg63
(lp3868
g56
(g77
g58
NtRp3869
(dp3870
g61
(dp3871
g81
g82
ssg70
g3865
sg63
(lp3872
S'status'
p3873
asbag56
(g77
g58
NtRp3874
(dp3875
g61
(dp3876
g88
g89
ssg70
g3865
sg63
(lp3877
S':'
asbag56
(g77
g58
NtRp3878
(dp3879
g61
(dp3880
sg70
g3865
sg63
(lp3881
g56
(g57
g58
NtRp3882
(dp3883
g61
(dp3884
g69
I5
ssg70
g3878
sg63
(lp3885
S'200'
p3886
asbasbasbag56
(g72
g58
NtRp3887
(dp3888
g61
(dp3889
sg70
g3006
sg63
(lp3890
g56
(g77
g58
NtRp3891
(dp3892
g61
(dp3893
g81
g82
ssg70
g3887
sg63
(lp3894
S'subtitle'
p3895
asbag56
(g77
g58
NtRp3896
(dp3897
g61
(dp3898
g88
g89
ssg70
g3887
sg63
(lp3899
S':'
asbag56
(g77
g58
NtRp3900
(dp3901
g61
(dp3902
sg70
g3887
sg63
(lp3903
g56
(g57
g58
NtRp3904
(dp3905
g61
(dp3906
g69
I5
ssg70
g3900
sg63
(lp3907
S'admin'
p3908
asbasbasbag56
(g72
g58
NtRp3909
(dp3910
g61
(dp3911
sg70
g3006
sg63
(lp3912
g56
(g77
g58
NtRp3913
(dp3914
g61
(dp3915
g81
g82
ssg70
g3909
sg63
(lp3916
S'title'
p3917
asbag56
(g77
g58
NtRp3918
(dp3919
g61
(dp3920
g88
g89
ssg70
g3909
sg63
(lp3921
S':'
asbag56
(g77
g58
NtRp3922
(dp3923
g61
(dp3924
sg70
g3909
sg63
(lp3925
g56
(g57
g58
NtRp3926
(dp3927
g61
(dp3928
g69
I5
ssg70
g3922
sg63
(lp3929
S'check_version '
p3930
asbasbasbag56
(g72
g58
NtRp3931
(dp3932
g61
(dp3933
sg70
g3006
sg63
(lp3934
g56
(g77
g58
NtRp3935
(dp3936
g61
(dp3937
g81
g82
ssg70
g3931
sg63
(lp3938
g2058
asbag56
(g77
g58
NtRp3939
(dp3940
g61
(dp3941
g88
g89
ssg70
g3931
sg63
(lp3942
S':'
asbag56
(g77
g58
NtRp3943
(dp3944
g61
(dp3945
sg70
g3931
sg63
(lp3946
g56
(g57
g58
NtRp3947
(dp3948
g61
(dp3949
g69
I5
ssg70
g3943
sg63
(lp3950
g2071
asbasbasbag56
(g72
g58
NtRp3951
(dp3952
g61
(dp3953
sg70
g3006
sg63
(lp3954
g56
(g77
g58
NtRp3955
(dp3956
g61
(dp3957
g81
g82
ssg70
g3951
sg63
(lp3958
S'view'
p3959
asbag56
(g77
g58
NtRp3960
(dp3961
g61
(dp3962
g88
g89
ssg70
g3951
sg63
(lp3963
S':'
asbag56
(g77
g58
NtRp3964
(dp3965
g61
(dp3966
sg70
g3951
sg63
(lp3967
g56
(g57
g58
NtRp3968
(dp3969
g61
(dp3970
g69
I5
ssg70
g3964
sg63
(lp3971
S'default/check_version.html'
p3972
asbasbasbasbasbsS'locals'
p3973
(dp3974
S'version_number'
p3975
S"(1, 99, 4, datetime.datetime(2011, 12, 14, 14, 46, 14), 'stable')"
p3976
sS'new_version'
p3977
g99
sssS'traceback'
p3978
S'Traceback (most recent call last):\n  File "C:\\webapps\\dopbox\\Dropbox\\Eclipse\\OJDevSourceProject\\project\\web2py\\gluon\\restricted.py", line 194, in restricted\n    exec ccode in environment\n  File "C:\\webapps\\dopbox\\Dropbox\\Eclipse\\OJDevSourceProject\\project\\web2py\\applications\\admin\\controllers/default.py", line 1225, in <module>\n  File "C:\\webapps\\dopbox\\Dropbox\\Eclipse\\OJDevSourceProject\\project\\web2py\\gluon\\globals.py", line 149, in <lambda>\n    self._caller = lambda f: f()\n  File "C:\\webapps\\dopbox\\Dropbox\\Eclipse\\OJDevSourceProject\\project\\web2py\\applications\\admin\\controllers/default.py", line 105, in check_version\n    + XML(\' <strong class="upgrade_version">%s</strong>\' % version_number)\nTypeError: not all arguments converted during string formatting\n'
p3979
s.