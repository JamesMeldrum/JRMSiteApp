(dp1
S'output'
p2
S''
sS'layer'
p3
S'D:\\Dropbox\\Eclipse\\JRMSiteApp\\web2py\\applications\\admin\\controllers/default.py'
p4
sS'code'
p5
S'# coding: utf8\n\nfrom gluon.admin import *\nfrom gluon.fileutils import abspath, read_file, write_file\nfrom glob import glob\nimport shutil\nimport platform\n\nif DEMO_MODE and request.function in [\'change_password\',\'pack\',\'pack_plugin\',\'upgrade_web2py\',\'uninstall\',\'cleanup\',\'compile_app\',\'remove_compiled_app\',\'delete\',\'delete_plugin\',\'create_file\',\'upload_file\',\'update_languages\',\'reload_routes\']:\n    session.flash = T(\'disabled in demo mode\')\n    redirect(URL(\'site\'))\n\nif not is_manager() and request.function in [\'change_password\',\'upgrade_web2py\']:\n    session.flash = T(\'disabled in multi user mode\')\n    redirect(URL(\'site\'))\n\nif FILTER_APPS and request.args(0) and not request.args(0) in FILTER_APPS:\n    session.flash = T(\'disabled in demo mode\')\n    redirect(URL(\'site\'))\n\ndef safe_open(a,b):\n    if DEMO_MODE and \'w\' in b:\n        class tmp:\n            def write(self,data): pass\n        return tmp()\n    return open(a,b)\n\ndef safe_read(a, b=\'r\'):\n    safe_file = safe_open(a, b)\n    try:\n        return safe_file.read()\n    finally:\n        safe_file.close()\n\ndef safe_write(a, value, b=\'w\'):\n    safe_file = safe_open(a, b)\n    try:\n        safe_file.write(value)\n    finally:\n        safe_file.close()\n\ndef get_app(name=None):\n    app = name or request.args(0)\n    if app and (not MULTI_USER_MODE or db(db.app.name==app)(db.app.owner==auth.user.id).count()):\n        return app\n    session.flash = \'App does not exist or your are not authorized\'\n    redirect(URL(\'site\'))\n\ndef index():\n    """ Index handler """\n\n    send = request.vars.send\n    if DEMO_MODE:\n        session.authorized = True\n        session.last_time = t0\n    if not send:\n        send = URL(\'site\')\n    if session.authorized:\n        redirect(send)\n    elif request.vars.password:\n        if verify_password(request.vars.password):\n            session.authorized = True\n            login_record(True)\n\n            if CHECK_VERSION:\n                session.check_version = True\n            else:\n                session.check_version = False\n\n            session.last_time = t0\n            if isinstance(send, list):  # ## why does this happen?\n                send = str(send[0])\n\n            redirect(send)\n        else:\n            times_denied = login_record(False)\n            if times_denied >= allowed_number_of_attempts:\n                response.flash = \\\n                    T(\'admin disabled because too many invalid login attempts\')\n            elif times_denied == allowed_number_of_attempts - 1:\n                response.flash = \\\n                    T(\'You have one more login attempt before you are locked out\')\n            else:\n                response.flash = T(\'invalid password.\')\n    return dict(send=send)\n\n\ndef check_version():\n    """ Checks if web2py is up to date """\n\n    session.forget()\n    session._unlock(response)\n\n    new_version, version_number = check_new_version(request.env.web2py_version,\n                                    WEB2PY_VERSION_URL)\n\n    if new_version == -1:\n        return A(T(\'Unable to check for upgrades\'), _href=WEB2PY_URL)\n    elif new_version != True:\n        return A(T(\'web2py is up to date\'), _href=WEB2PY_URL)\n    elif platform.system().lower() in (\'windows\',\'win32\',\'win64\') and os.path.exists("web2py.exe"):\n        return SPAN(\'You should upgrade to version %s\' % version_number)\n    else:\n        return sp_button(URL(\'upgrade_web2py\'), T(\'upgrade now\')) \\\n          + XML(\' <strong class="upgrade_version">%s</strong>\' % version_number)\n\n\ndef logout():\n    """ Logout handler """\n    session.authorized = None\n    if MULTI_USER_MODE:\n        redirect(URL(\'user/logout\'))\n    redirect(URL(\'index\'))\n\n\ndef change_password():\n\n    if session.pam_user:\n        session.flash = T(\'PAM authenticated user, cannot change password here\')\n        redirect(URL(\'site\'))\n    form=SQLFORM.factory(Field(\'current_admin_password\',\'password\'),\n                         Field(\'new_admin_password\',\'password\',requires=IS_STRONG()),\n                         Field(\'new_admin_password_again\',\'password\'))\n    if form.accepts(request.vars):\n        if not verify_password(request.vars.current_admin_password):\n            form.errors.current_admin_password = T(\'invalid password\')\n        elif form.vars.new_admin_password != form.vars.new_admin_password_again:\n            form.errors.new_admin_password_again = T(\'no match\')\n        else:\n            path = abspath(\'parameters_%s.py\' % request.env.server_port)\n            safe_write(path, \'password="%s"\' % CRYPT()(request.vars.new_admin_password)[0])\n            session.flash = T(\'password changed\')\n            redirect(URL(\'site\'))\n    return dict(form=form)\n\ndef site():\n    """ Site handler """\n\n    myversion = request.env.web2py_version\n\n    # Shortcut to make the elif statements more legible\n    file_or_appurl = \'file\' in request.vars or \'appurl\' in request.vars\n\n    if DEMO_MODE:\n        pass\n\n    elif request.vars.filename and not \'file\' in request.vars:\n        # create a new application\n        appname = cleanpath(request.vars.filename).replace(\'.\', \'_\')\n        if app_create(appname, request):\n            if MULTI_USER_MODE:\n                db.app.insert(name=appname,owner=auth.user.id)\n            session.flash = T(\'new application "%s" created\', appname)\n            redirect(URL(\'design\',args=appname))\n        else:\n            session.flash = \\\n                T(\'unable to create application "%s" (it may exist already)\', request.vars.filename)\n        redirect(URL(r=request))\n\n    elif file_or_appurl and not request.vars.filename:\n        # can\'t do anything without an app name\n        msg = \'you must specify a name for the uploaded application\'\n        response.flash = T(msg)\n\n    elif file_or_appurl and request.vars.filename:\n        # fetch an application via URL or file upload\n        f = None\n        if request.vars.appurl is not \'\':\n            try:\n                f = urllib.urlopen(request.vars.appurl)\n            except Exception, e:\n                session.flash = DIV(T(\'Unable to download app because:\'),PRE(str(e)))\n                redirect(URL(r=request))\n            fname = request.vars.appurl\n        elif request.vars.file is not \'\':\n            f = request.vars.file.file\n            fname = request.vars.file.filename\n\n        if f:\n            appname = cleanpath(request.vars.filename).replace(\'.\', \'_\')\n            installed = app_install(appname, f, request, fname,\n                                    overwrite=request.vars.overwrite_check)\n        if f and installed:\n            msg = \'application %(appname)s installed with md5sum: %(digest)s\'\n            session.flash = T(msg, dict(appname=appname,\n                                        digest=md5_hash(installed)))\n        elif f and request.vars.overwrite_check:\n            msg = \'unable to install application "%(appname)s"\'\n            session.flash = T(msg, dict(appname=request.vars.filename))\n\n        else:\n            msg = \'unable to install application "%(appname)s"\'\n            session.flash = T(msg, dict(appname=request.vars.filename))\n\n        redirect(URL(r=request))\n\n    regex = re.compile(\'^\\w+$\')\n\n    if is_manager():\n        apps = [f for f in os.listdir(apath(r=request)) if regex.match(f)]\n    else:\n        apps = [f.name for f in db(db.app.owner==auth.user_id).select()]\n\n    if FILTER_APPS:\n        apps = [f for f in apps if f in FILTER_APPS]\n\n    apps = sorted(apps,lambda a,b:cmp(a.upper(),b.upper()))\n\n    return dict(app=None, apps=apps, myversion=myversion)\n\n\ndef pack():\n    app = get_app()\n\n    if len(request.args) == 1:\n        fname = \'web2py.app.%s.w2p\' % app\n        filename = app_pack(app, request)\n    else:\n        fname = \'web2py.app.%s.compiled.w2p\' % app\n        filename = app_pack_compiled(app, request)\n\n    if filename:\n        response.headers[\'Content-Type\'] = \'application/w2p\'\n        disposition = \'attachment; filename=%s\' % fname\n        response.headers[\'Content-Disposition\'] = disposition\n        return safe_read(filename, \'rb\')\n    else:\n        session.flash = T(\'internal error\')\n        redirect(URL(\'site\'))\n\ndef pack_plugin():\n    app = get_app()\n    if len(request.args) == 2:\n        fname = \'web2py.plugin.%s.w2p\' % request.args[1]\n        filename = plugin_pack(app, request.args[1], request)\n    if filename:\n        response.headers[\'Content-Type\'] = \'application/w2p\'\n        disposition = \'attachment; filename=%s\' % fname\n        response.headers[\'Content-Disposition\'] = disposition\n        return safe_read(filename, \'rb\')\n    else:\n        session.flash = T(\'internal error\')\n        redirect(URL(\'plugin\',args=request.args))\n\ndef upgrade_web2py():\n    if \'upgrade\' in request.vars:\n        (success, error) = upgrade(request)\n        if success:\n            session.flash = T(\'web2py upgraded; please restart it\')\n        else:\n            session.flash = T(\'unable to upgrade because "%s"\', error)\n        redirect(URL(\'site\'))\n    elif \'noupgrade\' in request.vars:\n        redirect(URL(\'site\'))\n    return dict()\n\ndef uninstall():\n    app = get_app()\n    if \'delete\' in request.vars:\n        if MULTI_USER_MODE:\n            if is_manager() and db(db.app.name==app).delete():\n                pass\n            elif db(db.app.name==app)(db.app.owner==auth.user.id).delete():\n                pass\n            else:\n                session.flash = T(\'no permission to uninstall "%s"\', app)\n                redirect(URL(\'site\'))\n        if app_uninstall(app, request):            \n            session.flash = T(\'application "%s" uninstalled\', app)\n        else:\n            session.flash = T(\'unable to uninstall "%s"\', app)\n        redirect(URL(\'site\'))\n    elif \'nodelete\' in request.vars:\n        redirect(URL(\'site\'))\n    return dict(app=app)\n\n\ndef cleanup():\n    app = get_app()\n    clean = app_cleanup(app, request)\n    if not clean:\n        session.flash = T("some files could not be removed")\n    else:\n        session.flash = T(\'cache, errors and sessions cleaned\')\n\n    redirect(URL(\'site\'))\n\n\ndef compile_app():\n    app = get_app()\n    c = app_compile(app, request)\n    if not c:\n        session.flash = T(\'application compiled\')\n    else:\n        session.flash = DIV(T(\'Cannot compile: there are errors in your app:\'),\n                              CODE(c))\n    redirect(URL(\'site\'))\n\n\ndef remove_compiled_app():\n    """ Remove the compiled application """\n    app = get_app()\n    remove_compiled_application(apath(app, r=request))\n    session.flash = T(\'compiled application removed\')\n    redirect(URL(\'site\'))\n\ndef delete():\n    """ Object delete handler """\n    app = get_app()\n    filename = \'/\'.join(request.args)\n    sender = request.vars.sender\n\n    if isinstance(sender, list):  # ## fix a problem with Vista\n        sender = sender[0]\n\n    if \'nodelete\' in request.vars:\n        redirect(URL(sender))\n    elif \'delete\' in request.vars:\n        try:\n            os.unlink(apath(filename, r=request))\n            session.flash = T(\'file "%(filename)s" deleted\',\n                              dict(filename=filename))\n        except Exception:\n            session.flash = T(\'unable to delete file "%(filename)s"\',\n                              dict(filename=filename))\n        redirect(URL(sender))\n    return dict(filename=filename, sender=sender)\n\ndef peek():\n    """ Visualize object code """\n    app = get_app()\n    filename = \'/\'.join(request.args)\n    try:\n        data = safe_read(apath(filename, r=request)).replace(\'\\r\',\'\')\n    except IOError:\n        session.flash = T(\'file does not exist\')\n        redirect(URL(\'site\'))\n\n    extension = filename[filename.rfind(\'.\') + 1:].lower()\n\n    return dict(app=request.args[0],\n                filename=filename,\n                data=data,\n                extension=extension)\n\n\ndef test():\n    """ Execute controller tests """\n    app = get_app()\n    if len(request.args) > 1:\n        file = request.args[1]\n    else:\n        file = \'.*\\.py\'\n\n    controllers = listdir(apath(\'%s/controllers/\' % app, r=request), file + \'$\')\n\n    return dict(app=app, controllers=controllers)\n\ndef keepalive():\n    return \'\'\n\ndef search():\n    keywords=request.vars.keywords or \'\'\n    app = get_app()\n    def match(filename,keywords):\n        filename=os.path.join(apath(app, r=request),filename)\n        if keywords in read_file(filename,\'rb\'):\n            return True\n        return False\n    path = apath(request.args[0], r=request)\n    files1 = glob(os.path.join(path,\'*/*.py\'))\n    files2 = glob(os.path.join(path,\'*/*.html\'))\n    files3 = glob(os.path.join(path,\'*/*/*.html\'))\n    files=[x[len(path)+1:].replace(\'\\\\\',\'/\') for x in files1+files2+files3 if match(x,keywords)]\n    return response.json({\'files\':files})\n\ndef edit():\n    """ File edit handler """\n    # Load json only if it is ajax edited...\n    app = get_app()\n    filename = \'/\'.join(request.args)\n    # Try to discover the file type\n    if filename[-3:] == \'.py\':\n        filetype = \'python\'\n    elif filename[-5:] == \'.html\':\n        filetype = \'html\'\n    elif filename[-5:] == \'.load\':\n        filetype = \'html\'\n    elif filename[-4:] == \'.css\':\n        filetype = \'css\'\n    elif filename[-3:] == \'.js\':\n        filetype = \'js\'\n    else:\n        filetype = \'html\'\n\n    # ## check if file is not there\n\n    path = apath(filename, r=request)\n\n    if request.vars.revert and os.path.exists(path + \'.bak\'):\n        try:\n            data = safe_read(path + \'.bak\')\n            data1 = safe_read(path)\n        except IOError:\n            session.flash = T(\'Invalid action\')\n            if \'from_ajax\' in request.vars:\n                 return response.json({\'error\': str(T(\'Invalid action\'))})\n            else:\n                redirect(URL(\'site\'))\n\n        safe_write(path, data)\n        file_hash = md5_hash(data)\n        saved_on = time.ctime(os.stat(path)[stat.ST_MTIME])\n        safe_write(path + \'.bak\', data1)\n        response.flash = T(\'file "%s" of %s restored\', (filename, saved_on))\n    else:\n        try:\n            data = safe_read(path)\n        except IOError:\n            session.flash = T(\'Invalid action\')\n            if \'from_ajax\' in request.vars:\n                return response.json({\'error\': str(T(\'Invalid action\'))})\n            else:\n                redirect(URL(\'site\'))\n\n        file_hash = md5_hash(data)\n        saved_on = time.ctime(os.stat(path)[stat.ST_MTIME])\n\n        if request.vars.file_hash and request.vars.file_hash != file_hash:\n            session.flash = T(\'file changed on disk\')\n            data = request.vars.data.replace(\'\\r\\n\', \'\\n\').strip() + \'\\n\'\n            safe_write(path + \'.1\', data)\n            if \'from_ajax\' in request.vars:\n                return response.json({\'error\': str(T(\'file changed on disk\')),\n                                      \'redirect\': URL(\'resolve\',\n                                                      args=request.args)})\n            else:\n                redirect(URL(\'resolve\', args=request.args))\n        elif request.vars.data:\n            safe_write(path + \'.bak\', data)\n            data = request.vars.data.replace(\'\\r\\n\', \'\\n\').strip() + \'\\n\'\n            safe_write(path, data)\n            file_hash = md5_hash(data)\n            saved_on = time.ctime(os.stat(path)[stat.ST_MTIME])\n            response.flash = T(\'file saved on %s\', saved_on)\n\n    data_or_revert = (request.vars.data or request.vars.revert)\n\n    # Check compile errors\n    highlight = None\n    if filetype == \'python\' and request.vars.data:\n        import _ast\n        try:\n            code = request.vars.data.rstrip().replace(\'\\r\\n\',\'\\n\')+\'\\n\'\n            compile(code, path, "exec", _ast.PyCF_ONLY_AST)\n        except Exception, e:\n            start = sum([len(line)+1 for l, line\n                            in enumerate(request.vars.data.split("\\n"))\n                            if l < e.lineno-1])\n            if e.text and e.offset:\n                offset = e.offset - (len(e.text) - len(e.text.splitlines()[-1]))\n            else:\n                offset = 0\n            highlight = {\'start\': start, \'end\': start + offset + 1}\n            try:\n                ex_name = e.__class__.__name__\n            except:\n                ex_name = \'unknown exception!\'\n            response.flash = DIV(T(\'failed to compile file because:\'), BR(),\n                                 B(ex_name), T(\' at line %s\') % e.lineno,\n                                 offset and T(\' at char %s\') % offset or \'\',\n                                 PRE(str(e)))\n\n    if data_or_revert and request.args[1] == \'modules\':\n        # Lets try to reload the modules\n        try:\n            mopath = \'.\'.join(request.args[2:])[:-3]\n            exec \'import applications.%s.modules.%s\' % (request.args[0], mopath)\n            reload(sys.modules[\'applications.%s.modules.%s\'\n                    % (request.args[0], mopath)])\n        except Exception, e:\n            response.flash = DIV(T(\'failed to reload module because:\'),PRE(str(e)))\n\n    edit_controller = None\n    editviewlinks = None\n    view_link = None\n    if filetype == \'html\' and len(request.args) >= 3:\n        cfilename = os.path.join(request.args[0], \'controllers\',\n                                 request.args[2] + \'.py\')\n        if os.path.exists(apath(cfilename, r=request)):\n            edit_controller = URL(\'edit\', args=[cfilename])\n            view = request.args[3].replace(\'.html\',\'\')\n            view_link = URL(request.args[0],request.args[2],view)\n    elif filetype == \'python\' and request.args[1] == \'controllers\':\n        ## it\'s a controller file.\n        ## Create links to all of the associated view files.\n        app = get_app()\n        viewname = os.path.splitext(request.args[2])[0]\n        viewpath = os.path.join(app,\'views\',viewname)\n        aviewpath = apath(viewpath, r=request)\n        viewlist = []\n        if os.path.exists(aviewpath):\n            if os.path.isdir(aviewpath):\n                viewlist = glob(os.path.join(aviewpath,\'*.html\'))\n        elif os.path.exists(aviewpath+\'.html\'):\n            viewlist.append(aviewpath+\'.html\')\n        if len(viewlist):\n            editviewlinks = []\n            for v in viewlist:\n                vf = os.path.split(v)[-1]\n                vargs = "/".join([viewpath.replace(os.sep,"/"),vf])\n                editviewlinks.append(A(T(vf.split(".")[0]),\\\n                    _href=URL(\'edit\',args=[vargs])))\n\n    if len(request.args) > 2 and request.args[1] == \'controllers\':\n        controller = (request.args[2])[:-3]\n        functions = regex_expose.findall(data)\n    else:\n        (controller, functions) = (None, None)\n\n    if \'from_ajax\' in request.vars:\n        return response.json({\'file_hash\': file_hash, \'saved_on\': saved_on, \'functions\':functions, \'controller\': controller, \'application\': request.args[0], \'highlight\': highlight })\n    else:\n\n        editarea_preferences = {}\n        editarea_preferences[\'FONT_SIZE\'] = \'10\'\n        editarea_preferences[\'FULL_SCREEN\'] = \'false\'\n        editarea_preferences[\'ALLOW_TOGGLE\'] = \'true\'\n        editarea_preferences[\'REPLACE_TAB_BY_SPACES\'] = \'4\'\n        editarea_preferences[\'DISPLAY\'] = \'onload\'\n        for key in editarea_preferences:\n            if globals().has_key(key):\n                editarea_preferences[key]=globals()[key]\n        return dict(app=request.args[0],\n                    filename=filename,\n                    filetype=filetype,\n                    data=data,\n                    edit_controller=edit_controller,\n                    file_hash=file_hash,\n                    saved_on=saved_on,\n                    controller=controller,\n                    functions=functions,\n                    view_link=view_link,\n                    editarea_preferences=editarea_preferences,\n                    editviewlinks=editviewlinks)\n\ndef resolve():\n    """\n    """\n\n    filename = \'/\'.join(request.args)\n    # ## check if file is not there\n    path = apath(filename, r=request)\n    a = safe_read(path).split(\'\\n\')\n    try:\n        b = safe_read(path + \'.1\').split(\'\\n\')\n    except IOError:\n        session.flash = \'Other file, no longer there\'\n        redirect(URL(\'edit\', args=request.args))\n\n    d = difflib.ndiff(a, b)\n\n    def leading(line):\n        """  """\n\n        # TODO: we really need to comment this\n        z = \'\'\n        for (k, c) in enumerate(line):\n            if c == \' \':\n                z += \'&nbsp;\'\n            elif c == \' \\t\':\n                z += \'&nbsp;\'\n            elif k == 0 and c == \'?\':\n                pass\n            else:\n                break\n\n        return XML(z)\n\n    def getclass(item):\n        """ Determine item class """\n\n        if item[0] == \' \':\n            return \'normal\'\n        if item[0] == \'+\':\n            return \'plus\'\n        if item[0] == \'-\':\n            return \'minus\'\n\n    if request.vars:\n        c = \'\\n\'.join([item[2:].rstrip() for (i, item) in enumerate(d) if item[0] \\\n                           == \' \' or \'line%i\' % i in request.vars])\n        safe_write(path, c)\n        session.flash = \'files merged\'\n        redirect(URL(\'edit\', args=request.args))\n    else:\n        # Making the short circuit compatible with <= python2.4\n        gen_data = lambda index,item: not item[:1] in [\'+\',\'-\'] and "" \\\n                   or INPUT(_type=\'checkbox\',\n                            _name=\'line%i\' % index,\n                            value=item[0] == \'+\')\n\n        diff = TABLE(*[TR(TD(gen_data(i,item)),\n                          TD(item[0]),\n                          TD(leading(item[2:]),\n                          TT(item[2:].rstrip())), _class=getclass(item))\n                       for (i, item) in enumerate(d) if item[0] != \'?\'])\n\n    return dict(diff=diff, filename=filename)\n\n\ndef edit_language():\n    """ Edit language file """\n    app = get_app()\n    filename = \'/\'.join(request.args)\n    from gluon.languages import read_dict, write_dict\n    strings = read_dict(apath(filename, r=request))\n    keys = sorted(strings.keys(),lambda x,y: cmp(x.lower(), y.lower()))\n    rows = []\n    rows.append(H2(T(\'Original/Translation\')))\n\n    for key in keys:\n        name = md5_hash(key)\n        if key==strings[key]:\n            _class=\'untranslated\'\n        else:\n            _class=\'translated\'\n        if len(key) <= 40:\n            elem = INPUT(_type=\'text\', _name=name,value=strings[key],\n                         _size=70,_class=_class)\n        else:\n            elem = TEXTAREA(_name=name, value=strings[key], _cols=70,\n                            _rows=5, _class=_class)\n\n        # Making the short circuit compatible with <= python2.4\n        k = (strings[key] != key) and key or B(key)\n\n        rows.append(P(k, BR(), elem, TAG.BUTTON(T(\'delete\'),\n                            _onclick=\'return delkey("%s")\' % name), _id=name))\n\n    rows.append(INPUT(_type=\'submit\', _value=T(\'update\')))\n    form = FORM(*rows)\n    if form.accepts(request.vars, keepvalues=True):\n        strs = dict()\n        for key in keys:\n            name = md5_hash(key)\n            if form.vars[name]==chr(127): continue\n            strs[key] = form.vars[name]\n        write_dict(apath(filename, r=request), strs)\n        session.flash = T(\'file saved on %(time)s\', dict(time=time.ctime()))\n        redirect(URL(r=request,args=request.args))\n    return dict(app=request.args[0], filename=filename, form=form)\n\n\ndef about():\n    """ Read about info """\n    app = get_app()\n    # ## check if file is not there\n    about = safe_read(apath(\'%s/ABOUT\' % app, r=request))\n    license = safe_read(apath(\'%s/LICENSE\' % app, r=request))\n    return dict(app=app, about=MARKMIN(about), license=MARKMIN(license))\n\n\ndef design():\n    """ Application design handler """\n    app = get_app()\n\n    if not response.flash and app == request.application:\n        msg = T(\'ATTENTION: you cannot edit the running application!\')\n        response.flash = msg\n\n    if request.vars.pluginfile!=None and not isinstance(request.vars.pluginfile,str):\n        filename=os.path.basename(request.vars.pluginfile.filename)\n        if plugin_install(app, request.vars.pluginfile.file,\n                          request, filename):\n            session.flash = T(\'new plugin installed\')\n            redirect(URL(\'design\',args=app))\n        else:\n            session.flash = \\\n                T(\'unable to create application "%s"\', request.vars.filename)\n        redirect(URL(r=request))\n    elif isinstance(request.vars.pluginfile,str):\n        session.flash = T(\'plugin not specified\')\n        redirect(URL(r=request))\n\n\n    # If we have only pyc files it means that\n    # we cannot design\n    if os.path.exists(apath(\'%s/compiled\' % app, r=request)):\n        session.flash = \\\n            T(\'application is compiled and cannot be designed\')\n        redirect(URL(\'site\'))\n\n    # Get all models\n    models = listdir(apath(\'%s/models/\' % app, r=request), \'.*\\.py$\')\n    models=[x.replace(\'\\\\\',\'/\') for x in models]\n    defines = {}\n    for m in models:\n        data = safe_read(apath(\'%s/models/%s\' % (app, m), r=request))\n        defines[m] = regex_tables.findall(data)\n        defines[m].sort()\n\n    # Get all controllers\n    controllers = sorted(listdir(apath(\'%s/controllers/\' % app, r=request), \'.*\\.py$\'))\n    controllers = [x.replace(\'\\\\\',\'/\') for x in controllers]\n    functions = {}\n    for c in controllers:\n        data = safe_read(apath(\'%s/controllers/%s\' % (app, c), r=request))\n        items = regex_expose.findall(data)\n        functions[c] = items\n\n    # Get all views\n    views = sorted(listdir(apath(\'%s/views/\' % app, r=request), \'[\\w/\\-]+(\\.\\w+)+$\'))\n    views = [x.replace(\'\\\\\',\'/\') for x in views if not x.endswith(\'.bak\')]\n    extend = {}\n    include = {}\n    for c in views:\n        data = safe_read(apath(\'%s/views/%s\' % (app, c), r=request))\n        items = regex_extend.findall(data)\n\n        if items:\n            extend[c] = items[0][1]\n\n        items = regex_include.findall(data)\n        include[c] = [i[1] for i in items]\n\n    # Get all modules\n    modules = listdir(apath(\'%s/modules/\' % app, r=request), \'.*\\.py$\')\n    modules = modules=[x.replace(\'\\\\\',\'/\') for x in modules]\n    modules.sort()\n\n    # Get all static files\n    statics = listdir(apath(\'%s/static/\' % app, r=request), \'[^\\.#].*\')\n    statics = [x.replace(\'\\\\\',\'/\') for x in statics]\n    statics.sort()\n\n    # Get all languages\n    languages = listdir(apath(\'%s/languages/\' % app, r=request), \'[\\w-]*\\.py\')\n\n    #Get crontab\n    cronfolder = apath(\'%s/cron\' % app, r=request)\n    if not os.path.exists(cronfolder): os.mkdir(cronfolder)\n    crontab = apath(\'%s/cron/crontab\' % app, r=request)\n    if not os.path.exists(crontab):\n        safe_write(crontab, \'#crontab\')\n\n    plugins=[]\n    def filter_plugins(items,plugins):\n        plugins+=[item[7:].split(\'/\')[0].split(\'.\')[0] for item in items if item.startswith(\'plugin_\')]\n        plugins[:]=list(set(plugins))\n        plugins.sort()\n        return [item for item in items if not item.startswith(\'plugin_\')]\n\n    return dict(app=app,\n                models=filter_plugins(models,plugins),\n                defines=defines,\n                controllers=filter_plugins(controllers,plugins),\n                functions=functions,\n                views=filter_plugins(views,plugins),\n                modules=filter_plugins(modules,plugins),\n                extend=extend,\n                include=include,\n                statics=filter_plugins(statics,plugins),\n                languages=languages,\n                crontab=crontab,\n                plugins=plugins)\n\ndef delete_plugin():\n    """ Object delete handler """\n    app=request.args(0)\n    plugin = request.args(1)\n    plugin_name=\'plugin_\'+plugin\n    if \'nodelete\' in request.vars:\n        redirect(URL(\'design\',args=app))\n    elif \'delete\' in request.vars:\n        try:\n            for folder in [\'models\',\'views\',\'controllers\',\'static\',\'modules\']:\n                path=os.path.join(apath(app,r=request),folder)\n                for item in os.listdir(path):\n                    if item.startswith(plugin_name):\n                        filename=os.path.join(path,item)\n                        if os.path.isdir(filename):\n                            shutil.rmtree(filename)\n                        else:\n                            os.unlink(filename)\n            session.flash = T(\'plugin "%(plugin)s" deleted\',\n                              dict(plugin=plugin))\n        except Exception:\n            session.flash = T(\'unable to delete file plugin "%(plugin)s"\',\n                              dict(plugin=plugin))\n        redirect(URL(\'design\',args=request.args(0)))\n    return dict(plugin=plugin)\n\ndef plugin():\n    """ Application design handler """\n    app = get_app()\n    plugin = request.args(1)\n\n    if not response.flash and app == request.application:\n        msg = T(\'ATTENTION: you cannot edit the running application!\')\n        response.flash = msg\n\n    # If we have only pyc files it means that\n    # we cannot design\n    if os.path.exists(apath(\'%s/compiled\' % app, r=request)):\n        session.flash = \\\n            T(\'application is compiled and cannot be designed\')\n        redirect(URL(\'site\'))\n\n    # Get all models\n    models = listdir(apath(\'%s/models/\' % app, r=request), \'.*\\.py$\')\n    models=[x.replace(\'\\\\\',\'/\') for x in models]\n    defines = {}\n    for m in models:\n        data = safe_read(apath(\'%s/models/%s\' % (app, m), r=request))\n        defines[m] = regex_tables.findall(data)\n        defines[m].sort()\n\n    # Get all controllers\n    controllers = sorted(listdir(apath(\'%s/controllers/\' % app, r=request), \'.*\\.py$\'))\n    controllers = [x.replace(\'\\\\\',\'/\') for x in controllers]\n    functions = {}\n    for c in controllers:\n        data = safe_read(apath(\'%s/controllers/%s\' % (app, c), r=request))\n        items = regex_expose.findall(data)\n        functions[c] = items\n\n    # Get all views\n    views = sorted(listdir(apath(\'%s/views/\' % app, r=request), \'[\\w/\\-]+\\.\\w+$\'))\n    views = [x.replace(\'\\\\\',\'/\') for x in views]\n    extend = {}\n    include = {}\n    for c in views:\n        data = safe_read(apath(\'%s/views/%s\' % (app, c), r=request))\n        items = regex_extend.findall(data)\n        if items:\n            extend[c] = items[0][1]\n\n        items = regex_include.findall(data)\n        include[c] = [i[1] for i in items]\n\n    # Get all modules\n    modules = listdir(apath(\'%s/modules/\' % app, r=request), \'.*\\.py$\')\n    modules = modules=[x.replace(\'\\\\\',\'/\') for x in modules]\n    modules.sort()\n\n    # Get all static files\n    statics = listdir(apath(\'%s/static/\' % app, r=request), \'[^\\.#].*\')\n    statics = [x.replace(\'\\\\\',\'/\') for x in statics]\n    statics.sort()\n\n    # Get all languages\n    languages = listdir(apath(\'%s/languages/\' % app, r=request), \'[\\w-]*\\.py\')\n\n    #Get crontab\n    crontab = apath(\'%s/cron/crontab\' % app, r=request)\n    if not os.path.exists(crontab):\n        safe_write(crontab, \'#crontab\')\n\n    def filter_plugins(items):\n        regex=re.compile(\'^plugin_\'+plugin+\'(/.*|\\..*)?$\')\n        return [item for item in items if regex.match(item)]\n\n    return dict(app=app,\n                models=filter_plugins(models),\n                defines=defines,\n                controllers=filter_plugins(controllers),\n                functions=functions,\n                views=filter_plugins(views),\n                modules=filter_plugins(modules),\n                extend=extend,\n                include=include,\n                statics=filter_plugins(statics),\n                languages=languages,\n                crontab=crontab)\n\n\ndef create_file():\n    """ Create files handler """\n    try:\n        app = get_app(name=request.vars.location.split(\'/\')[0])\n        path = apath(request.vars.location, r=request)\n        filename = re.sub(\'[^\\w./-]+\', \'_\', request.vars.filename)\n\n        if path[-11:] == \'/languages/\':\n            # Handle language files\n            if len(filename) == 0:\n                raise SyntaxError\n            if not filename[-3:] == \'.py\':\n                filename += \'.py\'\n            app = path.split(\'/\')[-3]\n            path=os.path.join(apath(app, r=request),\'languages\',filename)\n            if not os.path.exists(path):\n                safe_write(path, \'\')\n            findT(apath(app, r=request), filename[:-3])\n            session.flash = T(\'language file "%(filename)s" created/updated\',\n                              dict(filename=filename))\n            redirect(request.vars.sender)\n\n        elif path[-8:] == \'/models/\':\n            # Handle python models\n            if not filename[-3:] == \'.py\':\n                filename += \'.py\'\n\n            if len(filename) == 3:\n                raise SyntaxError\n\n            text = \'# coding: utf8\\n\'\n\n        elif path[-13:] == \'/controllers/\':\n            # Handle python controllers\n            if not filename[-3:] == \'.py\':\n                filename += \'.py\'\n\n            if len(filename) == 3:\n                raise SyntaxError\n\n            text = \'# coding: utf8\\n# %s\\ndef index(): return dict(message="hello from %s")\'\n            text = text % (T(\'try something like\'), filename)\n\n        elif path[-7:] == \'/views/\':\n            if request.vars.plugin and not filename.startswith(\'plugin_%s/\' % request.vars.plugin):\n                filename = \'plugin_%s/%s\' % (request.vars.plugin, filename)\n            # Handle template (html) views\n            if filename.find(\'.\')<0:\n                filename += \'.html\'\n            extension = filename.split(\'.\')[-1].lower()\n\n            if len(filename) == 5:\n                raise SyntaxError\n\n            msg = T(\'This is the %(filename)s template\',\n                    dict(filename=filename))            \n            if extension == \'html\':\n                text = dedent("""\n                   {{extend \'layout.html\'}}\n                   <h1>%s</h1>\n                   {{=BEAUTIFY(response._vars)}}""" % msg)\n            else:\n                generic = os.path.join(path,\'generic.\'+extension)\n                if os.path.exists(generic):\n                    text = read_file(generic)\n                else:\n                    text = \'\'\n                \n        elif path[-9:] == \'/modules/\':\n            if request.vars.plugin and not filename.startswith(\'plugin_%s/\' % request.vars.plugin):\n                filename = \'plugin_%s/%s\' % (request.vars.plugin, filename)\n            # Handle python module files\n            if not filename[-3:] == \'.py\':\n                filename += \'.py\'\n\n            if len(filename) == 3:\n                raise SyntaxError\n\n            text = dedent("""\n                   #!/usr/bin/env python\n                   # coding: utf8\n                   from gluon import *\\n""")\n\n        elif path[-8:] == \'/static/\':\n            if request.vars.plugin and not filename.startswith(\'plugin_%s/\' % request.vars.plugin):\n                filename = \'plugin_%s/%s\' % (request.vars.plugin, filename)\n            text = \'\'\n        else:\n            redirect(request.vars.sender)\n\n        full_filename = os.path.join(path, filename)\n        dirpath = os.path.dirname(full_filename)\n\n        if not os.path.exists(dirpath):\n            os.makedirs(dirpath)\n\n        if os.path.exists(full_filename):\n            raise SyntaxError\n\n        safe_write(full_filename, text)\n        session.flash = T(\'file "%(filename)s" created\',\n                          dict(filename=full_filename[len(path):]))\n        redirect(URL(\'edit\',\n                 args=[os.path.join(request.vars.location, filename)]))\n    except Exception, e:\n        if not isinstance(e,HTTP):\n            session.flash = T(\'cannot create file\')\n\n    redirect(request.vars.sender)\n\n\ndef upload_file():\n    """ File uploading handler """\n\n    try:\n        filename = None\n        app = get_app(name=request.vars.location.split(\'/\')[0])\n        path = apath(request.vars.location, r=request)\n\n        if request.vars.filename:\n            filename = re.sub(\'[^\\w\\./]+\', \'_\', request.vars.filename)\n        else:\n            filename = os.path.split(request.vars.file.filename)[-1]\n\n        if path[-8:] == \'/models/\' and not filename[-3:] == \'.py\':\n            filename += \'.py\'\n\n        if path[-9:] == \'/modules/\' and not filename[-3:] == \'.py\':\n            filename += \'.py\'\n\n        if path[-13:] == \'/controllers/\' and not filename[-3:] == \'.py\':\n            filename += \'.py\'\n\n        if path[-7:] == \'/views/\' and not filename[-5:] == \'.html\':\n            filename += \'.html\'\n\n        if path[-11:] == \'/languages/\' and not filename[-3:] == \'.py\':\n            filename += \'.py\'\n\n        filename = os.path.join(path, filename)\n        dirpath = os.path.dirname(filename)\n\n        if not os.path.exists(dirpath):\n            os.makedirs(dirpath)\n\n        safe_write(filename, request.vars.file.file.read(), \'wb\')\n        session.flash = T(\'file "%(filename)s" uploaded\',\n                          dict(filename=filename[len(path):]))\n    except Exception:\n        if filename:\n            d = dict(filename = filename[len(path):])\n        else:\n            d = dict(filename = \'unkown\')\n        session.flash = T(\'cannot upload file "%(filename)s"\', d)\n\n    redirect(request.vars.sender)\n\n\ndef errors():\n    """ Error handler """\n    import operator\n    import os\n    import pickle\n    import hashlib\n\n    app = get_app()\n\n    method = request.args(1) or \'new\'\n\n\n    if method == \'new\':\n        errors_path = apath(\'%s/errors\' % app, r=request)\n\n        delete_hashes = []\n        for item in request.vars:\n            if item[:7] == \'delete_\':\n                delete_hashes.append(item[7:])\n\n        hash2error = dict()\n\n        for fn in listdir(errors_path, \'^\\w.*\'):\n            fullpath = os.path.join(errors_path, fn)\n            if not os.path.isfile(fullpath): continue\n            try:\n                fullpath_file = open(fullpath, \'r\')\n                try:\n                    error = pickle.load(fullpath_file)\n                finally:\n                    fullpath_file.close()\n            except IOError:\n                continue\n\n            hash = hashlib.md5(error[\'traceback\']).hexdigest()\n\n            if hash in delete_hashes:\n                os.unlink(fullpath)\n            else:\n                try:\n                    hash2error[hash][\'count\'] += 1\n                except KeyError:\n                    error_lines = error[\'traceback\'].split("\\n")\n                    last_line = error_lines[-2]\n                    error_causer = os.path.split(error[\'layer\'])[1]\n                    hash2error[hash] = dict(count=1, pickel=error,\n                                            causer=error_causer,\n                                            last_line=last_line,\n                                            hash=hash,ticket=fn)\n\n        decorated = [(x[\'count\'], x) for x in hash2error.values()]\n        decorated.sort(key=operator.itemgetter(0), reverse=True)\n\n        return dict(errors = [x[1] for x in decorated], app=app, method=method)\n    else:\n        for item in request.vars:\n            if item[:7] == \'delete_\':\n                os.unlink(apath(\'%s/errors/%s\' % (app, item[7:]), r=request))\n        func = lambda p: os.stat(apath(\'%s/errors/%s\' % \\\n                                           (app, p), r=request)).st_mtime\n        tickets = sorted(listdir(apath(\'%s/errors/\' % app, r=request), \'^\\w.*\'),\n                         key=func,\n                         reverse=True)\n\n        return dict(app=app, tickets=tickets, method=method)\n\n\ndef make_link(path):\n    """ Create a link from a path """\n    tryFile = path.replace(\'\\\\\', \'/\')\n\n    if os.path.isabs(tryFile) and os.path.isfile(tryFile):\n        (folder, filename) = os.path.split(tryFile)\n        (base, ext) = os.path.splitext(filename)\n        app = get_app()\n\n        editable = {\'controllers\': \'.py\', \'models\': \'.py\', \'views\': \'.html\'}\n        for key in editable.keys():\n            check_extension = folder.endswith("%s/%s" % (app,key))\n            if ext.lower() == editable[key] and check_extension:\n                return A(\'"\' + tryFile + \'"\',\n                         _href=URL(r=request,\n                         f=\'edit/%s/%s/%s\' % (app, key, filename))).xml()\n    return \'\'\n\n\ndef make_links(traceback):\n    """ Make links using the given traceback """\n\n    lwords = traceback.split(\'"\')\n\n    # Making the short circuit compatible with <= python2.4\n    result = (len(lwords) != 0) and lwords[0] or \'\'\n\n    i = 1\n\n    while i < len(lwords):\n        link = make_link(lwords[i])\n\n        if link == \'\':\n            result += \'"\' + lwords[i]\n        else:\n            result += link\n\n            if i + 1 < len(lwords):\n                result += lwords[i + 1]\n                i = i + 1\n\n        i = i + 1\n\n    return result\n\n\nclass TRACEBACK(object):\n    """ Generate the traceback """\n\n    def __init__(self, text):\n        """ TRACEBACK constructor """\n\n        self.s = make_links(CODE(text).xml())\n\n    def xml(self):\n        """ Returns the xml """\n\n        return self.s\n\n\ndef ticket():\n    """ Ticket handler """\n\n    if len(request.args) != 2:\n        session.flash = T(\'invalid ticket\')\n        redirect(URL(\'site\'))\n\n    app = get_app()\n    myversion = request.env.web2py_version\n    ticket = request.args[1]\n    e = RestrictedError()\n    e.load(request, app, ticket)\n\n    return dict(app=app,\n                ticket=ticket,\n                output=e.output,\n                traceback=(e.traceback and TRACEBACK(e.traceback)),\n                snapshot=e.snapshot,\n                code=e.code,\n                layer=e.layer,\n                myversion=myversion)\n\ndef error():\n    """ Generate a ticket (for testing) """\n    raise RuntimeError(\'admin ticket generator at your service\')\n\ndef update_languages():\n    """ Update available languages """\n\n    app = get_app()\n    update_all_languages(apath(app, r=request))\n    session.flash = T(\'Language files (static strings) updated\')\n    redirect(URL(\'design\',args=app,anchor=\'languages\'))\n\ndef twitter():\n    session.forget()\n    session._unlock(response)\n    import gluon.tools\n    import gluon.contrib.simplejson as sj\n    try:\n        if TWITTER_HASH:\n            page = gluon.tools.fetch(\'http://twitter.com/%s?format=json\'%TWITTER_HASH)\n            return sj.loads(page)[\'#timeline\']\n        else:\n            return \'disabled\'\n    except Exception, e:\n        return DIV(T(\'Unable to download because:\'),BR(),str(e))\n\ndef user():\n    if MULTI_USER_MODE:\n        if not db(db.auth_user).count():\n            auth.settings.registration_requires_approval = False            \n        return dict(form=auth())\n    else:\n        return dict(form=T("Disabled"))\n\ndef reload_routes():\n    """ Reload routes.py """\n    import gluon.rewrite\n    gluon.rewrite.load()\n    redirect(URL(\'site\'))\n\nresponse._vars=response._caller(check_version)\n'
p6
sS'snapshot'
p7
(dp8
S'exception'
p9
(dp10
S'__hash__'
p11
S"<method-wrapper '__hash__' of exceptions.TypeError object at 0x03436300>"
p12
sS'__setattr__'
p13
S"<method-wrapper '__setattr__' of exceptions.TypeError object at 0x03436300>"
p14
sS'__reduce_ex__'
p15
S'<built-in method __reduce_ex__ of exceptions.TypeError object at 0x03436300>'
p16
sS'__getslice__'
p17
S"<method-wrapper '__getslice__' of exceptions.TypeError object at 0x03436300>"
p18
sS'__getitem__'
p19
S"<method-wrapper '__getitem__' of exceptions.TypeError object at 0x03436300>"
p20
sS'__setstate__'
p21
S'<built-in method __setstate__ of exceptions.TypeError object at 0x03436300>'
p22
sS'__reduce__'
p23
S'<built-in method __reduce__ of exceptions.TypeError object at 0x03436300>'
p24
sS'__str__'
p25
S"<method-wrapper '__str__' of exceptions.TypeError object at 0x03436300>"
p26
sS'args'
p27
S"('not all arguments converted during string formatting',)"
p28
sS'__getattribute__'
p29
S"<method-wrapper '__getattribute__' of exceptions.TypeError object at 0x03436300>"
p30
sS'__class__'
p31
S"<type 'exceptions.TypeError'>"
p32
sS'__delattr__'
p33
S"<method-wrapper '__delattr__' of exceptions.TypeError object at 0x03436300>"
p34
sS'__repr__'
p35
S"<method-wrapper '__repr__' of exceptions.TypeError object at 0x03436300>"
p36
sS'__dict__'
p37
S'{}'
p38
sS'__doc__'
p39
S"'Inappropriate argument type.'"
p40
sS'__init__'
p41
S"<method-wrapper '__init__' of exceptions.TypeError object at 0x03436300>"
p42
sS'__new__'
p43
S'<built-in method __new__ of type object at 0x1E1CCD78>'
p44
ssS'evalue'
p45
S'not all arguments converted during string formatting'
p46
sS'request'
p47
ccopy_reg
_reconstructor
p48
(cgluon.html
BEAUTIFY
p49
c__builtin__
object
p50
NtRp51
(dp52
S'attributes'
p53
(dp54
sS'components'
p55
(lp56
g48
(cgluon.html
TABLE
p57
g50
NtRp58
(dp59
g53
(dp60
S'level'
p61
I5
ssS'parent'
p62
Nsg55
(lp63
g48
(cgluon.html
TR
p64
g50
NtRp65
(dp66
g53
(dp67
sg62
g58
sg55
(lp68
g48
(cgluon.html
TD
p69
g50
NtRp70
(dp71
g53
(dp72
S'_style'
p73
S'font-weight:bold;'
p74
ssg62
g65
sg55
(lp75
S'ajax'
p76
asbag48
(g69
g50
NtRp77
(dp78
g53
(dp79
S'_valign'
p80
S'top'
p81
ssg62
g65
sg55
(lp82
S':'
asbag48
(g69
g50
NtRp83
(dp84
g53
(dp85
sg62
g65
sg55
(lp86
g48
(g49
g50
NtRp87
(dp88
g53
(dp89
g61
I5
ssg62
g83
sg55
(lp90
S'True'
p91
asbasbasbag48
(g64
g50
NtRp92
(dp93
g53
(dp94
sg62
g58
sg55
(lp95
g48
(g69
g50
NtRp96
(dp97
g53
(dp98
g73
g74
ssg62
g92
sg55
(lp99
S'application'
p100
asbag48
(g69
g50
NtRp101
(dp102
g53
(dp103
g80
g81
ssg62
g92
sg55
(lp104
S':'
asbag48
(g69
g50
NtRp105
(dp106
g53
(dp107
sg62
g92
sg55
(lp108
g48
(g49
g50
NtRp109
(dp110
g53
(dp111
g61
I5
ssg62
g105
sg55
(lp112
S'admin'
p113
asbasbasbag48
(g64
g50
NtRp114
(dp115
g53
(dp116
sg62
g58
sg55
(lp117
g48
(g69
g50
NtRp118
(dp119
g53
(dp120
g73
g74
ssg62
g114
sg55
(lp121
g27
asbag48
(g69
g50
NtRp122
(dp123
g53
(dp124
g80
g81
ssg62
g114
sg55
(lp125
S':'
asbag48
(g69
g50
NtRp126
(dp127
g53
(dp128
sg62
g114
sg55
(lp129
g48
(g49
g50
NtRp130
(dp131
g53
(dp132
g61
I5
ssg62
g126
sg55
(lp133
g48
(g57
g50
NtRp134
(dp135
g53
(dp136
g61
I4
ssg62
Nsg55
(lp137
sbasbasbasbag48
(g64
g50
NtRp138
(dp139
g53
(dp140
sg62
g58
sg55
(lp141
g48
(g69
g50
NtRp142
(dp143
g53
(dp144
g73
g74
ssg62
g138
sg55
(lp145
S'body'
p146
asbag48
(g69
g50
NtRp147
(dp148
g53
(dp149
g80
g81
ssg62
g138
sg55
(lp150
S':'
asbag48
(g69
g50
NtRp151
(dp152
g53
(dp153
sg62
g138
sg55
(lp154
g48
(g49
g50
NtRp155
(dp156
g53
(dp157
g61
I5
ssg62
g151
sg55
(lp158
S"<open file '<fdopen>', mode 'w+b' at 0x03419218>"
p159
asbasbasbag48
(g64
g50
NtRp160
(dp161
g53
(dp162
sg62
g58
sg55
(lp163
g48
(g69
g50
NtRp164
(dp165
g53
(dp166
g73
g74
ssg62
g160
sg55
(lp167
S'client'
p168
asbag48
(g69
g50
NtRp169
(dp170
g53
(dp171
g80
g81
ssg62
g160
sg55
(lp172
S':'
asbag48
(g69
g50
NtRp173
(dp174
g53
(dp175
sg62
g160
sg55
(lp176
g48
(g49
g50
NtRp177
(dp178
g53
(dp179
g61
I5
ssg62
g173
sg55
(lp180
S'127.0.0.1'
p181
asbasbasbag48
(g64
g50
NtRp182
(dp183
g53
(dp184
sg62
g58
sg55
(lp185
g48
(g69
g50
NtRp186
(dp187
g53
(dp188
g73
g74
ssg62
g182
sg55
(lp189
S'controller'
p190
asbag48
(g69
g50
NtRp191
(dp192
g53
(dp193
g80
g81
ssg62
g182
sg55
(lp194
S':'
asbag48
(g69
g50
NtRp195
(dp196
g53
(dp197
sg62
g182
sg55
(lp198
g48
(g49
g50
NtRp199
(dp200
g53
(dp201
g61
I5
ssg62
g195
sg55
(lp202
S'default'
p203
asbasbasbag48
(g64
g50
NtRp204
(dp205
g53
(dp206
sg62
g58
sg55
(lp207
g48
(g69
g50
NtRp208
(dp209
g53
(dp210
g73
g74
ssg62
g204
sg55
(lp211
S'cookies'
p212
asbag48
(g69
g50
NtRp213
(dp214
g53
(dp215
g80
g81
ssg62
g204
sg55
(lp216
S':'
asbag48
(g69
g50
NtRp217
(dp218
g53
(dp219
sg62
g204
sg55
(lp220
g48
(g49
g50
NtRp221
(dp222
g53
(dp223
g61
I5
ssg62
g217
sg55
(lp224
g48
(g57
g50
NtRp225
(dp226
g53
(dp227
g61
I4
ssg62
Nsg55
(lp228
g48
(g64
g50
NtRp229
(dp230
g53
(dp231
sg62
g225
sg55
(lp232
g48
(g69
g50
NtRp233
(dp234
g53
(dp235
g73
g74
ssg62
g229
sg55
(lp236
S'session_id_admin'
p237
asbag48
(g69
g50
NtRp238
(dp239
g53
(dp240
g80
g81
ssg62
g229
sg55
(lp241
S':'
asbag48
(g69
g50
NtRp242
(dp243
g53
(dp244
sg62
g229
sg55
(lp245
g48
(g49
g50
NtRp246
(dp247
g53
(dp248
g61
I4
ssg62
g242
sg55
(lp249
g48
(g57
g50
NtRp250
(dp251
g53
(dp252
g61
I3
ssg62
Nsg55
(lp253
g48
(g64
g50
NtRp254
(dp255
g53
(dp256
sg62
g250
sg55
(lp257
g48
(g69
g50
NtRp258
(dp259
g53
(dp260
g73
g74
ssg62
g254
sg55
(lp261
S'comment'
p262
asbag48
(g69
g50
NtRp263
(dp264
g53
(dp265
g80
g81
ssg62
g254
sg55
(lp266
S':'
asbag48
(g69
g50
NtRp267
(dp268
g53
(dp269
sg62
g254
sg55
(lp270
g48
(g49
g50
NtRp271
(dp272
g53
(dp273
g61
I3
ssg62
g267
sg55
(lp274
S''
asbasbasbag48
(g64
g50
NtRp275
(dp276
g53
(dp277
sg62
g250
sg55
(lp278
g48
(g69
g50
NtRp279
(dp280
g53
(dp281
g73
g74
ssg62
g275
sg55
(lp282
S'domain'
p283
asbag48
(g69
g50
NtRp284
(dp285
g53
(dp286
g80
g81
ssg62
g275
sg55
(lp287
S':'
asbag48
(g69
g50
NtRp288
(dp289
g53
(dp290
sg62
g275
sg55
(lp291
g48
(g49
g50
NtRp292
(dp293
g53
(dp294
g61
I3
ssg62
g288
sg55
(lp295
S''
asbasbasbag48
(g64
g50
NtRp296
(dp297
g53
(dp298
sg62
g250
sg55
(lp299
g48
(g69
g50
NtRp300
(dp301
g53
(dp302
g73
g74
ssg62
g296
sg55
(lp303
S'expires'
p304
asbag48
(g69
g50
NtRp305
(dp306
g53
(dp307
g80
g81
ssg62
g296
sg55
(lp308
S':'
asbag48
(g69
g50
NtRp309
(dp310
g53
(dp311
sg62
g296
sg55
(lp312
g48
(g49
g50
NtRp313
(dp314
g53
(dp315
g61
I3
ssg62
g309
sg55
(lp316
S''
asbasbasbag48
(g64
g50
NtRp317
(dp318
g53
(dp319
sg62
g250
sg55
(lp320
g48
(g69
g50
NtRp321
(dp322
g53
(dp323
g73
g74
ssg62
g317
sg55
(lp324
S'max-age'
p325
asbag48
(g69
g50
NtRp326
(dp327
g53
(dp328
g80
g81
ssg62
g317
sg55
(lp329
S':'
asbag48
(g69
g50
NtRp330
(dp331
g53
(dp332
sg62
g317
sg55
(lp333
g48
(g49
g50
NtRp334
(dp335
g53
(dp336
g61
I3
ssg62
g330
sg55
(lp337
S''
asbasbasbag48
(g64
g50
NtRp338
(dp339
g53
(dp340
sg62
g250
sg55
(lp341
g48
(g69
g50
NtRp342
(dp343
g53
(dp344
g73
g74
ssg62
g338
sg55
(lp345
S'path'
p346
asbag48
(g69
g50
NtRp347
(dp348
g53
(dp349
g80
g81
ssg62
g338
sg55
(lp350
S':'
asbag48
(g69
g50
NtRp351
(dp352
g53
(dp353
sg62
g338
sg55
(lp354
g48
(g49
g50
NtRp355
(dp356
g53
(dp357
g61
I3
ssg62
g351
sg55
(lp358
S''
asbasbasbag48
(g64
g50
NtRp359
(dp360
g53
(dp361
sg62
g250
sg55
(lp362
g48
(g69
g50
NtRp363
(dp364
g53
(dp365
g73
g74
ssg62
g359
sg55
(lp366
S'secure'
p367
asbag48
(g69
g50
NtRp368
(dp369
g53
(dp370
g80
g81
ssg62
g359
sg55
(lp371
S':'
asbag48
(g69
g50
NtRp372
(dp373
g53
(dp374
sg62
g359
sg55
(lp375
g48
(g49
g50
NtRp376
(dp377
g53
(dp378
g61
I3
ssg62
g372
sg55
(lp379
S''
asbasbasbag48
(g64
g50
NtRp380
(dp381
g53
(dp382
sg62
g250
sg55
(lp383
g48
(g69
g50
NtRp384
(dp385
g53
(dp386
g73
g74
ssg62
g380
sg55
(lp387
S'version'
p388
asbag48
(g69
g50
NtRp389
(dp390
g53
(dp391
g80
g81
ssg62
g380
sg55
(lp392
S':'
asbag48
(g69
g50
NtRp393
(dp394
g53
(dp395
sg62
g380
sg55
(lp396
g48
(g49
g50
NtRp397
(dp398
g53
(dp399
g61
I3
ssg62
g393
sg55
(lp400
S''
asbasbasbasbasbasbasbasbasbasbasbag48
(g64
g50
NtRp401
(dp402
g53
(dp403
sg62
g58
sg55
(lp404
g48
(g69
g50
NtRp405
(dp406
g53
(dp407
g73
g74
ssg62
g401
sg55
(lp408
S'env'
p409
asbag48
(g69
g50
NtRp410
(dp411
g53
(dp412
g80
g81
ssg62
g401
sg55
(lp413
S':'
asbag48
(g69
g50
NtRp414
(dp415
g53
(dp416
sg62
g401
sg55
(lp417
g48
(g49
g50
NtRp418
(dp419
g53
(dp420
g61
I5
ssg62
g414
sg55
(lp421
g48
(g57
g50
NtRp422
(dp423
g53
(dp424
g61
I4
ssg62
Nsg55
(lp425
g48
(g64
g50
NtRp426
(dp427
g53
(dp428
sg62
g422
sg55
(lp429
g48
(g69
g50
NtRp430
(dp431
g53
(dp432
g73
g74
ssg62
g426
sg55
(lp433
S'app_folders'
p434
asbag48
(g69
g50
NtRp435
(dp436
g53
(dp437
g80
g81
ssg62
g426
sg55
(lp438
S':'
asbag48
(g69
g50
NtRp439
(dp440
g53
(dp441
sg62
g426
sg55
(lp442
g48
(g49
g50
NtRp443
(dp444
g53
(dp445
g61
I4
ssg62
g439
sg55
(lp446
S"set(['D:\\\\Dropbox\\\\Eclipse\\\\JRMSiteApp\\\\web2py\\\\applications\\\\admin\\\\'])"
p447
asbasbasbag48
(g64
g50
NtRp448
(dp449
g53
(dp450
sg62
g422
sg55
(lp451
g48
(g69
g50
NtRp452
(dp453
g53
(dp454
g73
g74
ssg62
g448
sg55
(lp455
S'applications_parent'
p456
asbag48
(g69
g50
NtRp457
(dp458
g53
(dp459
g80
g81
ssg62
g448
sg55
(lp460
S':'
asbag48
(g69
g50
NtRp461
(dp462
g53
(dp463
sg62
g448
sg55
(lp464
g48
(g49
g50
NtRp465
(dp466
g53
(dp467
g61
I4
ssg62
g461
sg55
(lp468
S'D:\\Dropbox\\Eclipse\\JRMSiteApp\\web2py'
p469
asbasbasbag48
(g64
g50
NtRp470
(dp471
g53
(dp472
sg62
g422
sg55
(lp473
g48
(g69
g50
NtRp474
(dp475
g53
(dp476
g73
g74
ssg62
g470
sg55
(lp477
S'cmd_args'
p478
asbag48
(g69
g50
NtRp479
(dp480
g53
(dp481
g80
g81
ssg62
g470
sg55
(lp482
S':'
asbag48
(g69
g50
NtRp483
(dp484
g53
(dp485
sg62
g470
sg55
(lp486
g48
(g49
g50
NtRp487
(dp488
g53
(dp489
g61
I4
ssg62
g483
sg55
(lp490
g48
(g57
g50
NtRp491
(dp492
g53
(dp493
g61
I3
ssg62
Nsg55
(lp494
sbasbasbasbag48
(g64
g50
NtRp495
(dp496
g53
(dp497
sg62
g422
sg55
(lp498
g48
(g69
g50
NtRp499
(dp500
g53
(dp501
g73
g74
ssg62
g495
sg55
(lp502
S'cmd_options'
p503
asbag48
(g69
g50
NtRp504
(dp505
g53
(dp506
g80
g81
ssg62
g495
sg55
(lp507
S':'
asbag48
(g69
g50
NtRp508
(dp509
g53
(dp510
sg62
g495
sg55
(lp511
g48
(g49
g50
NtRp512
(dp513
g53
(dp514
g61
I4
ssg62
g508
sg55
(lp515
S"<Values at 0x321b788: {'verbose': False, 'ip': '127.0.0.1', 'shutdown_timeout': 5, 'taskbar': False, 'nocron': False, 'pid_filename': 'httpserver.pid', 'maxthreads': None, 'softcron': False, 'server_name': 'John-PC', 'bpython': False, 'nogui': False, 'port': 8000, 'extcron': False, 'debuglevel': 30, 'test': None, 'folder': 'D:\\\\Dropbox\\\\Eclipse\\\\JRMSiteApp\\\\web2py', 'config': '', 'import_models': False, 'winservice': '', 'shell': None, 'run': '', 'log_filename': 'httpserver.log', 'args': [''], 'ssl_ca_certificate': None, 'scheduler': None, 'profiler_filename': None, 'ssl_private_key': '', 'password': '<ask>', 'request_queue_size': 5, 'ssl_certificate': '', 'cronjob': False, 'plain': False, 'quiet': False, 'interfaces': None, 'minthreads': None, 'timeout': 10, 'numthreads': None, 'nobanner': False}>"
p516
asbasbasbag48
(g64
g50
NtRp517
(dp518
g53
(dp519
sg62
g422
sg55
(lp520
g48
(g69
g50
NtRp521
(dp522
g53
(dp523
g73
g74
ssg62
g517
sg55
(lp524
S'content_length'
p525
asbag48
(g69
g50
NtRp526
(dp527
g53
(dp528
g80
g81
ssg62
g517
sg55
(lp529
S':'
asbag48
(g69
g50
NtRp530
(dp531
g53
(dp532
sg62
g517
sg55
(lp533
g48
(g49
g50
NtRp534
(dp535
g53
(dp536
g61
I4
ssg62
g530
sg55
(lp537
S'0'
asbasbasbag48
(g64
g50
NtRp538
(dp539
g53
(dp540
sg62
g422
sg55
(lp541
g48
(g69
g50
NtRp542
(dp543
g53
(dp544
g73
g74
ssg62
g538
sg55
(lp545
S'db_sessions'
p546
asbag48
(g69
g50
NtRp547
(dp548
g53
(dp549
g80
g81
ssg62
g538
sg55
(lp550
S':'
asbag48
(g69
g50
NtRp551
(dp552
g53
(dp553
sg62
g538
sg55
(lp554
g48
(g49
g50
NtRp555
(dp556
g53
(dp557
g61
I4
ssg62
g551
sg55
(lp558
S'set([])'
p559
asbasbasbag48
(g64
g50
NtRp560
(dp561
g53
(dp562
sg62
g422
sg55
(lp563
g48
(g69
g50
NtRp564
(dp565
g53
(dp566
g73
g74
ssg62
g560
sg55
(lp567
S'debugging'
p568
asbag48
(g69
g50
NtRp569
(dp570
g53
(dp571
g80
g81
ssg62
g560
sg55
(lp572
S':'
asbag48
(g69
g50
NtRp573
(dp574
g53
(dp575
sg62
g560
sg55
(lp576
g48
(g49
g50
NtRp577
(dp578
g53
(dp579
g61
I4
ssg62
g573
sg55
(lp580
S'False'
p581
asbasbasbag48
(g64
g50
NtRp582
(dp583
g53
(dp584
sg62
g422
sg55
(lp585
g48
(g69
g50
NtRp586
(dp587
g53
(dp588
g73
g74
ssg62
g582
sg55
(lp589
S'gluon_parent'
p590
asbag48
(g69
g50
NtRp591
(dp592
g53
(dp593
g80
g81
ssg62
g582
sg55
(lp594
S':'
asbag48
(g69
g50
NtRp595
(dp596
g53
(dp597
sg62
g582
sg55
(lp598
g48
(g49
g50
NtRp599
(dp600
g53
(dp601
g61
I4
ssg62
g595
sg55
(lp602
S'D:\\Dropbox\\Eclipse\\JRMSiteApp\\web2py'
p603
asbasbasbag48
(g64
g50
NtRp604
(dp605
g53
(dp606
sg62
g422
sg55
(lp607
g48
(g69
g50
NtRp608
(dp609
g53
(dp610
g73
g74
ssg62
g604
sg55
(lp611
S'http_accept'
p612
asbag48
(g69
g50
NtRp613
(dp614
g53
(dp615
g80
g81
ssg62
g604
sg55
(lp616
S':'
asbag48
(g69
g50
NtRp617
(dp618
g53
(dp619
sg62
g604
sg55
(lp620
g48
(g49
g50
NtRp621
(dp622
g53
(dp623
g61
I4
ssg62
g617
sg55
(lp624
S'*/*'
p625
asbasbasbag48
(g64
g50
NtRp626
(dp627
g53
(dp628
sg62
g422
sg55
(lp629
g48
(g69
g50
NtRp630
(dp631
g53
(dp632
g73
g74
ssg62
g626
sg55
(lp633
S'http_accept_charset'
p634
asbag48
(g69
g50
NtRp635
(dp636
g53
(dp637
g80
g81
ssg62
g626
sg55
(lp638
S':'
asbag48
(g69
g50
NtRp639
(dp640
g53
(dp641
sg62
g626
sg55
(lp642
g48
(g49
g50
NtRp643
(dp644
g53
(dp645
g61
I4
ssg62
g639
sg55
(lp646
S'ISO-8859-1,utf-8;q=0.7,*;q=0.3'
p647
asbasbasbag48
(g64
g50
NtRp648
(dp649
g53
(dp650
sg62
g422
sg55
(lp651
g48
(g69
g50
NtRp652
(dp653
g53
(dp654
g73
g74
ssg62
g648
sg55
(lp655
S'http_accept_encoding'
p656
asbag48
(g69
g50
NtRp657
(dp658
g53
(dp659
g80
g81
ssg62
g648
sg55
(lp660
S':'
asbag48
(g69
g50
NtRp661
(dp662
g53
(dp663
sg62
g648
sg55
(lp664
g48
(g49
g50
NtRp665
(dp666
g53
(dp667
g61
I4
ssg62
g661
sg55
(lp668
S'gzip,deflate,sdch'
p669
asbasbasbag48
(g64
g50
NtRp670
(dp671
g53
(dp672
sg62
g422
sg55
(lp673
g48
(g69
g50
NtRp674
(dp675
g53
(dp676
g73
g74
ssg62
g670
sg55
(lp677
S'http_accept_language'
p678
asbag48
(g69
g50
NtRp679
(dp680
g53
(dp681
g80
g81
ssg62
g670
sg55
(lp682
S':'
asbag48
(g69
g50
NtRp683
(dp684
g53
(dp685
sg62
g670
sg55
(lp686
g48
(g49
g50
NtRp687
(dp688
g53
(dp689
g61
I4
ssg62
g683
sg55
(lp690
S'en-US,en;q=0.8'
p691
asbasbasbag48
(g64
g50
NtRp692
(dp693
g53
(dp694
sg62
g422
sg55
(lp695
g48
(g69
g50
NtRp696
(dp697
g53
(dp698
g73
g74
ssg62
g692
sg55
(lp699
S'http_connection'
p700
asbag48
(g69
g50
NtRp701
(dp702
g53
(dp703
g80
g81
ssg62
g692
sg55
(lp704
S':'
asbag48
(g69
g50
NtRp705
(dp706
g53
(dp707
sg62
g692
sg55
(lp708
g48
(g49
g50
NtRp709
(dp710
g53
(dp711
g61
I4
ssg62
g705
sg55
(lp712
S'keep-alive'
p713
asbasbasbag48
(g64
g50
NtRp714
(dp715
g53
(dp716
sg62
g422
sg55
(lp717
g48
(g69
g50
NtRp718
(dp719
g53
(dp720
g73
g74
ssg62
g714
sg55
(lp721
S'http_content_length'
p722
asbag48
(g69
g50
NtRp723
(dp724
g53
(dp725
g80
g81
ssg62
g714
sg55
(lp726
S':'
asbag48
(g69
g50
NtRp727
(dp728
g53
(dp729
sg62
g714
sg55
(lp730
g48
(g49
g50
NtRp731
(dp732
g53
(dp733
g61
I4
ssg62
g727
sg55
(lp734
S'0'
asbasbasbag48
(g64
g50
NtRp735
(dp736
g53
(dp737
sg62
g422
sg55
(lp738
g48
(g69
g50
NtRp739
(dp740
g53
(dp741
g73
g74
ssg62
g735
sg55
(lp742
S'http_cookie'
p743
asbag48
(g69
g50
NtRp744
(dp745
g53
(dp746
g80
g81
ssg62
g735
sg55
(lp747
S':'
asbag48
(g69
g50
NtRp748
(dp749
g53
(dp750
sg62
g735
sg55
(lp751
g48
(g49
g50
NtRp752
(dp753
g53
(dp754
g61
I4
ssg62
g748
sg55
(lp755
S'session_id_admin=127.0.0.1-9ea0b57a-cbdd-4f07-b23b-d79d81d29f1c'
p756
asbasbasbag48
(g64
g50
NtRp757
(dp758
g53
(dp759
sg62
g422
sg55
(lp760
g48
(g69
g50
NtRp761
(dp762
g53
(dp763
g73
g74
ssg62
g757
sg55
(lp764
S'http_host'
p765
asbag48
(g69
g50
NtRp766
(dp767
g53
(dp768
g80
g81
ssg62
g757
sg55
(lp769
S':'
asbag48
(g69
g50
NtRp770
(dp771
g53
(dp772
sg62
g757
sg55
(lp773
g48
(g49
g50
NtRp774
(dp775
g53
(dp776
g61
I4
ssg62
g770
sg55
(lp777
S'127.0.0.1:8000'
p778
asbasbasbag48
(g64
g50
NtRp779
(dp780
g53
(dp781
sg62
g422
sg55
(lp782
g48
(g69
g50
NtRp783
(dp784
g53
(dp785
g73
g74
ssg62
g779
sg55
(lp786
S'http_origin'
p787
asbag48
(g69
g50
NtRp788
(dp789
g53
(dp790
g80
g81
ssg62
g779
sg55
(lp791
S':'
asbag48
(g69
g50
NtRp792
(dp793
g53
(dp794
sg62
g779
sg55
(lp795
g48
(g49
g50
NtRp796
(dp797
g53
(dp798
g61
I4
ssg62
g792
sg55
(lp799
S'http://127.0.0.1:8000'
p800
asbasbasbag48
(g64
g50
NtRp801
(dp802
g53
(dp803
sg62
g422
sg55
(lp804
g48
(g69
g50
NtRp805
(dp806
g53
(dp807
g73
g74
ssg62
g801
sg55
(lp808
S'http_referer'
p809
asbag48
(g69
g50
NtRp810
(dp811
g53
(dp812
g80
g81
ssg62
g801
sg55
(lp813
S':'
asbag48
(g69
g50
NtRp814
(dp815
g53
(dp816
sg62
g801
sg55
(lp817
g48
(g49
g50
NtRp818
(dp819
g53
(dp820
g61
I4
ssg62
g814
sg55
(lp821
S'http://127.0.0.1:8000/admin/default/site'
p822
asbasbasbag48
(g64
g50
NtRp823
(dp824
g53
(dp825
sg62
g422
sg55
(lp826
g48
(g69
g50
NtRp827
(dp828
g53
(dp829
g73
g74
ssg62
g823
sg55
(lp830
S'http_user_agent'
p831
asbag48
(g69
g50
NtRp832
(dp833
g53
(dp834
g80
g81
ssg62
g823
sg55
(lp835
S':'
asbag48
(g69
g50
NtRp836
(dp837
g53
(dp838
sg62
g823
sg55
(lp839
g48
(g49
g50
NtRp840
(dp841
g53
(dp842
g61
I4
ssg62
g836
sg55
(lp843
S'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/535.7 (KHTML, like Gecko) Chrome/16.0.912.77 Safari/535.7'
p844
asbasbasbag48
(g64
g50
NtRp845
(dp846
g53
(dp847
sg62
g422
sg55
(lp848
g48
(g69
g50
NtRp849
(dp850
g53
(dp851
g73
g74
ssg62
g845
sg55
(lp852
S'http_x_requested_with'
p853
asbag48
(g69
g50
NtRp854
(dp855
g53
(dp856
g80
g81
ssg62
g845
sg55
(lp857
S':'
asbag48
(g69
g50
NtRp858
(dp859
g53
(dp860
sg62
g845
sg55
(lp861
g48
(g49
g50
NtRp862
(dp863
g53
(dp864
g61
I4
ssg62
g858
sg55
(lp865
S'XMLHttpRequest'
p866
asbasbasbag48
(g64
g50
NtRp867
(dp868
g53
(dp869
sg62
g422
sg55
(lp870
g48
(g69
g50
NtRp871
(dp872
g53
(dp873
g73
g74
ssg62
g867
sg55
(lp874
S'is_jython'
p875
asbag48
(g69
g50
NtRp876
(dp877
g53
(dp878
g80
g81
ssg62
g867
sg55
(lp879
S':'
asbag48
(g69
g50
NtRp880
(dp881
g53
(dp882
sg62
g867
sg55
(lp883
g48
(g49
g50
NtRp884
(dp885
g53
(dp886
g61
I4
ssg62
g880
sg55
(lp887
g581
asbasbasbag48
(g64
g50
NtRp888
(dp889
g53
(dp890
sg62
g422
sg55
(lp891
g48
(g69
g50
NtRp892
(dp893
g53
(dp894
g73
g74
ssg62
g888
sg55
(lp895
S'path_info'
p896
asbag48
(g69
g50
NtRp897
(dp898
g53
(dp899
g80
g81
ssg62
g888
sg55
(lp900
S':'
asbag48
(g69
g50
NtRp901
(dp902
g53
(dp903
sg62
g888
sg55
(lp904
g48
(g49
g50
NtRp905
(dp906
g53
(dp907
g61
I4
ssg62
g901
sg55
(lp908
S'/admin/default/check_version'
p909
asbasbasbag48
(g64
g50
NtRp910
(dp911
g53
(dp912
sg62
g422
sg55
(lp913
g48
(g69
g50
NtRp914
(dp915
g53
(dp916
g73
g74
ssg62
g910
sg55
(lp917
S'query_string'
p918
asbag48
(g69
g50
NtRp919
(dp920
g53
(dp921
g80
g81
ssg62
g910
sg55
(lp922
S':'
asbag48
(g69
g50
NtRp923
(dp924
g53
(dp925
sg62
g910
sg55
(lp926
g48
(g49
g50
NtRp927
(dp928
g53
(dp929
g61
I4
ssg62
g923
sg55
(lp930
S''
asbasbasbag48
(g64
g50
NtRp931
(dp932
g53
(dp933
sg62
g422
sg55
(lp934
g48
(g69
g50
NtRp935
(dp936
g53
(dp937
g73
g74
ssg62
g931
sg55
(lp938
S'remote_addr'
p939
asbag48
(g69
g50
NtRp940
(dp941
g53
(dp942
g80
g81
ssg62
g931
sg55
(lp943
S':'
asbag48
(g69
g50
NtRp944
(dp945
g53
(dp946
sg62
g931
sg55
(lp947
g48
(g49
g50
NtRp948
(dp949
g53
(dp950
g61
I4
ssg62
g944
sg55
(lp951
g181
asbasbasbag48
(g64
g50
NtRp952
(dp953
g53
(dp954
sg62
g422
sg55
(lp955
g48
(g69
g50
NtRp956
(dp957
g53
(dp958
g73
g74
ssg62
g952
sg55
(lp959
S'remote_port'
p960
asbag48
(g69
g50
NtRp961
(dp962
g53
(dp963
g80
g81
ssg62
g952
sg55
(lp964
S':'
asbag48
(g69
g50
NtRp965
(dp966
g53
(dp967
sg62
g952
sg55
(lp968
g48
(g49
g50
NtRp969
(dp970
g53
(dp971
g61
I4
ssg62
g965
sg55
(lp972
S'56484'
p973
asbasbasbag48
(g64
g50
NtRp974
(dp975
g53
(dp976
sg62
g422
sg55
(lp977
g48
(g69
g50
NtRp978
(dp979
g53
(dp980
g73
g74
ssg62
g974
sg55
(lp981
S'request_method'
p982
asbag48
(g69
g50
NtRp983
(dp984
g53
(dp985
g80
g81
ssg62
g974
sg55
(lp986
S':'
asbag48
(g69
g50
NtRp987
(dp988
g53
(dp989
sg62
g974
sg55
(lp990
g48
(g49
g50
NtRp991
(dp992
g53
(dp993
g61
I4
ssg62
g987
sg55
(lp994
S'POST'
p995
asbasbasbag48
(g64
g50
NtRp996
(dp997
g53
(dp998
sg62
g422
sg55
(lp999
g48
(g69
g50
NtRp1000
(dp1001
g53
(dp1002
g73
g74
ssg62
g996
sg55
(lp1003
S'request_uri'
p1004
asbag48
(g69
g50
NtRp1005
(dp1006
g53
(dp1007
g80
g81
ssg62
g996
sg55
(lp1008
S':'
asbag48
(g69
g50
NtRp1009
(dp1010
g53
(dp1011
sg62
g996
sg55
(lp1012
g48
(g49
g50
NtRp1013
(dp1014
g53
(dp1015
g61
I4
ssg62
g1009
sg55
(lp1016
g909
asbasbasbag48
(g64
g50
NtRp1017
(dp1018
g53
(dp1019
sg62
g422
sg55
(lp1020
g48
(g69
g50
NtRp1021
(dp1022
g53
(dp1023
g73
g74
ssg62
g1017
sg55
(lp1024
S'script_name'
p1025
asbag48
(g69
g50
NtRp1026
(dp1027
g53
(dp1028
g80
g81
ssg62
g1017
sg55
(lp1029
S':'
asbag48
(g69
g50
NtRp1030
(dp1031
g53
(dp1032
sg62
g1017
sg55
(lp1033
g48
(g49
g50
NtRp1034
(dp1035
g53
(dp1036
g61
I4
ssg62
g1030
sg55
(lp1037
S''
asbasbasbag48
(g64
g50
NtRp1038
(dp1039
g53
(dp1040
sg62
g422
sg55
(lp1041
g48
(g69
g50
NtRp1042
(dp1043
g53
(dp1044
g73
g74
ssg62
g1038
sg55
(lp1045
S'server_name'
p1046
asbag48
(g69
g50
NtRp1047
(dp1048
g53
(dp1049
g80
g81
ssg62
g1038
sg55
(lp1050
S':'
asbag48
(g69
g50
NtRp1051
(dp1052
g53
(dp1053
sg62
g1038
sg55
(lp1054
g48
(g49
g50
NtRp1055
(dp1056
g53
(dp1057
g61
I4
ssg62
g1051
sg55
(lp1058
S'John-PC'
p1059
asbasbasbag48
(g64
g50
NtRp1060
(dp1061
g53
(dp1062
sg62
g422
sg55
(lp1063
g48
(g69
g50
NtRp1064
(dp1065
g53
(dp1066
g73
g74
ssg62
g1060
sg55
(lp1067
S'server_port'
p1068
asbag48
(g69
g50
NtRp1069
(dp1070
g53
(dp1071
g80
g81
ssg62
g1060
sg55
(lp1072
S':'
asbag48
(g69
g50
NtRp1073
(dp1074
g53
(dp1075
sg62
g1060
sg55
(lp1076
g48
(g49
g50
NtRp1077
(dp1078
g53
(dp1079
g61
I4
ssg62
g1073
sg55
(lp1080
S'8000'
p1081
asbasbasbag48
(g64
g50
NtRp1082
(dp1083
g53
(dp1084
sg62
g422
sg55
(lp1085
g48
(g69
g50
NtRp1086
(dp1087
g53
(dp1088
g73
g74
ssg62
g1082
sg55
(lp1089
S'server_protocol'
p1090
asbag48
(g69
g50
NtRp1091
(dp1092
g53
(dp1093
g80
g81
ssg62
g1082
sg55
(lp1094
S':'
asbag48
(g69
g50
NtRp1095
(dp1096
g53
(dp1097
sg62
g1082
sg55
(lp1098
g48
(g49
g50
NtRp1099
(dp1100
g53
(dp1101
g61
I4
ssg62
g1095
sg55
(lp1102
S'HTTP/1.1'
p1103
asbasbasbag48
(g64
g50
NtRp1104
(dp1105
g53
(dp1106
sg62
g422
sg55
(lp1107
g48
(g69
g50
NtRp1108
(dp1109
g53
(dp1110
g73
g74
ssg62
g1104
sg55
(lp1111
S'server_software'
p1112
asbag48
(g69
g50
NtRp1113
(dp1114
g53
(dp1115
g80
g81
ssg62
g1104
sg55
(lp1116
S':'
asbag48
(g69
g50
NtRp1117
(dp1118
g53
(dp1119
sg62
g1104
sg55
(lp1120
g48
(g49
g50
NtRp1121
(dp1122
g53
(dp1123
g61
I4
ssg62
g1117
sg55
(lp1124
S'Rocket 1.2.4'
p1125
asbasbasbag48
(g64
g50
NtRp1126
(dp1127
g53
(dp1128
sg62
g422
sg55
(lp1129
g48
(g69
g50
NtRp1130
(dp1131
g53
(dp1132
g73
g74
ssg62
g1126
sg55
(lp1133
S'web2py_crontype'
p1134
asbag48
(g69
g50
NtRp1135
(dp1136
g53
(dp1137
g80
g81
ssg62
g1126
sg55
(lp1138
S':'
asbag48
(g69
g50
NtRp1139
(dp1140
g53
(dp1141
sg62
g1126
sg55
(lp1142
g48
(g49
g50
NtRp1143
(dp1144
g53
(dp1145
g61
I4
ssg62
g1139
sg55
(lp1146
S'hard'
p1147
asbasbasbag48
(g64
g50
NtRp1148
(dp1149
g53
(dp1150
sg62
g422
sg55
(lp1151
g48
(g69
g50
NtRp1152
(dp1153
g53
(dp1154
g73
g74
ssg62
g1148
sg55
(lp1155
S'web2py_original_uri'
p1156
asbag48
(g69
g50
NtRp1157
(dp1158
g53
(dp1159
g80
g81
ssg62
g1148
sg55
(lp1160
S':'
asbag48
(g69
g50
NtRp1161
(dp1162
g53
(dp1163
sg62
g1148
sg55
(lp1164
g48
(g49
g50
NtRp1165
(dp1166
g53
(dp1167
g61
I4
ssg62
g1161
sg55
(lp1168
S'/admin/default/check_version'
p1169
asbasbasbag48
(g64
g50
NtRp1170
(dp1171
g53
(dp1172
sg62
g422
sg55
(lp1173
g48
(g69
g50
NtRp1174
(dp1175
g53
(dp1176
g73
g74
ssg62
g1170
sg55
(lp1177
S'web2py_path'
p1178
asbag48
(g69
g50
NtRp1179
(dp1180
g53
(dp1181
g80
g81
ssg62
g1170
sg55
(lp1182
S':'
asbag48
(g69
g50
NtRp1183
(dp1184
g53
(dp1185
sg62
g1170
sg55
(lp1186
g48
(g49
g50
NtRp1187
(dp1188
g53
(dp1189
g61
I4
ssg62
g1183
sg55
(lp1190
g469
asbasbasbag48
(g64
g50
NtRp1191
(dp1192
g53
(dp1193
sg62
g422
sg55
(lp1194
g48
(g69
g50
NtRp1195
(dp1196
g53
(dp1197
g73
g74
ssg62
g1191
sg55
(lp1198
S'web2py_version'
p1199
asbag48
(g69
g50
NtRp1200
(dp1201
g53
(dp1202
g80
g81
ssg62
g1191
sg55
(lp1203
S':'
asbag48
(g69
g50
NtRp1204
(dp1205
g53
(dp1206
sg62
g1191
sg55
(lp1207
g48
(g49
g50
NtRp1208
(dp1209
g53
(dp1210
g61
I4
ssg62
g1204
sg55
(lp1211
g48
(g57
g50
NtRp1212
(dp1213
g53
(dp1214
g61
I3
ssg62
Nsg55
(lp1215
g48
(g64
g50
NtRp1216
(dp1217
g53
(dp1218
sg62
g1212
sg55
(lp1219
g48
(g69
g50
NtRp1220
(dp1221
g53
(dp1222
sg62
g1216
sg55
(lp1223
g48
(g49
g50
NtRp1224
(dp1225
g53
(dp1226
g61
I3
ssg62
g1220
sg55
(lp1227
S'1'
asbasbasbag48
(g64
g50
NtRp1228
(dp1229
g53
(dp1230
sg62
g1212
sg55
(lp1231
g48
(g69
g50
NtRp1232
(dp1233
g53
(dp1234
sg62
g1228
sg55
(lp1235
g48
(g49
g50
NtRp1236
(dp1237
g53
(dp1238
g61
I3
ssg62
g1232
sg55
(lp1239
S'99'
p1240
asbasbasbag48
(g64
g50
NtRp1241
(dp1242
g53
(dp1243
sg62
g1212
sg55
(lp1244
g48
(g69
g50
NtRp1245
(dp1246
g53
(dp1247
sg62
g1241
sg55
(lp1248
g48
(g49
g50
NtRp1249
(dp1250
g53
(dp1251
g61
I3
ssg62
g1245
sg55
(lp1252
S'2'
asbasbasbag48
(g64
g50
NtRp1253
(dp1254
g53
(dp1255
sg62
g1212
sg55
(lp1256
g48
(g69
g50
NtRp1257
(dp1258
g53
(dp1259
sg62
g1253
sg55
(lp1260
g48
(g49
g50
NtRp1261
(dp1262
g53
(dp1263
g61
I3
ssg62
g1257
sg55
(lp1264
S'datetime.datetime(2011, 9, 26, 6, 55, 33)'
p1265
asbasbasbag48
(g64
g50
NtRp1266
(dp1267
g53
(dp1268
sg62
g1212
sg55
(lp1269
g48
(g69
g50
NtRp1270
(dp1271
g53
(dp1272
sg62
g1266
sg55
(lp1273
g48
(g49
g50
NtRp1274
(dp1275
g53
(dp1276
g61
I3
ssg62
g1270
sg55
(lp1277
S'stable'
p1278
asbasbasbasbasbasbasbag48
(g64
g50
NtRp1279
(dp1280
g53
(dp1281
sg62
g422
sg55
(lp1282
g48
(g69
g50
NtRp1283
(dp1284
g53
(dp1285
g73
g74
ssg62
g1279
sg55
(lp1286
S'wsgi_errors'
p1287
asbag48
(g69
g50
NtRp1288
(dp1289
g53
(dp1290
g80
g81
ssg62
g1279
sg55
(lp1291
S':'
asbag48
(g69
g50
NtRp1292
(dp1293
g53
(dp1294
sg62
g1279
sg55
(lp1295
g48
(g49
g50
NtRp1296
(dp1297
g53
(dp1298
g61
I4
ssg62
g1292
sg55
(lp1299
S"<open file '<stderr>', mode 'w' at 0x004B00B0>"
p1300
asbasbasbag48
(g64
g50
NtRp1301
(dp1302
g53
(dp1303
sg62
g422
sg55
(lp1304
g48
(g69
g50
NtRp1305
(dp1306
g53
(dp1307
g73
g74
ssg62
g1301
sg55
(lp1308
S'wsgi_file_wrapper'
p1309
asbag48
(g69
g50
NtRp1310
(dp1311
g53
(dp1312
g80
g81
ssg62
g1301
sg55
(lp1313
S':'
asbag48
(g69
g50
NtRp1314
(dp1315
g53
(dp1316
sg62
g1301
sg55
(lp1317
g48
(g49
g50
NtRp1318
(dp1319
g53
(dp1320
g61
I4
ssg62
g1314
sg55
(lp1321
S'<class wsgiref.util.FileWrapper at 0x03151570>'
p1322
asbasbasbag48
(g64
g50
NtRp1323
(dp1324
g53
(dp1325
sg62
g422
sg55
(lp1326
g48
(g69
g50
NtRp1327
(dp1328
g53
(dp1329
g73
g74
ssg62
g1323
sg55
(lp1330
S'wsgi_input'
p1331
asbag48
(g69
g50
NtRp1332
(dp1333
g53
(dp1334
g80
g81
ssg62
g1323
sg55
(lp1335
S':'
asbag48
(g69
g50
NtRp1336
(dp1337
g53
(dp1338
sg62
g1323
sg55
(lp1339
g48
(g49
g50
NtRp1340
(dp1341
g53
(dp1342
g61
I4
ssg62
g1336
sg55
(lp1343
S'<socket._fileobject object at 0x03414970>'
p1344
asbasbasbag48
(g64
g50
NtRp1345
(dp1346
g53
(dp1347
sg62
g422
sg55
(lp1348
g48
(g69
g50
NtRp1349
(dp1350
g53
(dp1351
g73
g74
ssg62
g1345
sg55
(lp1352
S'wsgi_multiprocess'
p1353
asbag48
(g69
g50
NtRp1354
(dp1355
g53
(dp1356
g80
g81
ssg62
g1345
sg55
(lp1357
S':'
asbag48
(g69
g50
NtRp1358
(dp1359
g53
(dp1360
sg62
g1345
sg55
(lp1361
g48
(g49
g50
NtRp1362
(dp1363
g53
(dp1364
g61
I4
ssg62
g1358
sg55
(lp1365
g581
asbasbasbag48
(g64
g50
NtRp1366
(dp1367
g53
(dp1368
sg62
g422
sg55
(lp1369
g48
(g69
g50
NtRp1370
(dp1371
g53
(dp1372
g73
g74
ssg62
g1366
sg55
(lp1373
S'wsgi_multithread'
p1374
asbag48
(g69
g50
NtRp1375
(dp1376
g53
(dp1377
g80
g81
ssg62
g1366
sg55
(lp1378
S':'
asbag48
(g69
g50
NtRp1379
(dp1380
g53
(dp1381
sg62
g1366
sg55
(lp1382
g48
(g49
g50
NtRp1383
(dp1384
g53
(dp1385
g61
I4
ssg62
g1379
sg55
(lp1386
g91
asbasbasbag48
(g64
g50
NtRp1387
(dp1388
g53
(dp1389
sg62
g422
sg55
(lp1390
g48
(g69
g50
NtRp1391
(dp1392
g53
(dp1393
g73
g74
ssg62
g1387
sg55
(lp1394
S'wsgi_run_once'
p1395
asbag48
(g69
g50
NtRp1396
(dp1397
g53
(dp1398
g80
g81
ssg62
g1387
sg55
(lp1399
S':'
asbag48
(g69
g50
NtRp1400
(dp1401
g53
(dp1402
sg62
g1387
sg55
(lp1403
g48
(g49
g50
NtRp1404
(dp1405
g53
(dp1406
g61
I4
ssg62
g1400
sg55
(lp1407
g581
asbasbasbag48
(g64
g50
NtRp1408
(dp1409
g53
(dp1410
sg62
g422
sg55
(lp1411
g48
(g69
g50
NtRp1412
(dp1413
g53
(dp1414
g73
g74
ssg62
g1408
sg55
(lp1415
S'wsgi_url_scheme'
p1416
asbag48
(g69
g50
NtRp1417
(dp1418
g53
(dp1419
g80
g81
ssg62
g1408
sg55
(lp1420
S':'
asbag48
(g69
g50
NtRp1421
(dp1422
g53
(dp1423
sg62
g1408
sg55
(lp1424
g48
(g49
g50
NtRp1425
(dp1426
g53
(dp1427
g61
I4
ssg62
g1421
sg55
(lp1428
S'http'
p1429
asbasbasbag48
(g64
g50
NtRp1430
(dp1431
g53
(dp1432
sg62
g422
sg55
(lp1433
g48
(g69
g50
NtRp1434
(dp1435
g53
(dp1436
g73
g74
ssg62
g1430
sg55
(lp1437
S'wsgi_version'
p1438
asbag48
(g69
g50
NtRp1439
(dp1440
g53
(dp1441
g80
g81
ssg62
g1430
sg55
(lp1442
S':'
asbag48
(g69
g50
NtRp1443
(dp1444
g53
(dp1445
sg62
g1430
sg55
(lp1446
g48
(g49
g50
NtRp1447
(dp1448
g53
(dp1449
g61
I4
ssg62
g1443
sg55
(lp1450
g48
(g57
g50
NtRp1451
(dp1452
g53
(dp1453
g61
I3
ssg62
Nsg55
(lp1454
g48
(g64
g50
NtRp1455
(dp1456
g53
(dp1457
sg62
g1451
sg55
(lp1458
g48
(g69
g50
NtRp1459
(dp1460
g53
(dp1461
sg62
g1455
sg55
(lp1462
g48
(g49
g50
NtRp1463
(dp1464
g53
(dp1465
g61
I3
ssg62
g1459
sg55
(lp1466
S'1'
asbasbasbag48
(g64
g50
NtRp1467
(dp1468
g53
(dp1469
sg62
g1451
sg55
(lp1470
g48
(g69
g50
NtRp1471
(dp1472
g53
(dp1473
sg62
g1467
sg55
(lp1474
g48
(g49
g50
NtRp1475
(dp1476
g53
(dp1477
g61
I3
ssg62
g1471
sg55
(lp1478
S'0'
asbasbasbasbasbasbasbasbasbasbasbag48
(g64
g50
NtRp1479
(dp1480
g53
(dp1481
sg62
g58
sg55
(lp1482
g48
(g69
g50
NtRp1483
(dp1484
g53
(dp1485
g73
g74
ssg62
g1479
sg55
(lp1486
S'extension'
p1487
asbag48
(g69
g50
NtRp1488
(dp1489
g53
(dp1490
g80
g81
ssg62
g1479
sg55
(lp1491
S':'
asbag48
(g69
g50
NtRp1492
(dp1493
g53
(dp1494
sg62
g1479
sg55
(lp1495
g48
(g49
g50
NtRp1496
(dp1497
g53
(dp1498
g61
I5
ssg62
g1492
sg55
(lp1499
S'html'
p1500
asbasbasbag48
(g64
g50
NtRp1501
(dp1502
g53
(dp1503
sg62
g58
sg55
(lp1504
g48
(g69
g50
NtRp1505
(dp1506
g53
(dp1507
g73
g74
ssg62
g1501
sg55
(lp1508
S'folder'
p1509
asbag48
(g69
g50
NtRp1510
(dp1511
g53
(dp1512
g80
g81
ssg62
g1501
sg55
(lp1513
S':'
asbag48
(g69
g50
NtRp1514
(dp1515
g53
(dp1516
sg62
g1501
sg55
(lp1517
g48
(g49
g50
NtRp1518
(dp1519
g53
(dp1520
g61
I5
ssg62
g1514
sg55
(lp1521
S'D:\\Dropbox\\Eclipse\\JRMSiteApp\\web2py\\applications\\admin\\'
p1522
asbasbasbag48
(g64
g50
NtRp1523
(dp1524
g53
(dp1525
sg62
g58
sg55
(lp1526
g48
(g69
g50
NtRp1527
(dp1528
g53
(dp1529
g73
g74
ssg62
g1523
sg55
(lp1530
S'function'
p1531
asbag48
(g69
g50
NtRp1532
(dp1533
g53
(dp1534
g80
g81
ssg62
g1523
sg55
(lp1535
S':'
asbag48
(g69
g50
NtRp1536
(dp1537
g53
(dp1538
sg62
g1523
sg55
(lp1539
g48
(g49
g50
NtRp1540
(dp1541
g53
(dp1542
g61
I5
ssg62
g1536
sg55
(lp1543
S'check_version'
p1544
asbasbasbag48
(g64
g50
NtRp1545
(dp1546
g53
(dp1547
sg62
g58
sg55
(lp1548
g48
(g69
g50
NtRp1549
(dp1550
g53
(dp1551
g73
g74
ssg62
g1545
sg55
(lp1552
S'get_vars'
p1553
asbag48
(g69
g50
NtRp1554
(dp1555
g53
(dp1556
g80
g81
ssg62
g1545
sg55
(lp1557
S':'
asbag48
(g69
g50
NtRp1558
(dp1559
g53
(dp1560
sg62
g1545
sg55
(lp1561
g48
(g49
g50
NtRp1562
(dp1563
g53
(dp1564
g61
I5
ssg62
g1558
sg55
(lp1565
g48
(g57
g50
NtRp1566
(dp1567
g53
(dp1568
g61
I4
ssg62
Nsg55
(lp1569
sbasbasbasbag48
(g64
g50
NtRp1570
(dp1571
g53
(dp1572
sg62
g58
sg55
(lp1573
g48
(g69
g50
NtRp1574
(dp1575
g53
(dp1576
g73
g74
ssg62
g1570
sg55
(lp1577
S'global_settings'
p1578
asbag48
(g69
g50
NtRp1579
(dp1580
g53
(dp1581
g80
g81
ssg62
g1570
sg55
(lp1582
S':'
asbag48
(g69
g50
NtRp1583
(dp1584
g53
(dp1585
sg62
g1570
sg55
(lp1586
g48
(g49
g50
NtRp1587
(dp1588
g53
(dp1589
g61
I5
ssg62
g1583
sg55
(lp1590
g48
(g57
g50
NtRp1591
(dp1592
g53
(dp1593
g61
I4
ssg62
Nsg55
(lp1594
g48
(g64
g50
NtRp1595
(dp1596
g53
(dp1597
sg62
g1591
sg55
(lp1598
g48
(g69
g50
NtRp1599
(dp1600
g53
(dp1601
g73
g74
ssg62
g1595
sg55
(lp1602
g434
asbag48
(g69
g50
NtRp1603
(dp1604
g53
(dp1605
g80
g81
ssg62
g1595
sg55
(lp1606
S':'
asbag48
(g69
g50
NtRp1607
(dp1608
g53
(dp1609
sg62
g1595
sg55
(lp1610
g48
(g49
g50
NtRp1611
(dp1612
g53
(dp1613
g61
I4
ssg62
g1607
sg55
(lp1614
S"set(['D:\\\\Dropbox\\\\Eclipse\\\\JRMSiteApp\\\\web2py\\\\applications\\\\admin\\\\'])"
p1615
asbasbasbag48
(g64
g50
NtRp1616
(dp1617
g53
(dp1618
sg62
g1591
sg55
(lp1619
g48
(g69
g50
NtRp1620
(dp1621
g53
(dp1622
g73
g74
ssg62
g1616
sg55
(lp1623
g456
asbag48
(g69
g50
NtRp1624
(dp1625
g53
(dp1626
g80
g81
ssg62
g1616
sg55
(lp1627
S':'
asbag48
(g69
g50
NtRp1628
(dp1629
g53
(dp1630
sg62
g1616
sg55
(lp1631
g48
(g49
g50
NtRp1632
(dp1633
g53
(dp1634
g61
I4
ssg62
g1628
sg55
(lp1635
g469
asbasbasbag48
(g64
g50
NtRp1636
(dp1637
g53
(dp1638
sg62
g1591
sg55
(lp1639
g48
(g69
g50
NtRp1640
(dp1641
g53
(dp1642
g73
g74
ssg62
g1636
sg55
(lp1643
g478
asbag48
(g69
g50
NtRp1644
(dp1645
g53
(dp1646
g80
g81
ssg62
g1636
sg55
(lp1647
S':'
asbag48
(g69
g50
NtRp1648
(dp1649
g53
(dp1650
sg62
g1636
sg55
(lp1651
g48
(g49
g50
NtRp1652
(dp1653
g53
(dp1654
g61
I4
ssg62
g1648
sg55
(lp1655
g48
(g57
g50
NtRp1656
(dp1657
g53
(dp1658
g61
I3
ssg62
Nsg55
(lp1659
sbasbasbasbag48
(g64
g50
NtRp1660
(dp1661
g53
(dp1662
sg62
g1591
sg55
(lp1663
g48
(g69
g50
NtRp1664
(dp1665
g53
(dp1666
g73
g74
ssg62
g1660
sg55
(lp1667
g503
asbag48
(g69
g50
NtRp1668
(dp1669
g53
(dp1670
g80
g81
ssg62
g1660
sg55
(lp1671
S':'
asbag48
(g69
g50
NtRp1672
(dp1673
g53
(dp1674
sg62
g1660
sg55
(lp1675
g48
(g49
g50
NtRp1676
(dp1677
g53
(dp1678
g61
I4
ssg62
g1672
sg55
(lp1679
S"<Values at 0x321b788: {'verbose': False, 'ip': '127.0.0.1', 'shutdown_timeout': 5, 'taskbar': False, 'nocron': False, 'pid_filename': 'httpserver.pid', 'maxthreads': None, 'softcron': False, 'server_name': 'John-PC', 'bpython': False, 'nogui': False, 'port': 8000, 'extcron': False, 'debuglevel': 30, 'test': None, 'folder': 'D:\\\\Dropbox\\\\Eclipse\\\\JRMSiteApp\\\\web2py', 'config': '', 'import_models': False, 'winservice': '', 'shell': None, 'run': '', 'log_filename': 'httpserver.log', 'args': [''], 'ssl_ca_certificate': None, 'scheduler': None, 'profiler_filename': None, 'ssl_private_key': '', 'password': '<ask>', 'request_queue_size': 5, 'ssl_certificate': '', 'cronjob': False, 'plain': False, 'quiet': False, 'interfaces': None, 'minthreads': None, 'timeout': 10, 'numthreads': None, 'nobanner': False}>"
p1680
asbasbasbag48
(g64
g50
NtRp1681
(dp1682
g53
(dp1683
sg62
g1591
sg55
(lp1684
g48
(g69
g50
NtRp1685
(dp1686
g53
(dp1687
g73
g74
ssg62
g1681
sg55
(lp1688
g546
asbag48
(g69
g50
NtRp1689
(dp1690
g53
(dp1691
g80
g81
ssg62
g1681
sg55
(lp1692
S':'
asbag48
(g69
g50
NtRp1693
(dp1694
g53
(dp1695
sg62
g1681
sg55
(lp1696
g48
(g49
g50
NtRp1697
(dp1698
g53
(dp1699
g61
I4
ssg62
g1693
sg55
(lp1700
S'set([])'
p1701
asbasbasbag48
(g64
g50
NtRp1702
(dp1703
g53
(dp1704
sg62
g1591
sg55
(lp1705
g48
(g69
g50
NtRp1706
(dp1707
g53
(dp1708
g73
g74
ssg62
g1702
sg55
(lp1709
g568
asbag48
(g69
g50
NtRp1710
(dp1711
g53
(dp1712
g80
g81
ssg62
g1702
sg55
(lp1713
S':'
asbag48
(g69
g50
NtRp1714
(dp1715
g53
(dp1716
sg62
g1702
sg55
(lp1717
g48
(g49
g50
NtRp1718
(dp1719
g53
(dp1720
g61
I4
ssg62
g1714
sg55
(lp1721
g581
asbasbasbag48
(g64
g50
NtRp1722
(dp1723
g53
(dp1724
sg62
g1591
sg55
(lp1725
g48
(g69
g50
NtRp1726
(dp1727
g53
(dp1728
g73
g74
ssg62
g1722
sg55
(lp1729
g590
asbag48
(g69
g50
NtRp1730
(dp1731
g53
(dp1732
g80
g81
ssg62
g1722
sg55
(lp1733
S':'
asbag48
(g69
g50
NtRp1734
(dp1735
g53
(dp1736
sg62
g1722
sg55
(lp1737
g48
(g49
g50
NtRp1738
(dp1739
g53
(dp1740
g61
I4
ssg62
g1734
sg55
(lp1741
g603
asbasbasbag48
(g64
g50
NtRp1742
(dp1743
g53
(dp1744
sg62
g1591
sg55
(lp1745
g48
(g69
g50
NtRp1746
(dp1747
g53
(dp1748
g73
g74
ssg62
g1742
sg55
(lp1749
g875
asbag48
(g69
g50
NtRp1750
(dp1751
g53
(dp1752
g80
g81
ssg62
g1742
sg55
(lp1753
S':'
asbag48
(g69
g50
NtRp1754
(dp1755
g53
(dp1756
sg62
g1742
sg55
(lp1757
g48
(g49
g50
NtRp1758
(dp1759
g53
(dp1760
g61
I4
ssg62
g1754
sg55
(lp1761
g581
asbasbasbag48
(g64
g50
NtRp1762
(dp1763
g53
(dp1764
sg62
g1591
sg55
(lp1765
g48
(g69
g50
NtRp1766
(dp1767
g53
(dp1768
g73
g74
ssg62
g1762
sg55
(lp1769
g1134
asbag48
(g69
g50
NtRp1770
(dp1771
g53
(dp1772
g80
g81
ssg62
g1762
sg55
(lp1773
S':'
asbag48
(g69
g50
NtRp1774
(dp1775
g53
(dp1776
sg62
g1762
sg55
(lp1777
g48
(g49
g50
NtRp1778
(dp1779
g53
(dp1780
g61
I4
ssg62
g1774
sg55
(lp1781
g1147
asbasbasbag48
(g64
g50
NtRp1782
(dp1783
g53
(dp1784
sg62
g1591
sg55
(lp1785
g48
(g69
g50
NtRp1786
(dp1787
g53
(dp1788
g73
g74
ssg62
g1782
sg55
(lp1789
g1199
asbag48
(g69
g50
NtRp1790
(dp1791
g53
(dp1792
g80
g81
ssg62
g1782
sg55
(lp1793
S':'
asbag48
(g69
g50
NtRp1794
(dp1795
g53
(dp1796
sg62
g1782
sg55
(lp1797
g48
(g49
g50
NtRp1798
(dp1799
g53
(dp1800
g61
I4
ssg62
g1794
sg55
(lp1801
g48
(g57
g50
NtRp1802
(dp1803
g53
(dp1804
g61
I3
ssg62
Nsg55
(lp1805
g48
(g64
g50
NtRp1806
(dp1807
g53
(dp1808
sg62
g1802
sg55
(lp1809
g48
(g69
g50
NtRp1810
(dp1811
g53
(dp1812
sg62
g1806
sg55
(lp1813
g48
(g49
g50
NtRp1814
(dp1815
g53
(dp1816
g61
I3
ssg62
g1810
sg55
(lp1817
S'1'
asbasbasbag48
(g64
g50
NtRp1818
(dp1819
g53
(dp1820
sg62
g1802
sg55
(lp1821
g48
(g69
g50
NtRp1822
(dp1823
g53
(dp1824
sg62
g1818
sg55
(lp1825
g48
(g49
g50
NtRp1826
(dp1827
g53
(dp1828
g61
I3
ssg62
g1822
sg55
(lp1829
S'99'
p1830
asbasbasbag48
(g64
g50
NtRp1831
(dp1832
g53
(dp1833
sg62
g1802
sg55
(lp1834
g48
(g69
g50
NtRp1835
(dp1836
g53
(dp1837
sg62
g1831
sg55
(lp1838
g48
(g49
g50
NtRp1839
(dp1840
g53
(dp1841
g61
I3
ssg62
g1835
sg55
(lp1842
S'2'
asbasbasbag48
(g64
g50
NtRp1843
(dp1844
g53
(dp1845
sg62
g1802
sg55
(lp1846
g48
(g69
g50
NtRp1847
(dp1848
g53
(dp1849
sg62
g1843
sg55
(lp1850
g48
(g49
g50
NtRp1851
(dp1852
g53
(dp1853
g61
I3
ssg62
g1847
sg55
(lp1854
S'datetime.datetime(2011, 9, 26, 6, 55, 33)'
p1855
asbasbasbag48
(g64
g50
NtRp1856
(dp1857
g53
(dp1858
sg62
g1802
sg55
(lp1859
g48
(g69
g50
NtRp1860
(dp1861
g53
(dp1862
sg62
g1856
sg55
(lp1863
g48
(g49
g50
NtRp1864
(dp1865
g53
(dp1866
g61
I3
ssg62
g1860
sg55
(lp1867
g1278
asbasbasbasbasbasbasbasbasbasbasbag48
(g64
g50
NtRp1868
(dp1869
g53
(dp1870
sg62
g58
sg55
(lp1871
g48
(g69
g50
NtRp1872
(dp1873
g53
(dp1874
g73
g74
ssg62
g1868
sg55
(lp1875
S'is_https'
p1876
asbag48
(g69
g50
NtRp1877
(dp1878
g53
(dp1879
g80
g81
ssg62
g1868
sg55
(lp1880
S':'
asbag48
(g69
g50
NtRp1881
(dp1882
g53
(dp1883
sg62
g1868
sg55
(lp1884
g48
(g49
g50
NtRp1885
(dp1886
g53
(dp1887
g61
I5
ssg62
g1881
sg55
(lp1888
g581
asbasbasbag48
(g64
g50
NtRp1889
(dp1890
g53
(dp1891
sg62
g58
sg55
(lp1892
g48
(g69
g50
NtRp1893
(dp1894
g53
(dp1895
g73
g74
ssg62
g1889
sg55
(lp1896
S'is_local'
p1897
asbag48
(g69
g50
NtRp1898
(dp1899
g53
(dp1900
g80
g81
ssg62
g1889
sg55
(lp1901
S':'
asbag48
(g69
g50
NtRp1902
(dp1903
g53
(dp1904
sg62
g1889
sg55
(lp1905
g48
(g49
g50
NtRp1906
(dp1907
g53
(dp1908
g61
I5
ssg62
g1902
sg55
(lp1909
g91
asbasbasbag48
(g64
g50
NtRp1910
(dp1911
g53
(dp1912
sg62
g58
sg55
(lp1913
g48
(g69
g50
NtRp1914
(dp1915
g53
(dp1916
g73
g74
ssg62
g1910
sg55
(lp1917
S'is_restful'
p1918
asbag48
(g69
g50
NtRp1919
(dp1920
g53
(dp1921
g80
g81
ssg62
g1910
sg55
(lp1922
S':'
asbag48
(g69
g50
NtRp1923
(dp1924
g53
(dp1925
sg62
g1910
sg55
(lp1926
g48
(g49
g50
NtRp1927
(dp1928
g53
(dp1929
g61
I5
ssg62
g1923
sg55
(lp1930
g581
asbasbasbag48
(g64
g50
NtRp1931
(dp1932
g53
(dp1933
sg62
g58
sg55
(lp1934
g48
(g69
g50
NtRp1935
(dp1936
g53
(dp1937
g73
g74
ssg62
g1931
sg55
(lp1938
S'now'
p1939
asbag48
(g69
g50
NtRp1940
(dp1941
g53
(dp1942
g80
g81
ssg62
g1931
sg55
(lp1943
S':'
asbag48
(g69
g50
NtRp1944
(dp1945
g53
(dp1946
sg62
g1931
sg55
(lp1947
g48
(g49
g50
NtRp1948
(dp1949
g53
(dp1950
g61
I5
ssg62
g1944
sg55
(lp1951
S'datetime.datetime(2012, 1, 27, 8, 13, 2, 283000)'
p1952
asbasbasbag48
(g64
g50
NtRp1953
(dp1954
g53
(dp1955
sg62
g58
sg55
(lp1956
g48
(g69
g50
NtRp1957
(dp1958
g53
(dp1959
g73
g74
ssg62
g1953
sg55
(lp1960
S'post_vars'
p1961
asbag48
(g69
g50
NtRp1962
(dp1963
g53
(dp1964
g80
g81
ssg62
g1953
sg55
(lp1965
S':'
asbag48
(g69
g50
NtRp1966
(dp1967
g53
(dp1968
sg62
g1953
sg55
(lp1969
g48
(g49
g50
NtRp1970
(dp1971
g53
(dp1972
g61
I5
ssg62
g1966
sg55
(lp1973
g48
(g57
g50
NtRp1974
(dp1975
g53
(dp1976
g61
I4
ssg62
Nsg55
(lp1977
sbasbasbasbag48
(g64
g50
NtRp1978
(dp1979
g53
(dp1980
sg62
g58
sg55
(lp1981
g48
(g69
g50
NtRp1982
(dp1983
g53
(dp1984
g73
g74
ssg62
g1978
sg55
(lp1985
S'url'
p1986
asbag48
(g69
g50
NtRp1987
(dp1988
g53
(dp1989
g80
g81
ssg62
g1978
sg55
(lp1990
S':'
asbag48
(g69
g50
NtRp1991
(dp1992
g53
(dp1993
sg62
g1978
sg55
(lp1994
g48
(g49
g50
NtRp1995
(dp1996
g53
(dp1997
g61
I5
ssg62
g1991
sg55
(lp1998
S'/admin/default/check_version'
p1999
asbasbasbag48
(g64
g50
NtRp2000
(dp2001
g53
(dp2002
sg62
g58
sg55
(lp2003
g48
(g69
g50
NtRp2004
(dp2005
g53
(dp2006
g73
g74
ssg62
g2000
sg55
(lp2007
S'utcnow'
p2008
asbag48
(g69
g50
NtRp2009
(dp2010
g53
(dp2011
g80
g81
ssg62
g2000
sg55
(lp2012
S':'
asbag48
(g69
g50
NtRp2013
(dp2014
g53
(dp2015
sg62
g2000
sg55
(lp2016
g48
(g49
g50
NtRp2017
(dp2018
g53
(dp2019
g61
I5
ssg62
g2013
sg55
(lp2020
S'datetime.datetime(2012, 1, 26, 21, 13, 2, 283000)'
p2021
asbasbasbag48
(g64
g50
NtRp2022
(dp2023
g53
(dp2024
sg62
g58
sg55
(lp2025
g48
(g69
g50
NtRp2026
(dp2027
g53
(dp2028
g73
g74
ssg62
g2022
sg55
(lp2029
S'uuid'
p2030
asbag48
(g69
g50
NtRp2031
(dp2032
g53
(dp2033
g80
g81
ssg62
g2022
sg55
(lp2034
S':'
asbag48
(g69
g50
NtRp2035
(dp2036
g53
(dp2037
sg62
g2022
sg55
(lp2038
g48
(g49
g50
NtRp2039
(dp2040
g53
(dp2041
g61
I5
ssg62
g2035
sg55
(lp2042
S'admin/127.0.0.1.2012-01-27.08-13-02.ccf62c74-fd34-4ffc-838b-68823cb8d5df'
p2043
asbasbasbag48
(g64
g50
NtRp2044
(dp2045
g53
(dp2046
sg62
g58
sg55
(lp2047
g48
(g69
g50
NtRp2048
(dp2049
g53
(dp2050
g73
g74
ssg62
g2044
sg55
(lp2051
S'vars'
p2052
asbag48
(g69
g50
NtRp2053
(dp2054
g53
(dp2055
g80
g81
ssg62
g2044
sg55
(lp2056
S':'
asbag48
(g69
g50
NtRp2057
(dp2058
g53
(dp2059
sg62
g2044
sg55
(lp2060
g48
(g49
g50
NtRp2061
(dp2062
g53
(dp2063
g61
I5
ssg62
g2057
sg55
(lp2064
g48
(g57
g50
NtRp2065
(dp2066
g53
(dp2067
g61
I4
ssg62
Nsg55
(lp2068
sbasbasbasbag48
(g64
g50
NtRp2069
(dp2070
g53
(dp2071
sg62
g58
sg55
(lp2072
g48
(g69
g50
NtRp2073
(dp2074
g53
(dp2075
g73
g74
ssg62
g2069
sg55
(lp2076
S'wsgi'
p2077
asbag48
(g69
g50
NtRp2078
(dp2079
g53
(dp2080
g80
g81
ssg62
g2069
sg55
(lp2081
S':'
asbag48
(g69
g50
NtRp2082
(dp2083
g53
(dp2084
sg62
g2069
sg55
(lp2085
g48
(g49
g50
NtRp2086
(dp2087
g53
(dp2088
g61
I5
ssg62
g2082
sg55
(lp2089
g48
(g57
g50
NtRp2090
(dp2091
g53
(dp2092
g61
I4
ssg62
Nsg55
(lp2093
g48
(g64
g50
NtRp2094
(dp2095
g53
(dp2096
sg62
g2090
sg55
(lp2097
g48
(g69
g50
NtRp2098
(dp2099
g53
(dp2100
g73
g74
ssg62
g2094
sg55
(lp2101
S'environ'
p2102
asbag48
(g69
g50
NtRp2103
(dp2104
g53
(dp2105
g80
g81
ssg62
g2094
sg55
(lp2106
S':'
asbag48
(g69
g50
NtRp2107
(dp2108
g53
(dp2109
sg62
g2094
sg55
(lp2110
g48
(g49
g50
NtRp2111
(dp2112
g53
(dp2113
g61
I4
ssg62
g2107
sg55
(lp2114
g48
(g57
g50
NtRp2115
(dp2116
g53
(dp2117
g61
I3
ssg62
Nsg55
(lp2118
g48
(g64
g50
NtRp2119
(dp2120
g53
(dp2121
sg62
g2115
sg55
(lp2122
g48
(g69
g50
NtRp2123
(dp2124
g53
(dp2125
g73
g74
ssg62
g2119
sg55
(lp2126
S'CONTENT_LENGTH'
p2127
asbag48
(g69
g50
NtRp2128
(dp2129
g53
(dp2130
g80
g81
ssg62
g2119
sg55
(lp2131
S':'
asbag48
(g69
g50
NtRp2132
(dp2133
g53
(dp2134
sg62
g2119
sg55
(lp2135
g48
(g49
g50
NtRp2136
(dp2137
g53
(dp2138
g61
I3
ssg62
g2132
sg55
(lp2139
S'0'
asbasbasbag48
(g64
g50
NtRp2140
(dp2141
g53
(dp2142
sg62
g2115
sg55
(lp2143
g48
(g69
g50
NtRp2144
(dp2145
g53
(dp2146
g73
g74
ssg62
g2140
sg55
(lp2147
S'HTTP_ACCEPT'
p2148
asbag48
(g69
g50
NtRp2149
(dp2150
g53
(dp2151
g80
g81
ssg62
g2140
sg55
(lp2152
S':'
asbag48
(g69
g50
NtRp2153
(dp2154
g53
(dp2155
sg62
g2140
sg55
(lp2156
g48
(g49
g50
NtRp2157
(dp2158
g53
(dp2159
g61
I3
ssg62
g2153
sg55
(lp2160
g625
asbasbasbag48
(g64
g50
NtRp2161
(dp2162
g53
(dp2163
sg62
g2115
sg55
(lp2164
g48
(g69
g50
NtRp2165
(dp2166
g53
(dp2167
g73
g74
ssg62
g2161
sg55
(lp2168
S'HTTP_ACCEPT_CHARSET'
p2169
asbag48
(g69
g50
NtRp2170
(dp2171
g53
(dp2172
g80
g81
ssg62
g2161
sg55
(lp2173
S':'
asbag48
(g69
g50
NtRp2174
(dp2175
g53
(dp2176
sg62
g2161
sg55
(lp2177
g48
(g49
g50
NtRp2178
(dp2179
g53
(dp2180
g61
I3
ssg62
g2174
sg55
(lp2181
g647
asbasbasbag48
(g64
g50
NtRp2182
(dp2183
g53
(dp2184
sg62
g2115
sg55
(lp2185
g48
(g69
g50
NtRp2186
(dp2187
g53
(dp2188
g73
g74
ssg62
g2182
sg55
(lp2189
S'HTTP_ACCEPT_ENCODING'
p2190
asbag48
(g69
g50
NtRp2191
(dp2192
g53
(dp2193
g80
g81
ssg62
g2182
sg55
(lp2194
S':'
asbag48
(g69
g50
NtRp2195
(dp2196
g53
(dp2197
sg62
g2182
sg55
(lp2198
g48
(g49
g50
NtRp2199
(dp2200
g53
(dp2201
g61
I3
ssg62
g2195
sg55
(lp2202
g669
asbasbasbag48
(g64
g50
NtRp2203
(dp2204
g53
(dp2205
sg62
g2115
sg55
(lp2206
g48
(g69
g50
NtRp2207
(dp2208
g53
(dp2209
g73
g74
ssg62
g2203
sg55
(lp2210
S'HTTP_ACCEPT_LANGUAGE'
p2211
asbag48
(g69
g50
NtRp2212
(dp2213
g53
(dp2214
g80
g81
ssg62
g2203
sg55
(lp2215
S':'
asbag48
(g69
g50
NtRp2216
(dp2217
g53
(dp2218
sg62
g2203
sg55
(lp2219
g48
(g49
g50
NtRp2220
(dp2221
g53
(dp2222
g61
I3
ssg62
g2216
sg55
(lp2223
g691
asbasbasbag48
(g64
g50
NtRp2224
(dp2225
g53
(dp2226
sg62
g2115
sg55
(lp2227
g48
(g69
g50
NtRp2228
(dp2229
g53
(dp2230
g73
g74
ssg62
g2224
sg55
(lp2231
S'HTTP_CONNECTION'
p2232
asbag48
(g69
g50
NtRp2233
(dp2234
g53
(dp2235
g80
g81
ssg62
g2224
sg55
(lp2236
S':'
asbag48
(g69
g50
NtRp2237
(dp2238
g53
(dp2239
sg62
g2224
sg55
(lp2240
g48
(g49
g50
NtRp2241
(dp2242
g53
(dp2243
g61
I3
ssg62
g2237
sg55
(lp2244
g713
asbasbasbag48
(g64
g50
NtRp2245
(dp2246
g53
(dp2247
sg62
g2115
sg55
(lp2248
g48
(g69
g50
NtRp2249
(dp2250
g53
(dp2251
g73
g74
ssg62
g2245
sg55
(lp2252
S'HTTP_CONTENT_LENGTH'
p2253
asbag48
(g69
g50
NtRp2254
(dp2255
g53
(dp2256
g80
g81
ssg62
g2245
sg55
(lp2257
S':'
asbag48
(g69
g50
NtRp2258
(dp2259
g53
(dp2260
sg62
g2245
sg55
(lp2261
g48
(g49
g50
NtRp2262
(dp2263
g53
(dp2264
g61
I3
ssg62
g2258
sg55
(lp2265
S'0'
asbasbasbag48
(g64
g50
NtRp2266
(dp2267
g53
(dp2268
sg62
g2115
sg55
(lp2269
g48
(g69
g50
NtRp2270
(dp2271
g53
(dp2272
g73
g74
ssg62
g2266
sg55
(lp2273
S'HTTP_COOKIE'
p2274
asbag48
(g69
g50
NtRp2275
(dp2276
g53
(dp2277
g80
g81
ssg62
g2266
sg55
(lp2278
S':'
asbag48
(g69
g50
NtRp2279
(dp2280
g53
(dp2281
sg62
g2266
sg55
(lp2282
g48
(g49
g50
NtRp2283
(dp2284
g53
(dp2285
g61
I3
ssg62
g2279
sg55
(lp2286
g756
asbasbasbag48
(g64
g50
NtRp2287
(dp2288
g53
(dp2289
sg62
g2115
sg55
(lp2290
g48
(g69
g50
NtRp2291
(dp2292
g53
(dp2293
g73
g74
ssg62
g2287
sg55
(lp2294
S'HTTP_HOST'
p2295
asbag48
(g69
g50
NtRp2296
(dp2297
g53
(dp2298
g80
g81
ssg62
g2287
sg55
(lp2299
S':'
asbag48
(g69
g50
NtRp2300
(dp2301
g53
(dp2302
sg62
g2287
sg55
(lp2303
g48
(g49
g50
NtRp2304
(dp2305
g53
(dp2306
g61
I3
ssg62
g2300
sg55
(lp2307
g778
asbasbasbag48
(g64
g50
NtRp2308
(dp2309
g53
(dp2310
sg62
g2115
sg55
(lp2311
g48
(g69
g50
NtRp2312
(dp2313
g53
(dp2314
g73
g74
ssg62
g2308
sg55
(lp2315
S'HTTP_ORIGIN'
p2316
asbag48
(g69
g50
NtRp2317
(dp2318
g53
(dp2319
g80
g81
ssg62
g2308
sg55
(lp2320
S':'
asbag48
(g69
g50
NtRp2321
(dp2322
g53
(dp2323
sg62
g2308
sg55
(lp2324
g48
(g49
g50
NtRp2325
(dp2326
g53
(dp2327
g61
I3
ssg62
g2321
sg55
(lp2328
g800
asbasbasbag48
(g64
g50
NtRp2329
(dp2330
g53
(dp2331
sg62
g2115
sg55
(lp2332
g48
(g69
g50
NtRp2333
(dp2334
g53
(dp2335
g73
g74
ssg62
g2329
sg55
(lp2336
S'HTTP_REFERER'
p2337
asbag48
(g69
g50
NtRp2338
(dp2339
g53
(dp2340
g80
g81
ssg62
g2329
sg55
(lp2341
S':'
asbag48
(g69
g50
NtRp2342
(dp2343
g53
(dp2344
sg62
g2329
sg55
(lp2345
g48
(g49
g50
NtRp2346
(dp2347
g53
(dp2348
g61
I3
ssg62
g2342
sg55
(lp2349
g822
asbasbasbag48
(g64
g50
NtRp2350
(dp2351
g53
(dp2352
sg62
g2115
sg55
(lp2353
g48
(g69
g50
NtRp2354
(dp2355
g53
(dp2356
g73
g74
ssg62
g2350
sg55
(lp2357
S'HTTP_USER_AGENT'
p2358
asbag48
(g69
g50
NtRp2359
(dp2360
g53
(dp2361
g80
g81
ssg62
g2350
sg55
(lp2362
S':'
asbag48
(g69
g50
NtRp2363
(dp2364
g53
(dp2365
sg62
g2350
sg55
(lp2366
g48
(g49
g50
NtRp2367
(dp2368
g53
(dp2369
g61
I3
ssg62
g2363
sg55
(lp2370
g844
asbasbasbag48
(g64
g50
NtRp2371
(dp2372
g53
(dp2373
sg62
g2115
sg55
(lp2374
g48
(g69
g50
NtRp2375
(dp2376
g53
(dp2377
g73
g74
ssg62
g2371
sg55
(lp2378
S'HTTP_X_REQUESTED_WITH'
p2379
asbag48
(g69
g50
NtRp2380
(dp2381
g53
(dp2382
g80
g81
ssg62
g2371
sg55
(lp2383
S':'
asbag48
(g69
g50
NtRp2384
(dp2385
g53
(dp2386
sg62
g2371
sg55
(lp2387
g48
(g49
g50
NtRp2388
(dp2389
g53
(dp2390
g61
I3
ssg62
g2384
sg55
(lp2391
g866
asbasbasbag48
(g64
g50
NtRp2392
(dp2393
g53
(dp2394
sg62
g2115
sg55
(lp2395
g48
(g69
g50
NtRp2396
(dp2397
g53
(dp2398
g73
g74
ssg62
g2392
sg55
(lp2399
S'PATH_INFO'
p2400
asbag48
(g69
g50
NtRp2401
(dp2402
g53
(dp2403
g80
g81
ssg62
g2392
sg55
(lp2404
S':'
asbag48
(g69
g50
NtRp2405
(dp2406
g53
(dp2407
sg62
g2392
sg55
(lp2408
g48
(g49
g50
NtRp2409
(dp2410
g53
(dp2411
g61
I3
ssg62
g2405
sg55
(lp2412
g909
asbasbasbag48
(g64
g50
NtRp2413
(dp2414
g53
(dp2415
sg62
g2115
sg55
(lp2416
g48
(g69
g50
NtRp2417
(dp2418
g53
(dp2419
g73
g74
ssg62
g2413
sg55
(lp2420
S'QUERY_STRING'
p2421
asbag48
(g69
g50
NtRp2422
(dp2423
g53
(dp2424
g80
g81
ssg62
g2413
sg55
(lp2425
S':'
asbag48
(g69
g50
NtRp2426
(dp2427
g53
(dp2428
sg62
g2413
sg55
(lp2429
g48
(g49
g50
NtRp2430
(dp2431
g53
(dp2432
g61
I3
ssg62
g2426
sg55
(lp2433
S''
asbasbasbag48
(g64
g50
NtRp2434
(dp2435
g53
(dp2436
sg62
g2115
sg55
(lp2437
g48
(g69
g50
NtRp2438
(dp2439
g53
(dp2440
g73
g74
ssg62
g2434
sg55
(lp2441
S'REMOTE_ADDR'
p2442
asbag48
(g69
g50
NtRp2443
(dp2444
g53
(dp2445
g80
g81
ssg62
g2434
sg55
(lp2446
S':'
asbag48
(g69
g50
NtRp2447
(dp2448
g53
(dp2449
sg62
g2434
sg55
(lp2450
g48
(g49
g50
NtRp2451
(dp2452
g53
(dp2453
g61
I3
ssg62
g2447
sg55
(lp2454
g181
asbasbasbag48
(g64
g50
NtRp2455
(dp2456
g53
(dp2457
sg62
g2115
sg55
(lp2458
g48
(g69
g50
NtRp2459
(dp2460
g53
(dp2461
g73
g74
ssg62
g2455
sg55
(lp2462
S'REMOTE_PORT'
p2463
asbag48
(g69
g50
NtRp2464
(dp2465
g53
(dp2466
g80
g81
ssg62
g2455
sg55
(lp2467
S':'
asbag48
(g69
g50
NtRp2468
(dp2469
g53
(dp2470
sg62
g2455
sg55
(lp2471
g48
(g49
g50
NtRp2472
(dp2473
g53
(dp2474
g61
I3
ssg62
g2468
sg55
(lp2475
g973
asbasbasbag48
(g64
g50
NtRp2476
(dp2477
g53
(dp2478
sg62
g2115
sg55
(lp2479
g48
(g69
g50
NtRp2480
(dp2481
g53
(dp2482
g73
g74
ssg62
g2476
sg55
(lp2483
S'REQUEST_METHOD'
p2484
asbag48
(g69
g50
NtRp2485
(dp2486
g53
(dp2487
g80
g81
ssg62
g2476
sg55
(lp2488
S':'
asbag48
(g69
g50
NtRp2489
(dp2490
g53
(dp2491
sg62
g2476
sg55
(lp2492
g48
(g49
g50
NtRp2493
(dp2494
g53
(dp2495
g61
I3
ssg62
g2489
sg55
(lp2496
g995
asbasbasbag48
(g64
g50
NtRp2497
(dp2498
g53
(dp2499
sg62
g2115
sg55
(lp2500
g48
(g69
g50
NtRp2501
(dp2502
g53
(dp2503
g73
g74
ssg62
g2497
sg55
(lp2504
S'REQUEST_URI'
p2505
asbag48
(g69
g50
NtRp2506
(dp2507
g53
(dp2508
g80
g81
ssg62
g2497
sg55
(lp2509
S':'
asbag48
(g69
g50
NtRp2510
(dp2511
g53
(dp2512
sg62
g2497
sg55
(lp2513
g48
(g49
g50
NtRp2514
(dp2515
g53
(dp2516
g61
I3
ssg62
g2510
sg55
(lp2517
g909
asbasbasbag48
(g64
g50
NtRp2518
(dp2519
g53
(dp2520
sg62
g2115
sg55
(lp2521
g48
(g69
g50
NtRp2522
(dp2523
g53
(dp2524
g73
g74
ssg62
g2518
sg55
(lp2525
S'SCRIPT_NAME'
p2526
asbag48
(g69
g50
NtRp2527
(dp2528
g53
(dp2529
g80
g81
ssg62
g2518
sg55
(lp2530
S':'
asbag48
(g69
g50
NtRp2531
(dp2532
g53
(dp2533
sg62
g2518
sg55
(lp2534
g48
(g49
g50
NtRp2535
(dp2536
g53
(dp2537
g61
I3
ssg62
g2531
sg55
(lp2538
S''
asbasbasbag48
(g64
g50
NtRp2539
(dp2540
g53
(dp2541
sg62
g2115
sg55
(lp2542
g48
(g69
g50
NtRp2543
(dp2544
g53
(dp2545
g73
g74
ssg62
g2539
sg55
(lp2546
S'SERVER_NAME'
p2547
asbag48
(g69
g50
NtRp2548
(dp2549
g53
(dp2550
g80
g81
ssg62
g2539
sg55
(lp2551
S':'
asbag48
(g69
g50
NtRp2552
(dp2553
g53
(dp2554
sg62
g2539
sg55
(lp2555
g48
(g49
g50
NtRp2556
(dp2557
g53
(dp2558
g61
I3
ssg62
g2552
sg55
(lp2559
g1059
asbasbasbag48
(g64
g50
NtRp2560
(dp2561
g53
(dp2562
sg62
g2115
sg55
(lp2563
g48
(g69
g50
NtRp2564
(dp2565
g53
(dp2566
g73
g74
ssg62
g2560
sg55
(lp2567
S'SERVER_PORT'
p2568
asbag48
(g69
g50
NtRp2569
(dp2570
g53
(dp2571
g80
g81
ssg62
g2560
sg55
(lp2572
S':'
asbag48
(g69
g50
NtRp2573
(dp2574
g53
(dp2575
sg62
g2560
sg55
(lp2576
g48
(g49
g50
NtRp2577
(dp2578
g53
(dp2579
g61
I3
ssg62
g2573
sg55
(lp2580
g1081
asbasbasbag48
(g64
g50
NtRp2581
(dp2582
g53
(dp2583
sg62
g2115
sg55
(lp2584
g48
(g69
g50
NtRp2585
(dp2586
g53
(dp2587
g73
g74
ssg62
g2581
sg55
(lp2588
S'SERVER_PROTOCOL'
p2589
asbag48
(g69
g50
NtRp2590
(dp2591
g53
(dp2592
g80
g81
ssg62
g2581
sg55
(lp2593
S':'
asbag48
(g69
g50
NtRp2594
(dp2595
g53
(dp2596
sg62
g2581
sg55
(lp2597
g48
(g49
g50
NtRp2598
(dp2599
g53
(dp2600
g61
I3
ssg62
g2594
sg55
(lp2601
g1103
asbasbasbag48
(g64
g50
NtRp2602
(dp2603
g53
(dp2604
sg62
g2115
sg55
(lp2605
g48
(g69
g50
NtRp2606
(dp2607
g53
(dp2608
g73
g74
ssg62
g2602
sg55
(lp2609
S'SERVER_SOFTWARE'
p2610
asbag48
(g69
g50
NtRp2611
(dp2612
g53
(dp2613
g80
g81
ssg62
g2602
sg55
(lp2614
S':'
asbag48
(g69
g50
NtRp2615
(dp2616
g53
(dp2617
sg62
g2602
sg55
(lp2618
g48
(g49
g50
NtRp2619
(dp2620
g53
(dp2621
g61
I3
ssg62
g2615
sg55
(lp2622
g1125
asbasbasbag48
(g64
g50
NtRp2623
(dp2624
g53
(dp2625
sg62
g2115
sg55
(lp2626
g48
(g69
g50
NtRp2627
(dp2628
g53
(dp2629
g73
g74
ssg62
g2623
sg55
(lp2630
S'WEB2PY_ORIGINAL_URI'
p2631
asbag48
(g69
g50
NtRp2632
(dp2633
g53
(dp2634
g80
g81
ssg62
g2623
sg55
(lp2635
S':'
asbag48
(g69
g50
NtRp2636
(dp2637
g53
(dp2638
sg62
g2623
sg55
(lp2639
g48
(g49
g50
NtRp2640
(dp2641
g53
(dp2642
g61
I3
ssg62
g2636
sg55
(lp2643
g1169
asbasbasbag48
(g64
g50
NtRp2644
(dp2645
g53
(dp2646
sg62
g2115
sg55
(lp2647
g48
(g69
g50
NtRp2648
(dp2649
g53
(dp2650
g73
g74
ssg62
g2644
sg55
(lp2651
S'wsgi.errors'
p2652
asbag48
(g69
g50
NtRp2653
(dp2654
g53
(dp2655
g80
g81
ssg62
g2644
sg55
(lp2656
S':'
asbag48
(g69
g50
NtRp2657
(dp2658
g53
(dp2659
sg62
g2644
sg55
(lp2660
g48
(g49
g50
NtRp2661
(dp2662
g53
(dp2663
g61
I3
ssg62
g2657
sg55
(lp2664
S"<open file '<stderr>', mode 'w' at 0x004B00B0>"
p2665
asbasbasbag48
(g64
g50
NtRp2666
(dp2667
g53
(dp2668
sg62
g2115
sg55
(lp2669
g48
(g69
g50
NtRp2670
(dp2671
g53
(dp2672
g73
g74
ssg62
g2666
sg55
(lp2673
S'wsgi.file_wrapper'
p2674
asbag48
(g69
g50
NtRp2675
(dp2676
g53
(dp2677
g80
g81
ssg62
g2666
sg55
(lp2678
S':'
asbag48
(g69
g50
NtRp2679
(dp2680
g53
(dp2681
sg62
g2666
sg55
(lp2682
g48
(g49
g50
NtRp2683
(dp2684
g53
(dp2685
g61
I3
ssg62
g2679
sg55
(lp2686
S'<class wsgiref.util.FileWrapper at 0x03151570>'
p2687
asbasbasbag48
(g64
g50
NtRp2688
(dp2689
g53
(dp2690
sg62
g2115
sg55
(lp2691
g48
(g69
g50
NtRp2692
(dp2693
g53
(dp2694
g73
g74
ssg62
g2688
sg55
(lp2695
S'wsgi.input'
p2696
asbag48
(g69
g50
NtRp2697
(dp2698
g53
(dp2699
g80
g81
ssg62
g2688
sg55
(lp2700
S':'
asbag48
(g69
g50
NtRp2701
(dp2702
g53
(dp2703
sg62
g2688
sg55
(lp2704
g48
(g49
g50
NtRp2705
(dp2706
g53
(dp2707
g61
I3
ssg62
g2701
sg55
(lp2708
S"<open file '<fdopen>', mode 'w+b' at 0x03419218>"
p2709
asbasbasbag48
(g64
g50
NtRp2710
(dp2711
g53
(dp2712
sg62
g2115
sg55
(lp2713
g48
(g69
g50
NtRp2714
(dp2715
g53
(dp2716
g73
g74
ssg62
g2710
sg55
(lp2717
S'wsgi.multiprocess'
p2718
asbag48
(g69
g50
NtRp2719
(dp2720
g53
(dp2721
g80
g81
ssg62
g2710
sg55
(lp2722
S':'
asbag48
(g69
g50
NtRp2723
(dp2724
g53
(dp2725
sg62
g2710
sg55
(lp2726
g48
(g49
g50
NtRp2727
(dp2728
g53
(dp2729
g61
I3
ssg62
g2723
sg55
(lp2730
g581
asbasbasbag48
(g64
g50
NtRp2731
(dp2732
g53
(dp2733
sg62
g2115
sg55
(lp2734
g48
(g69
g50
NtRp2735
(dp2736
g53
(dp2737
g73
g74
ssg62
g2731
sg55
(lp2738
S'wsgi.multithread'
p2739
asbag48
(g69
g50
NtRp2740
(dp2741
g53
(dp2742
g80
g81
ssg62
g2731
sg55
(lp2743
S':'
asbag48
(g69
g50
NtRp2744
(dp2745
g53
(dp2746
sg62
g2731
sg55
(lp2747
g48
(g49
g50
NtRp2748
(dp2749
g53
(dp2750
g61
I3
ssg62
g2744
sg55
(lp2751
g91
asbasbasbag48
(g64
g50
NtRp2752
(dp2753
g53
(dp2754
sg62
g2115
sg55
(lp2755
g48
(g69
g50
NtRp2756
(dp2757
g53
(dp2758
g73
g74
ssg62
g2752
sg55
(lp2759
S'wsgi.run_once'
p2760
asbag48
(g69
g50
NtRp2761
(dp2762
g53
(dp2763
g80
g81
ssg62
g2752
sg55
(lp2764
S':'
asbag48
(g69
g50
NtRp2765
(dp2766
g53
(dp2767
sg62
g2752
sg55
(lp2768
g48
(g49
g50
NtRp2769
(dp2770
g53
(dp2771
g61
I3
ssg62
g2765
sg55
(lp2772
g581
asbasbasbag48
(g64
g50
NtRp2773
(dp2774
g53
(dp2775
sg62
g2115
sg55
(lp2776
g48
(g69
g50
NtRp2777
(dp2778
g53
(dp2779
g73
g74
ssg62
g2773
sg55
(lp2780
S'wsgi.url_scheme'
p2781
asbag48
(g69
g50
NtRp2782
(dp2783
g53
(dp2784
g80
g81
ssg62
g2773
sg55
(lp2785
S':'
asbag48
(g69
g50
NtRp2786
(dp2787
g53
(dp2788
sg62
g2773
sg55
(lp2789
g48
(g49
g50
NtRp2790
(dp2791
g53
(dp2792
g61
I3
ssg62
g2786
sg55
(lp2793
g1429
asbasbasbag48
(g64
g50
NtRp2794
(dp2795
g53
(dp2796
sg62
g2115
sg55
(lp2797
g48
(g69
g50
NtRp2798
(dp2799
g53
(dp2800
g73
g74
ssg62
g2794
sg55
(lp2801
S'wsgi.version'
p2802
asbag48
(g69
g50
NtRp2803
(dp2804
g53
(dp2805
g80
g81
ssg62
g2794
sg55
(lp2806
S':'
asbag48
(g69
g50
NtRp2807
(dp2808
g53
(dp2809
sg62
g2794
sg55
(lp2810
g48
(g49
g50
NtRp2811
(dp2812
g53
(dp2813
g61
I3
ssg62
g2807
sg55
(lp2814
S'1'
asbasbasbasbasbasbasbasbasbasbasbasbasbsS'frames'
p2815
(lp2816
(dp2817
S'file'
p2818
S'D:\\Dropbox\\Eclipse\\JRMSiteApp\\web2py\\gluon\\restricted.py'
p2819
sS'dump'
p2820
(dp2821
S'environment'
p2822
S"{'A': <class 'gluon.html.A'>, 'ALLOW_TOGGLE': 'true', 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, 'CENTER': <class 'gluon.html.CENTER'>, 'CHECK_VERSION': True, ...}"
p2823
sS'ccode'
p2824
S'<code object <module> at 03435770, file "D:\\Drop...plications\\admin\\controllers/default.py", line 3>'
p2825
ssS'lnum'
p2826
I194
sS'lines'
p2827
(dp2828
I192
S'        else:'
p2829
sI193
S'            ccode = compile2(code,layer)'
p2830
sI194
S'        exec ccode in environment'
p2831
sI195
S'    except HTTP:'
p2832
sI196
S'        raise'
p2833
sI197
S'    except Exception, error:'
p2834
sI198
S'        # XXX Show exception in Wing IDE if running in debugger'
p2835
sI189
S'    try:'
p2836
sI190
S'        if type(code) == types.CodeType:'
p2837
sI191
S'            ccode = code'
p2838
ssS'call'
p2839
S"(code='# coding: utf8\\n\\nfrom gluon.admin import *\\nfrom g...\\n\\nresponse._vars=response._caller(check_version)\\n', environment={'A': <class 'gluon.html.A'>, 'ALLOW_TOGGLE': 'true', 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, 'CENTER': <class 'gluon.html.CENTER'>, 'CHECK_VERSION': True, ...}, layer=r'D:\\Dropbox\\Eclipse\\JRMSiteApp\\web2py\\applications\\admin\\controllers/default.py')"
p2840
sS'func'
p2841
S'restricted'
p2842
sa(dp2843
g2818
S'D:\\Dropbox\\Eclipse\\JRMSiteApp\\web2py\\applications\\admin\\controllers\\default.py'
p2844
sg2820
(dp2845
sg2826
I1225
sg2827
(dp2846
I1216
S'    else:'
p2847
sI1217
S'        return dict(form=T("Disabled"))'
p2848
sI1218
S''
sI1219
S'def reload_routes():'
p2849
sI1220
S'    """ Reload routes.py """'
p2850
sI1221
S'    import gluon.rewrite'
p2851
sI1222
S'    gluon.rewrite.load()'
p2852
sI1223
S"    redirect(URL('site'))"
p2853
sI1214
S'            auth.settings.registration_requires_approval = False'
p2854
sI1215
S'        return dict(form=auth())'
p2855
ssg2839
S'()'
p2856
sg2841
S'<module>'
p2857
sa(dp2858
g2818
S'D:\\Dropbox\\Eclipse\\JRMSiteApp\\web2py\\gluon\\globals.py'
p2859
sg2820
(dp2860
S'self'
p2861
S'undefined'
p2862
sS'f'
S'<function check_version at 0x03719D70>'
p2863
ssg2826
I149
sg2827
(dp2864
I144
S'        self.meta = Storage()      # used by web2py_ajax.html'
p2865
sI145
S'        self.menu = []             # used by the default view layout'
p2866
sI146
S'        self.files = []            # used by web2py_ajax.html'
p2867
sI147
S'        self.generic_patterns = [] # patterns to allow generic views'
p2868
sI148
S'        self._vars = None'
p2869
sI149
S'        self._caller = lambda f: f()'
p2870
sI150
S'        self._view_environment = None'
p2871
sI151
S'        self._custom_commit = None'
p2872
sI152
S'        self._custom_rollback = None'
p2873
sI153
S''
ssg2839
S'(f=<function check_version at 0x03719D70>)'
p2874
sg2841
S'<lambda>'
p2875
sa(dp2876
g2818
S'D:\\Dropbox\\Eclipse\\JRMSiteApp\\web2py\\applications\\admin\\controllers\\default.py'
p2877
sg2820
(dp2878
S'global XML'
p2879
S"<class 'gluon.html.XML'>"
p2880
sS'version_number'
p2881
S"(1, 99, 4, datetime.datetime(2011, 12, 14, 14, 46, 14), 'stable')"
p2882
ssg2826
I105
sg2827
(dp2883
I100
S"        return A(T('web2py is up to date'), _href=WEB2PY_URL)"
p2884
sI101
S'    elif platform.system().lower() in (\'windows\',\'win32\',\'win64\') and os.path.exists("web2py.exe"):'
p2885
sI102
S"        return SPAN('You should upgrade to version %s' % version_number)"
p2886
sI103
S'    else:'
p2887
sI104
S"        return sp_button(URL('upgrade_web2py'), T('upgrade now')) \\"
p2888
sI105
S'          + XML(\' <strong class="upgrade_version">%s</strong>\' % version_number)'
p2889
sI106
S''
sI107
S''
sI108
S'def logout():'
p2890
sI109
S'    """ Logout handler """'
p2891
ssg2839
S'()'
p2892
sg2841
S'check_version'
p2893
sasS'pyver'
p2894
S'Python 2.5.4: C:\\python25\\python.exe'
p2895
sS'session'
p2896
g48
(g49
g50
NtRp2897
(dp2898
g53
(dp2899
sg55
(lp2900
g48
(g57
g50
NtRp2901
(dp2902
g53
(dp2903
g61
I5
ssg62
Nsg55
(lp2904
g48
(g64
g50
NtRp2905
(dp2906
g53
(dp2907
sg62
g2901
sg55
(lp2908
g48
(g69
g50
NtRp2909
(dp2910
g53
(dp2911
g73
g74
ssg62
g2905
sg55
(lp2912
S'authorized'
p2913
asbag48
(g69
g50
NtRp2914
(dp2915
g53
(dp2916
g80
g81
ssg62
g2905
sg55
(lp2917
S':'
asbag48
(g69
g50
NtRp2918
(dp2919
g53
(dp2920
sg62
g2905
sg55
(lp2921
g48
(g49
g50
NtRp2922
(dp2923
g53
(dp2924
g61
I5
ssg62
g2918
sg55
(lp2925
g91
asbasbasbag48
(g64
g50
NtRp2926
(dp2927
g53
(dp2928
sg62
g2901
sg55
(lp2929
g48
(g69
g50
NtRp2930
(dp2931
g53
(dp2932
g73
g74
ssg62
g2926
sg55
(lp2933
S'check_version'
p2934
asbag48
(g69
g50
NtRp2935
(dp2936
g53
(dp2937
g80
g81
ssg62
g2926
sg55
(lp2938
S':'
asbag48
(g69
g50
NtRp2939
(dp2940
g53
(dp2941
sg62
g2926
sg55
(lp2942
g48
(g49
g50
NtRp2943
(dp2944
g53
(dp2945
g61
I5
ssg62
g2939
sg55
(lp2946
g581
asbasbasbag48
(g64
g50
NtRp2947
(dp2948
g53
(dp2949
sg62
g2901
sg55
(lp2950
g48
(g69
g50
NtRp2951
(dp2952
g53
(dp2953
g73
g74
ssg62
g2947
sg55
(lp2954
S'last_time'
p2955
asbag48
(g69
g50
NtRp2956
(dp2957
g53
(dp2958
g80
g81
ssg62
g2947
sg55
(lp2959
S':'
asbag48
(g69
g50
NtRp2960
(dp2961
g53
(dp2962
sg62
g2947
sg55
(lp2963
g48
(g49
g50
NtRp2964
(dp2965
g53
(dp2966
g61
I5
ssg62
g2960
sg55
(lp2967
S'1327612382.2980001'
p2968
asbasbasbasbasbsS'etype'
p2969
S"<type 'exceptions.TypeError'>"
p2970
sS'date'
p2971
S'Fri Jan 27 08:13:03 2012'
p2972
sS'response'
p2973
g48
(g49
g50
NtRp2974
(dp2975
g53
(dp2976
sg55
(lp2977
g48
(g57
g50
NtRp2978
(dp2979
g53
(dp2980
g61
I5
ssg62
Nsg55
(lp2981
g48
(g64
g50
NtRp2982
(dp2983
g53
(dp2984
sg62
g2978
sg55
(lp2985
g48
(g69
g50
NtRp2986
(dp2987
g53
(dp2988
g73
g74
ssg62
g2982
sg55
(lp2989
g146
asbag48
(g69
g50
NtRp2990
(dp2991
g53
(dp2992
g80
g81
ssg62
g2982
sg55
(lp2993
S':'
asbag48
(g69
g50
NtRp2994
(dp2995
g53
(dp2996
sg62
g2982
sg55
(lp2997
g48
(g49
g50
NtRp2998
(dp2999
g53
(dp3000
g61
I5
ssg62
g2994
sg55
(lp3001
S'<cStringIO.StringO object at 0x0340E760>'
p3002
asbasbasbag48
(g64
g50
NtRp3003
(dp3004
g53
(dp3005
sg62
g2978
sg55
(lp3006
g48
(g69
g50
NtRp3007
(dp3008
g53
(dp3009
g73
g74
ssg62
g3003
sg55
(lp3010
g212
asbag48
(g69
g50
NtRp3011
(dp3012
g53
(dp3013
g80
g81
ssg62
g3003
sg55
(lp3014
S':'
asbag48
(g69
g50
NtRp3015
(dp3016
g53
(dp3017
sg62
g3003
sg55
(lp3018
g48
(g49
g50
NtRp3019
(dp3020
g53
(dp3021
g61
I5
ssg62
g3015
sg55
(lp3022
g48
(g57
g50
NtRp3023
(dp3024
g53
(dp3025
g61
I4
ssg62
Nsg55
(lp3026
g48
(g64
g50
NtRp3027
(dp3028
g53
(dp3029
sg62
g3023
sg55
(lp3030
g48
(g69
g50
NtRp3031
(dp3032
g53
(dp3033
g73
g74
ssg62
g3027
sg55
(lp3034
S'session_id_admin'
p3035
asbag48
(g69
g50
NtRp3036
(dp3037
g53
(dp3038
g80
g81
ssg62
g3027
sg55
(lp3039
S':'
asbag48
(g69
g50
NtRp3040
(dp3041
g53
(dp3042
sg62
g3027
sg55
(lp3043
g48
(g49
g50
NtRp3044
(dp3045
g53
(dp3046
g61
I4
ssg62
g3040
sg55
(lp3047
g48
(g57
g50
NtRp3048
(dp3049
g53
(dp3050
g61
I3
ssg62
Nsg55
(lp3051
g48
(g64
g50
NtRp3052
(dp3053
g53
(dp3054
sg62
g3048
sg55
(lp3055
g48
(g69
g50
NtRp3056
(dp3057
g53
(dp3058
g73
g74
ssg62
g3052
sg55
(lp3059
g262
asbag48
(g69
g50
NtRp3060
(dp3061
g53
(dp3062
g80
g81
ssg62
g3052
sg55
(lp3063
S':'
asbag48
(g69
g50
NtRp3064
(dp3065
g53
(dp3066
sg62
g3052
sg55
(lp3067
g48
(g49
g50
NtRp3068
(dp3069
g53
(dp3070
g61
I3
ssg62
g3064
sg55
(lp3071
S''
asbasbasbag48
(g64
g50
NtRp3072
(dp3073
g53
(dp3074
sg62
g3048
sg55
(lp3075
g48
(g69
g50
NtRp3076
(dp3077
g53
(dp3078
g73
g74
ssg62
g3072
sg55
(lp3079
g283
asbag48
(g69
g50
NtRp3080
(dp3081
g53
(dp3082
g80
g81
ssg62
g3072
sg55
(lp3083
S':'
asbag48
(g69
g50
NtRp3084
(dp3085
g53
(dp3086
sg62
g3072
sg55
(lp3087
g48
(g49
g50
NtRp3088
(dp3089
g53
(dp3090
g61
I3
ssg62
g3084
sg55
(lp3091
S''
asbasbasbag48
(g64
g50
NtRp3092
(dp3093
g53
(dp3094
sg62
g3048
sg55
(lp3095
g48
(g69
g50
NtRp3096
(dp3097
g53
(dp3098
g73
g74
ssg62
g3092
sg55
(lp3099
g304
asbag48
(g69
g50
NtRp3100
(dp3101
g53
(dp3102
g80
g81
ssg62
g3092
sg55
(lp3103
S':'
asbag48
(g69
g50
NtRp3104
(dp3105
g53
(dp3106
sg62
g3092
sg55
(lp3107
g48
(g49
g50
NtRp3108
(dp3109
g53
(dp3110
g61
I3
ssg62
g3104
sg55
(lp3111
S''
asbasbasbag48
(g64
g50
NtRp3112
(dp3113
g53
(dp3114
sg62
g3048
sg55
(lp3115
g48
(g69
g50
NtRp3116
(dp3117
g53
(dp3118
g73
g74
ssg62
g3112
sg55
(lp3119
g325
asbag48
(g69
g50
NtRp3120
(dp3121
g53
(dp3122
g80
g81
ssg62
g3112
sg55
(lp3123
S':'
asbag48
(g69
g50
NtRp3124
(dp3125
g53
(dp3126
sg62
g3112
sg55
(lp3127
g48
(g49
g50
NtRp3128
(dp3129
g53
(dp3130
g61
I3
ssg62
g3124
sg55
(lp3131
S''
asbasbasbag48
(g64
g50
NtRp3132
(dp3133
g53
(dp3134
sg62
g3048
sg55
(lp3135
g48
(g69
g50
NtRp3136
(dp3137
g53
(dp3138
g73
g74
ssg62
g3132
sg55
(lp3139
g346
asbag48
(g69
g50
NtRp3140
(dp3141
g53
(dp3142
g80
g81
ssg62
g3132
sg55
(lp3143
S':'
asbag48
(g69
g50
NtRp3144
(dp3145
g53
(dp3146
sg62
g3132
sg55
(lp3147
g48
(g49
g50
NtRp3148
(dp3149
g53
(dp3150
g61
I3
ssg62
g3144
sg55
(lp3151
S'/'
asbasbasbag48
(g64
g50
NtRp3152
(dp3153
g53
(dp3154
sg62
g3048
sg55
(lp3155
g48
(g69
g50
NtRp3156
(dp3157
g53
(dp3158
g73
g74
ssg62
g3152
sg55
(lp3159
g367
asbag48
(g69
g50
NtRp3160
(dp3161
g53
(dp3162
g80
g81
ssg62
g3152
sg55
(lp3163
S':'
asbag48
(g69
g50
NtRp3164
(dp3165
g53
(dp3166
sg62
g3152
sg55
(lp3167
g48
(g49
g50
NtRp3168
(dp3169
g53
(dp3170
g61
I3
ssg62
g3164
sg55
(lp3171
S''
asbasbasbag48
(g64
g50
NtRp3172
(dp3173
g53
(dp3174
sg62
g3048
sg55
(lp3175
g48
(g69
g50
NtRp3176
(dp3177
g53
(dp3178
g73
g74
ssg62
g3172
sg55
(lp3179
g388
asbag48
(g69
g50
NtRp3180
(dp3181
g53
(dp3182
g80
g81
ssg62
g3172
sg55
(lp3183
S':'
asbag48
(g69
g50
NtRp3184
(dp3185
g53
(dp3186
sg62
g3172
sg55
(lp3187
g48
(g49
g50
NtRp3188
(dp3189
g53
(dp3190
g61
I3
ssg62
g3184
sg55
(lp3191
S''
asbasbasbasbasbasbasbasbasbasbasbag48
(g64
g50
NtRp3192
(dp3193
g53
(dp3194
sg62
g2978
sg55
(lp3195
g48
(g69
g50
NtRp3196
(dp3197
g53
(dp3198
g73
g74
ssg62
g3192
sg55
(lp3199
S'files'
p3200
asbag48
(g69
g50
NtRp3201
(dp3202
g53
(dp3203
g80
g81
ssg62
g3192
sg55
(lp3204
S':'
asbag48
(g69
g50
NtRp3205
(dp3206
g53
(dp3207
sg62
g3192
sg55
(lp3208
g48
(g49
g50
NtRp3209
(dp3210
g53
(dp3211
g61
I5
ssg62
g3205
sg55
(lp3212
g48
(g57
g50
NtRp3213
(dp3214
g53
(dp3215
g61
I4
ssg62
Nsg55
(lp3216
g48
(g64
g50
NtRp3217
(dp3218
g53
(dp3219
sg62
g3213
sg55
(lp3220
g48
(g69
g50
NtRp3221
(dp3222
g53
(dp3223
sg62
g3217
sg55
(lp3224
g48
(g49
g50
NtRp3225
(dp3226
g53
(dp3227
g61
I4
ssg62
g3221
sg55
(lp3228
S'/admin/static/plugin_multiselect/jquery.dimensions.js'
p3229
asbasbasbag48
(g64
g50
NtRp3230
(dp3231
g53
(dp3232
sg62
g3213
sg55
(lp3233
g48
(g69
g50
NtRp3234
(dp3235
g53
(dp3236
sg62
g3230
sg55
(lp3237
g48
(g49
g50
NtRp3238
(dp3239
g53
(dp3240
g61
I4
ssg62
g3234
sg55
(lp3241
S'/admin/static/plugin_multiselect/jquery.multiselect.js'
p3242
asbasbasbag48
(g64
g50
NtRp3243
(dp3244
g53
(dp3245
sg62
g3213
sg55
(lp3246
g48
(g69
g50
NtRp3247
(dp3248
g53
(dp3249
sg62
g3243
sg55
(lp3250
g48
(g49
g50
NtRp3251
(dp3252
g53
(dp3253
g61
I4
ssg62
g3247
sg55
(lp3254
S'/admin/static/plugin_multiselect/jquery.multiselect.css'
p3255
asbasbasbag48
(g64
g50
NtRp3256
(dp3257
g53
(dp3258
sg62
g3213
sg55
(lp3259
g48
(g69
g50
NtRp3260
(dp3261
g53
(dp3262
sg62
g3256
sg55
(lp3263
g48
(g49
g50
NtRp3264
(dp3265
g53
(dp3266
g61
I4
ssg62
g3260
sg55
(lp3267
S'/admin/static/plugin_multiselect/start.js'
p3268
asbasbasbasbasbasbasbag48
(g64
g50
NtRp3269
(dp3270
g53
(dp3271
sg62
g2978
sg55
(lp3272
g48
(g69
g50
NtRp3273
(dp3274
g53
(dp3275
g73
g74
ssg62
g3269
sg55
(lp3276
S'flash'
p3277
asbag48
(g69
g50
NtRp3278
(dp3279
g53
(dp3280
g80
g81
ssg62
g3269
sg55
(lp3281
S':'
asbag48
(g69
g50
NtRp3282
(dp3283
g53
(dp3284
sg62
g3269
sg55
(lp3285
g48
(g49
g50
NtRp3286
(dp3287
g53
(dp3288
g61
I5
ssg62
g3282
sg55
(lp3289
S''
asbasbasbag48
(g64
g50
NtRp3290
(dp3291
g53
(dp3292
sg62
g2978
sg55
(lp3293
g48
(g69
g50
NtRp3294
(dp3295
g53
(dp3296
g73
g74
ssg62
g3290
sg55
(lp3297
S'generic_patterns'
p3298
asbag48
(g69
g50
NtRp3299
(dp3300
g53
(dp3301
g80
g81
ssg62
g3290
sg55
(lp3302
S':'
asbag48
(g69
g50
NtRp3303
(dp3304
g53
(dp3305
sg62
g3290
sg55
(lp3306
g48
(g49
g50
NtRp3307
(dp3308
g53
(dp3309
g61
I5
ssg62
g3303
sg55
(lp3310
g48
(g57
g50
NtRp3311
(dp3312
g53
(dp3313
g61
I4
ssg62
Nsg55
(lp3314
sbasbasbasbag48
(g64
g50
NtRp3315
(dp3316
g53
(dp3317
sg62
g2978
sg55
(lp3318
g48
(g69
g50
NtRp3319
(dp3320
g53
(dp3321
g73
g74
ssg62
g3315
sg55
(lp3322
S'headers'
p3323
asbag48
(g69
g50
NtRp3324
(dp3325
g53
(dp3326
g80
g81
ssg62
g3315
sg55
(lp3327
S':'
asbag48
(g69
g50
NtRp3328
(dp3329
g53
(dp3330
sg62
g3315
sg55
(lp3331
g48
(g49
g50
NtRp3332
(dp3333
g53
(dp3334
g61
I5
ssg62
g3328
sg55
(lp3335
g48
(g57
g50
NtRp3336
(dp3337
g53
(dp3338
g61
I4
ssg62
Nsg55
(lp3339
g48
(g64
g50
NtRp3340
(dp3341
g53
(dp3342
sg62
g3336
sg55
(lp3343
g48
(g69
g50
NtRp3344
(dp3345
g53
(dp3346
g73
g74
ssg62
g3340
sg55
(lp3347
S'Cache-Control'
p3348
asbag48
(g69
g50
NtRp3349
(dp3350
g53
(dp3351
g80
g81
ssg62
g3340
sg55
(lp3352
S':'
asbag48
(g69
g50
NtRp3353
(dp3354
g53
(dp3355
sg62
g3340
sg55
(lp3356
g48
(g49
g50
NtRp3357
(dp3358
g53
(dp3359
g61
I4
ssg62
g3353
sg55
(lp3360
S'no-store, no-cache, must-revalidate, post-check=0, pre-check=0'
p3361
asbasbasbag48
(g64
g50
NtRp3362
(dp3363
g53
(dp3364
sg62
g3336
sg55
(lp3365
g48
(g69
g50
NtRp3366
(dp3367
g53
(dp3368
g73
g74
ssg62
g3362
sg55
(lp3369
S'Content-Type'
p3370
asbag48
(g69
g50
NtRp3371
(dp3372
g53
(dp3373
g80
g81
ssg62
g3362
sg55
(lp3374
S':'
asbag48
(g69
g50
NtRp3375
(dp3376
g53
(dp3377
sg62
g3362
sg55
(lp3378
g48
(g49
g50
NtRp3379
(dp3380
g53
(dp3381
g61
I4
ssg62
g3375
sg55
(lp3382
S'text/html; charset=utf-8'
p3383
asbasbasbag48
(g64
g50
NtRp3384
(dp3385
g53
(dp3386
sg62
g3336
sg55
(lp3387
g48
(g69
g50
NtRp3388
(dp3389
g53
(dp3390
g73
g74
ssg62
g3384
sg55
(lp3391
S'Expires'
p3392
asbag48
(g69
g50
NtRp3393
(dp3394
g53
(dp3395
g80
g81
ssg62
g3384
sg55
(lp3396
S':'
asbag48
(g69
g50
NtRp3397
(dp3398
g53
(dp3399
sg62
g3384
sg55
(lp3400
g48
(g49
g50
NtRp3401
(dp3402
g53
(dp3403
g61
I4
ssg62
g3397
sg55
(lp3404
S'Thu, 26 Jan 2012 21:13:02 GMT'
p3405
asbasbasbag48
(g64
g50
NtRp3406
(dp3407
g53
(dp3408
sg62
g3336
sg55
(lp3409
g48
(g69
g50
NtRp3410
(dp3411
g53
(dp3412
g73
g74
ssg62
g3406
sg55
(lp3413
S'NingNang'
p3414
asbag48
(g69
g50
NtRp3415
(dp3416
g53
(dp3417
g80
g81
ssg62
g3406
sg55
(lp3418
S':'
asbag48
(g69
g50
NtRp3419
(dp3420
g53
(dp3421
sg62
g3406
sg55
(lp3422
g48
(g49
g50
NtRp3423
(dp3424
g53
(dp3425
g61
I4
ssg62
g3419
sg55
(lp3426
S'Nong'
p3427
asbasbasbag48
(g64
g50
NtRp3428
(dp3429
g53
(dp3430
sg62
g3336
sg55
(lp3431
g48
(g69
g50
NtRp3432
(dp3433
g53
(dp3434
g73
g74
ssg62
g3428
sg55
(lp3435
S'Pragma'
p3436
asbag48
(g69
g50
NtRp3437
(dp3438
g53
(dp3439
g80
g81
ssg62
g3428
sg55
(lp3440
S':'
asbag48
(g69
g50
NtRp3441
(dp3442
g53
(dp3443
sg62
g3428
sg55
(lp3444
g48
(g49
g50
NtRp3445
(dp3446
g53
(dp3447
g61
I4
ssg62
g3441
sg55
(lp3448
S'no-cache'
p3449
asbasbasbasbasbasbasbag48
(g64
g50
NtRp3450
(dp3451
g53
(dp3452
sg62
g2978
sg55
(lp3453
g48
(g69
g50
NtRp3454
(dp3455
g53
(dp3456
g73
g74
ssg62
g3450
sg55
(lp3457
S'menu'
p3458
asbag48
(g69
g50
NtRp3459
(dp3460
g53
(dp3461
g80
g81
ssg62
g3450
sg55
(lp3462
S':'
asbag48
(g69
g50
NtRp3463
(dp3464
g53
(dp3465
sg62
g3450
sg55
(lp3466
g48
(g49
g50
NtRp3467
(dp3468
g53
(dp3469
g61
I5
ssg62
g3463
sg55
(lp3470
g48
(g57
g50
NtRp3471
(dp3472
g53
(dp3473
g61
I4
ssg62
Nsg55
(lp3474
g48
(g64
g50
NtRp3475
(dp3476
g53
(dp3477
sg62
g3471
sg55
(lp3478
g48
(g69
g50
NtRp3479
(dp3480
g53
(dp3481
sg62
g3475
sg55
(lp3482
g48
(g49
g50
NtRp3483
(dp3484
g53
(dp3485
g61
I4
ssg62
g3479
sg55
(lp3486
g48
(g57
g50
NtRp3487
(dp3488
g53
(dp3489
g61
I3
ssg62
Nsg55
(lp3490
g48
(g64
g50
NtRp3491
(dp3492
g53
(dp3493
sg62
g3487
sg55
(lp3494
g48
(g69
g50
NtRp3495
(dp3496
g53
(dp3497
sg62
g3491
sg55
(lp3498
g48
(g49
g50
NtRp3499
(dp3500
g53
(dp3501
g61
I3
ssg62
g3495
sg55
(lp3502
cgluon.languages
lazyT_unpickle
p3503
(S's\x04\x00\x00\x00Site'
tRp3504
asbasbasbag48
(g64
g50
NtRp3505
(dp3506
g53
(dp3507
sg62
g3487
sg55
(lp3508
g48
(g69
g50
NtRp3509
(dp3510
g53
(dp3511
sg62
g3505
sg55
(lp3512
g48
(g49
g50
NtRp3513
(dp3514
g53
(dp3515
g61
I3
ssg62
g3509
sg55
(lp3516
g581
asbasbasbag48
(g64
g50
NtRp3517
(dp3518
g53
(dp3519
sg62
g3487
sg55
(lp3520
g48
(g69
g50
NtRp3521
(dp3522
g53
(dp3523
sg62
g3517
sg55
(lp3524
g48
(g49
g50
NtRp3525
(dp3526
g53
(dp3527
g61
I3
ssg62
g3521
sg55
(lp3528
S'/admin/default/site'
p3529
asbasbasbasbasbasbasbag48
(g64
g50
NtRp3530
(dp3531
g53
(dp3532
sg62
g3471
sg55
(lp3533
g48
(g69
g50
NtRp3534
(dp3535
g53
(dp3536
sg62
g3530
sg55
(lp3537
g48
(g49
g50
NtRp3538
(dp3539
g53
(dp3540
g61
I4
ssg62
g3534
sg55
(lp3541
g48
(g57
g50
NtRp3542
(dp3543
g53
(dp3544
g61
I3
ssg62
Nsg55
(lp3545
g48
(g64
g50
NtRp3546
(dp3547
g53
(dp3548
sg62
g3542
sg55
(lp3549
g48
(g69
g50
NtRp3550
(dp3551
g53
(dp3552
sg62
g3546
sg55
(lp3553
g48
(g49
g50
NtRp3554
(dp3555
g53
(dp3556
g61
I3
ssg62
g3550
sg55
(lp3557
g3503
(S's\x06\x00\x00\x00Logout'
tRp3558
asbasbasbag48
(g64
g50
NtRp3559
(dp3560
g53
(dp3561
sg62
g3542
sg55
(lp3562
g48
(g69
g50
NtRp3563
(dp3564
g53
(dp3565
sg62
g3559
sg55
(lp3566
g48
(g49
g50
NtRp3567
(dp3568
g53
(dp3569
g61
I3
ssg62
g3563
sg55
(lp3570
g581
asbasbasbag48
(g64
g50
NtRp3571
(dp3572
g53
(dp3573
sg62
g3542
sg55
(lp3574
g48
(g69
g50
NtRp3575
(dp3576
g53
(dp3577
sg62
g3571
sg55
(lp3578
g48
(g49
g50
NtRp3579
(dp3580
g53
(dp3581
g61
I3
ssg62
g3575
sg55
(lp3582
S'/admin/default/logout'
p3583
asbasbasbasbasbasbasbag48
(g64
g50
NtRp3584
(dp3585
g53
(dp3586
sg62
g3471
sg55
(lp3587
g48
(g69
g50
NtRp3588
(dp3589
g53
(dp3590
sg62
g3584
sg55
(lp3591
g48
(g49
g50
NtRp3592
(dp3593
g53
(dp3594
g61
I4
ssg62
g3588
sg55
(lp3595
g48
(g57
g50
NtRp3596
(dp3597
g53
(dp3598
g61
I3
ssg62
Nsg55
(lp3599
g48
(g64
g50
NtRp3600
(dp3601
g53
(dp3602
sg62
g3596
sg55
(lp3603
g48
(g69
g50
NtRp3604
(dp3605
g53
(dp3606
sg62
g3600
sg55
(lp3607
g48
(g49
g50
NtRp3608
(dp3609
g53
(dp3610
g61
I3
ssg62
g3604
sg55
(lp3611
g3503
(S's\x04\x00\x00\x00Help'
tRp3612
asbasbasbag48
(g64
g50
NtRp3613
(dp3614
g53
(dp3615
sg62
g3596
sg55
(lp3616
g48
(g69
g50
NtRp3617
(dp3618
g53
(dp3619
sg62
g3613
sg55
(lp3620
g48
(g49
g50
NtRp3621
(dp3622
g53
(dp3623
g61
I3
ssg62
g3617
sg55
(lp3624
g581
asbasbasbag48
(g64
g50
NtRp3625
(dp3626
g53
(dp3627
sg62
g3596
sg55
(lp3628
g48
(g69
g50
NtRp3629
(dp3630
g53
(dp3631
sg62
g3625
sg55
(lp3632
g48
(g49
g50
NtRp3633
(dp3634
g53
(dp3635
g61
I3
ssg62
g3629
sg55
(lp3636
S'http://web2py.com/examples'
p3637
asbasbasbasbasbasbasbasbasbasbasbag48
(g64
g50
NtRp3638
(dp3639
g53
(dp3640
sg62
g2978
sg55
(lp3641
g48
(g69
g50
NtRp3642
(dp3643
g53
(dp3644
g73
g74
ssg62
g3638
sg55
(lp3645
S'meta'
p3646
asbag48
(g69
g50
NtRp3647
(dp3648
g53
(dp3649
g80
g81
ssg62
g3638
sg55
(lp3650
S':'
asbag48
(g69
g50
NtRp3651
(dp3652
g53
(dp3653
sg62
g3638
sg55
(lp3654
g48
(g49
g50
NtRp3655
(dp3656
g53
(dp3657
g61
I5
ssg62
g3651
sg55
(lp3658
g48
(g57
g50
NtRp3659
(dp3660
g53
(dp3661
g61
I4
ssg62
Nsg55
(lp3662
sbasbasbasbag48
(g64
g50
NtRp3663
(dp3664
g53
(dp3665
sg62
g2978
sg55
(lp3666
g48
(g69
g50
NtRp3667
(dp3668
g53
(dp3669
g73
g74
ssg62
g3663
sg55
(lp3670
S'postprocessing'
p3671
asbag48
(g69
g50
NtRp3672
(dp3673
g53
(dp3674
g80
g81
ssg62
g3663
sg55
(lp3675
S':'
asbag48
(g69
g50
NtRp3676
(dp3677
g53
(dp3678
sg62
g3663
sg55
(lp3679
g48
(g49
g50
NtRp3680
(dp3681
g53
(dp3682
g61
I5
ssg62
g3676
sg55
(lp3683
g48
(g57
g50
NtRp3684
(dp3685
g53
(dp3686
g61
I4
ssg62
Nsg55
(lp3687
sbasbasbasbag48
(g64
g50
NtRp3688
(dp3689
g53
(dp3690
sg62
g2978
sg55
(lp3691
g48
(g69
g50
NtRp3692
(dp3693
g53
(dp3694
g73
g74
ssg62
g3688
sg55
(lp3695
S'session_file'
p3696
asbag48
(g69
g50
NtRp3697
(dp3698
g53
(dp3699
g80
g81
ssg62
g3688
sg55
(lp3700
S':'
asbag48
(g69
g50
NtRp3701
(dp3702
g53
(dp3703
sg62
g3688
sg55
(lp3704
g48
(g49
g50
NtRp3705
(dp3706
g53
(dp3707
g61
I5
ssg62
g3701
sg55
(lp3708
S"<open file 'D:\\Dropbox\\Eclipse\\JRMSiteApp\\web2py\\applications\\admin\\sessions\\127.0.0.1-9ea0b57a-cbdd-4f07-b23b-d79d81d29f1c', mode 'rb+' at 0x03422E30>"
p3709
asbasbasbag48
(g64
g50
NtRp3710
(dp3711
g53
(dp3712
sg62
g2978
sg55
(lp3713
g48
(g69
g50
NtRp3714
(dp3715
g53
(dp3716
g73
g74
ssg62
g3710
sg55
(lp3717
S'session_filename'
p3718
asbag48
(g69
g50
NtRp3719
(dp3720
g53
(dp3721
g80
g81
ssg62
g3710
sg55
(lp3722
S':'
asbag48
(g69
g50
NtRp3723
(dp3724
g53
(dp3725
sg62
g3710
sg55
(lp3726
g48
(g49
g50
NtRp3727
(dp3728
g53
(dp3729
g61
I5
ssg62
g3723
sg55
(lp3730
S'D:\\Dropbox\\Eclipse\\JRMSiteApp\\web2py\\applications\\admin\\sessions\\127.0.0.1-9ea0b57a-cbdd-4f07-b23b-d79d81d29f1c'
p3731
asbasbasbag48
(g64
g50
NtRp3732
(dp3733
g53
(dp3734
sg62
g2978
sg55
(lp3735
g48
(g69
g50
NtRp3736
(dp3737
g53
(dp3738
g73
g74
ssg62
g3732
sg55
(lp3739
S'session_id'
p3740
asbag48
(g69
g50
NtRp3741
(dp3742
g53
(dp3743
g80
g81
ssg62
g3732
sg55
(lp3744
S':'
asbag48
(g69
g50
NtRp3745
(dp3746
g53
(dp3747
sg62
g3732
sg55
(lp3748
g48
(g49
g50
NtRp3749
(dp3750
g53
(dp3751
g61
I5
ssg62
g3745
sg55
(lp3752
S'127.0.0.1-9ea0b57a-cbdd-4f07-b23b-d79d81d29f1c'
p3753
asbasbasbag48
(g64
g50
NtRp3754
(dp3755
g53
(dp3756
sg62
g2978
sg55
(lp3757
g48
(g69
g50
NtRp3758
(dp3759
g53
(dp3760
g73
g74
ssg62
g3754
sg55
(lp3761
S'session_id_name'
p3762
asbag48
(g69
g50
NtRp3763
(dp3764
g53
(dp3765
g80
g81
ssg62
g3754
sg55
(lp3766
S':'
asbag48
(g69
g50
NtRp3767
(dp3768
g53
(dp3769
sg62
g3754
sg55
(lp3770
g48
(g49
g50
NtRp3771
(dp3772
g53
(dp3773
g61
I5
ssg62
g3767
sg55
(lp3774
g3035
asbasbasbag48
(g64
g50
NtRp3775
(dp3776
g53
(dp3777
sg62
g2978
sg55
(lp3778
g48
(g69
g50
NtRp3779
(dp3780
g53
(dp3781
g73
g74
ssg62
g3775
sg55
(lp3782
S'session_locked'
p3783
asbag48
(g69
g50
NtRp3784
(dp3785
g53
(dp3786
g80
g81
ssg62
g3775
sg55
(lp3787
S':'
asbag48
(g69
g50
NtRp3788
(dp3789
g53
(dp3790
sg62
g3775
sg55
(lp3791
g48
(g49
g50
NtRp3792
(dp3793
g53
(dp3794
g61
I5
ssg62
g3788
sg55
(lp3795
g581
asbasbasbag48
(g64
g50
NtRp3796
(dp3797
g53
(dp3798
sg62
g2978
sg55
(lp3799
g48
(g69
g50
NtRp3800
(dp3801
g53
(dp3802
g73
g74
ssg62
g3796
sg55
(lp3803
S'session_new'
p3804
asbag48
(g69
g50
NtRp3805
(dp3806
g53
(dp3807
g80
g81
ssg62
g3796
sg55
(lp3808
S':'
asbag48
(g69
g50
NtRp3809
(dp3810
g53
(dp3811
sg62
g3796
sg55
(lp3812
g48
(g49
g50
NtRp3813
(dp3814
g53
(dp3815
g61
I5
ssg62
g3809
sg55
(lp3816
g581
asbasbasbag48
(g64
g50
NtRp3817
(dp3818
g53
(dp3819
sg62
g2978
sg55
(lp3820
g48
(g69
g50
NtRp3821
(dp3822
g53
(dp3823
g73
g74
ssg62
g3817
sg55
(lp3824
S'status'
p3825
asbag48
(g69
g50
NtRp3826
(dp3827
g53
(dp3828
g80
g81
ssg62
g3817
sg55
(lp3829
S':'
asbag48
(g69
g50
NtRp3830
(dp3831
g53
(dp3832
sg62
g3817
sg55
(lp3833
g48
(g49
g50
NtRp3834
(dp3835
g53
(dp3836
g61
I5
ssg62
g3830
sg55
(lp3837
S'200'
p3838
asbasbasbag48
(g64
g50
NtRp3839
(dp3840
g53
(dp3841
sg62
g2978
sg55
(lp3842
g48
(g69
g50
NtRp3843
(dp3844
g53
(dp3845
g73
g74
ssg62
g3839
sg55
(lp3846
S'subtitle'
p3847
asbag48
(g69
g50
NtRp3848
(dp3849
g53
(dp3850
g80
g81
ssg62
g3839
sg55
(lp3851
S':'
asbag48
(g69
g50
NtRp3852
(dp3853
g53
(dp3854
sg62
g3839
sg55
(lp3855
g48
(g49
g50
NtRp3856
(dp3857
g53
(dp3858
g61
I5
ssg62
g3852
sg55
(lp3859
S'admin'
p3860
asbasbasbag48
(g64
g50
NtRp3861
(dp3862
g53
(dp3863
sg62
g2978
sg55
(lp3864
g48
(g69
g50
NtRp3865
(dp3866
g53
(dp3867
g73
g74
ssg62
g3861
sg55
(lp3868
S'title'
p3869
asbag48
(g69
g50
NtRp3870
(dp3871
g53
(dp3872
g80
g81
ssg62
g3861
sg55
(lp3873
S':'
asbag48
(g69
g50
NtRp3874
(dp3875
g53
(dp3876
sg62
g3861
sg55
(lp3877
g48
(g49
g50
NtRp3878
(dp3879
g53
(dp3880
g61
I5
ssg62
g3874
sg55
(lp3881
S'check_version '
p3882
asbasbasbag48
(g64
g50
NtRp3883
(dp3884
g53
(dp3885
sg62
g2978
sg55
(lp3886
g48
(g69
g50
NtRp3887
(dp3888
g53
(dp3889
g73
g74
ssg62
g3883
sg55
(lp3890
g2030
asbag48
(g69
g50
NtRp3891
(dp3892
g53
(dp3893
g80
g81
ssg62
g3883
sg55
(lp3894
S':'
asbag48
(g69
g50
NtRp3895
(dp3896
g53
(dp3897
sg62
g3883
sg55
(lp3898
g48
(g49
g50
NtRp3899
(dp3900
g53
(dp3901
g61
I5
ssg62
g3895
sg55
(lp3902
g2043
asbasbasbag48
(g64
g50
NtRp3903
(dp3904
g53
(dp3905
sg62
g2978
sg55
(lp3906
g48
(g69
g50
NtRp3907
(dp3908
g53
(dp3909
g73
g74
ssg62
g3903
sg55
(lp3910
S'view'
p3911
asbag48
(g69
g50
NtRp3912
(dp3913
g53
(dp3914
g80
g81
ssg62
g3903
sg55
(lp3915
S':'
asbag48
(g69
g50
NtRp3916
(dp3917
g53
(dp3918
sg62
g3903
sg55
(lp3919
g48
(g49
g50
NtRp3920
(dp3921
g53
(dp3922
g61
I5
ssg62
g3916
sg55
(lp3923
S'default/check_version.html'
p3924
asbasbasbasbasbsS'locals'
p3925
(dp3926
S'version_number'
p3927
S"(1, 99, 4, datetime.datetime(2011, 12, 14, 14, 46, 14), 'stable')"
p3928
sS'new_version'
p3929
g91
sssS'traceback'
p3930
S'Traceback (most recent call last):\n  File "D:\\Dropbox\\Eclipse\\JRMSiteApp\\web2py\\gluon\\restricted.py", line 194, in restricted\n    exec ccode in environment\n  File "D:\\Dropbox\\Eclipse\\JRMSiteApp\\web2py\\applications\\admin\\controllers/default.py", line 1225, in <module>\n  File "D:\\Dropbox\\Eclipse\\JRMSiteApp\\web2py\\gluon\\globals.py", line 149, in <lambda>\n    self._caller = lambda f: f()\n  File "D:\\Dropbox\\Eclipse\\JRMSiteApp\\web2py\\applications\\admin\\controllers/default.py", line 105, in check_version\n    + XML(\' <strong class="upgrade_version">%s</strong>\' % version_number)\nTypeError: not all arguments converted during string formatting\n'
p3931
s.