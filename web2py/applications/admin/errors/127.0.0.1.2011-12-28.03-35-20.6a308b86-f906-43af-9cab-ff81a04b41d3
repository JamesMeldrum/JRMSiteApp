(dp1
S'output'
p2
S''
sS'layer'
p3
S'D:\\Dropbox\\Eclipse\\OJDevSourceProject\\project\\web2py\\applications\\admin\\controllers/default.py'
p4
sS'code'
p5
S'# coding: utf8\n\nfrom gluon.admin import *\nfrom gluon.fileutils import abspath, read_file, write_file\nfrom glob import glob\nimport shutil\nimport platform\n\nif DEMO_MODE and request.function in [\'change_password\',\'pack\',\'pack_plugin\',\'upgrade_web2py\',\'uninstall\',\'cleanup\',\'compile_app\',\'remove_compiled_app\',\'delete\',\'delete_plugin\',\'create_file\',\'upload_file\',\'update_languages\',\'reload_routes\']:\n    session.flash = T(\'disabled in demo mode\')\n    redirect(URL(\'site\'))\n\nif not is_manager() and request.function in [\'change_password\',\'upgrade_web2py\']:\n    session.flash = T(\'disabled in multi user mode\')\n    redirect(URL(\'site\'))\n\nif FILTER_APPS and request.args(0) and not request.args(0) in FILTER_APPS:\n    session.flash = T(\'disabled in demo mode\')\n    redirect(URL(\'site\'))\n\ndef safe_open(a,b):\n    if DEMO_MODE and \'w\' in b:\n        class tmp:\n            def write(self,data): pass\n        return tmp()\n    return open(a,b)\n\ndef safe_read(a, b=\'r\'):\n    safe_file = safe_open(a, b)\n    try:\n        return safe_file.read()\n    finally:\n        safe_file.close()\n\ndef safe_write(a, value, b=\'w\'):\n    safe_file = safe_open(a, b)\n    try:\n        safe_file.write(value)\n    finally:\n        safe_file.close()\n\ndef get_app(name=None):\n    app = name or request.args(0)\n    if app and (not MULTI_USER_MODE or db(db.app.name==app)(db.app.owner==auth.user.id).count()):\n        return app\n    session.flash = \'App does not exist or your are not authorized\'\n    redirect(URL(\'site\'))\n\ndef index():\n    """ Index handler """\n\n    send = request.vars.send\n    if DEMO_MODE:\n        session.authorized = True\n        session.last_time = t0\n    if not send:\n        send = URL(\'site\')\n    if session.authorized:\n        redirect(send)\n    elif request.vars.password:\n        if verify_password(request.vars.password):\n            session.authorized = True\n            login_record(True)\n\n            if CHECK_VERSION:\n                session.check_version = True\n            else:\n                session.check_version = False\n\n            session.last_time = t0\n            if isinstance(send, list):  # ## why does this happen?\n                send = str(send[0])\n\n            redirect(send)\n        else:\n            times_denied = login_record(False)\n            if times_denied >= allowed_number_of_attempts:\n                response.flash = \\\n                    T(\'admin disabled because too many invalid login attempts\')\n            elif times_denied == allowed_number_of_attempts - 1:\n                response.flash = \\\n                    T(\'You have one more login attempt before you are locked out\')\n            else:\n                response.flash = T(\'invalid password.\')\n    return dict(send=send)\n\n\ndef check_version():\n    """ Checks if web2py is up to date """\n\n    session.forget()\n    session._unlock(response)\n\n    new_version, version_number = check_new_version(request.env.web2py_version,\n                                    WEB2PY_VERSION_URL)\n\n    if new_version == -1:\n        return A(T(\'Unable to check for upgrades\'), _href=WEB2PY_URL)\n    elif new_version != True:\n        return A(T(\'web2py is up to date\'), _href=WEB2PY_URL)\n    elif platform.system().lower() in (\'windows\',\'win32\',\'win64\') and os.path.exists("web2py.exe"):\n        return SPAN(\'You should upgrade to version %s\' % version_number)\n    else:\n        return sp_button(URL(\'upgrade_web2py\'), T(\'upgrade now\')) \\\n          + XML(\' <strong class="upgrade_version">%s</strong>\' % version_number)\n\n\ndef logout():\n    """ Logout handler """\n    session.authorized = None\n    if MULTI_USER_MODE:\n        redirect(URL(\'user/logout\'))\n    redirect(URL(\'index\'))\n\n\ndef change_password():\n\n    if session.pam_user:\n        session.flash = T(\'PAM authenticated user, cannot change password here\')\n        redirect(URL(\'site\'))\n    form=SQLFORM.factory(Field(\'current_admin_password\',\'password\'),\n                         Field(\'new_admin_password\',\'password\',requires=IS_STRONG()),\n                         Field(\'new_admin_password_again\',\'password\'))\n    if form.accepts(request.vars):\n        if not verify_password(request.vars.current_admin_password):\n            form.errors.current_admin_password = T(\'invalid password\')\n        elif form.vars.new_admin_password != form.vars.new_admin_password_again:\n            form.errors.new_admin_password_again = T(\'no match\')\n        else:\n            path = abspath(\'parameters_%s.py\' % request.env.server_port)\n            safe_write(path, \'password="%s"\' % CRYPT()(request.vars.new_admin_password)[0])\n            session.flash = T(\'password changed\')\n            redirect(URL(\'site\'))\n    return dict(form=form)\n\ndef site():\n    """ Site handler """\n\n    myversion = request.env.web2py_version\n\n    # Shortcut to make the elif statements more legible\n    file_or_appurl = \'file\' in request.vars or \'appurl\' in request.vars\n\n    if DEMO_MODE:\n        pass\n\n    elif request.vars.filename and not \'file\' in request.vars:\n        # create a new application\n        appname = cleanpath(request.vars.filename).replace(\'.\', \'_\')\n        if app_create(appname, request):\n            if MULTI_USER_MODE:\n                db.app.insert(name=appname,owner=auth.user.id)\n            session.flash = T(\'new application "%s" created\', appname)\n            redirect(URL(\'design\',args=appname))\n        else:\n            session.flash = \\\n                T(\'unable to create application "%s" (it may exist already)\', request.vars.filename)\n        redirect(URL(r=request))\n\n    elif file_or_appurl and not request.vars.filename:\n        # can\'t do anything without an app name\n        msg = \'you must specify a name for the uploaded application\'\n        response.flash = T(msg)\n\n    elif file_or_appurl and request.vars.filename:\n        # fetch an application via URL or file upload\n        f = None\n        if request.vars.appurl is not \'\':\n            try:\n                f = urllib.urlopen(request.vars.appurl)\n            except Exception, e:\n                session.flash = DIV(T(\'Unable to download app because:\'),PRE(str(e)))\n                redirect(URL(r=request))\n            fname = request.vars.appurl\n        elif request.vars.file is not \'\':\n            f = request.vars.file.file\n            fname = request.vars.file.filename\n\n        if f:\n            appname = cleanpath(request.vars.filename).replace(\'.\', \'_\')\n            installed = app_install(appname, f, request, fname,\n                                    overwrite=request.vars.overwrite_check)\n        if f and installed:\n            msg = \'application %(appname)s installed with md5sum: %(digest)s\'\n            session.flash = T(msg, dict(appname=appname,\n                                        digest=md5_hash(installed)))\n        elif f and request.vars.overwrite_check:\n            msg = \'unable to install application "%(appname)s"\'\n            session.flash = T(msg, dict(appname=request.vars.filename))\n\n        else:\n            msg = \'unable to install application "%(appname)s"\'\n            session.flash = T(msg, dict(appname=request.vars.filename))\n\n        redirect(URL(r=request))\n\n    regex = re.compile(\'^\\w+$\')\n\n    if is_manager():\n        apps = [f for f in os.listdir(apath(r=request)) if regex.match(f)]\n    else:\n        apps = [f.name for f in db(db.app.owner==auth.user_id).select()]\n\n    if FILTER_APPS:\n        apps = [f for f in apps if f in FILTER_APPS]\n\n    apps = sorted(apps,lambda a,b:cmp(a.upper(),b.upper()))\n\n    return dict(app=None, apps=apps, myversion=myversion)\n\n\ndef pack():\n    app = get_app()\n\n    if len(request.args) == 1:\n        fname = \'web2py.app.%s.w2p\' % app\n        filename = app_pack(app, request)\n    else:\n        fname = \'web2py.app.%s.compiled.w2p\' % app\n        filename = app_pack_compiled(app, request)\n\n    if filename:\n        response.headers[\'Content-Type\'] = \'application/w2p\'\n        disposition = \'attachment; filename=%s\' % fname\n        response.headers[\'Content-Disposition\'] = disposition\n        return safe_read(filename, \'rb\')\n    else:\n        session.flash = T(\'internal error\')\n        redirect(URL(\'site\'))\n\ndef pack_plugin():\n    app = get_app()\n    if len(request.args) == 2:\n        fname = \'web2py.plugin.%s.w2p\' % request.args[1]\n        filename = plugin_pack(app, request.args[1], request)\n    if filename:\n        response.headers[\'Content-Type\'] = \'application/w2p\'\n        disposition = \'attachment; filename=%s\' % fname\n        response.headers[\'Content-Disposition\'] = disposition\n        return safe_read(filename, \'rb\')\n    else:\n        session.flash = T(\'internal error\')\n        redirect(URL(\'plugin\',args=request.args))\n\ndef upgrade_web2py():\n    if \'upgrade\' in request.vars:\n        (success, error) = upgrade(request)\n        if success:\n            session.flash = T(\'web2py upgraded; please restart it\')\n        else:\n            session.flash = T(\'unable to upgrade because "%s"\', error)\n        redirect(URL(\'site\'))\n    elif \'noupgrade\' in request.vars:\n        redirect(URL(\'site\'))\n    return dict()\n\ndef uninstall():\n    app = get_app()\n    if \'delete\' in request.vars:\n        if MULTI_USER_MODE:\n            if is_manager() and db(db.app.name==app).delete():\n                pass\n            elif db(db.app.name==app)(db.app.owner==auth.user.id).delete():\n                pass\n            else:\n                session.flash = T(\'no permission to uninstall "%s"\', app)\n                redirect(URL(\'site\'))\n        if app_uninstall(app, request):            \n            session.flash = T(\'application "%s" uninstalled\', app)\n        else:\n            session.flash = T(\'unable to uninstall "%s"\', app)\n        redirect(URL(\'site\'))\n    elif \'nodelete\' in request.vars:\n        redirect(URL(\'site\'))\n    return dict(app=app)\n\n\ndef cleanup():\n    app = get_app()\n    clean = app_cleanup(app, request)\n    if not clean:\n        session.flash = T("some files could not be removed")\n    else:\n        session.flash = T(\'cache, errors and sessions cleaned\')\n\n    redirect(URL(\'site\'))\n\n\ndef compile_app():\n    app = get_app()\n    c = app_compile(app, request)\n    if not c:\n        session.flash = T(\'application compiled\')\n    else:\n        session.flash = DIV(T(\'Cannot compile: there are errors in your app:\'),\n                              CODE(c))\n    redirect(URL(\'site\'))\n\n\ndef remove_compiled_app():\n    """ Remove the compiled application """\n    app = get_app()\n    remove_compiled_application(apath(app, r=request))\n    session.flash = T(\'compiled application removed\')\n    redirect(URL(\'site\'))\n\ndef delete():\n    """ Object delete handler """\n    app = get_app()\n    filename = \'/\'.join(request.args)\n    sender = request.vars.sender\n\n    if isinstance(sender, list):  # ## fix a problem with Vista\n        sender = sender[0]\n\n    if \'nodelete\' in request.vars:\n        redirect(URL(sender))\n    elif \'delete\' in request.vars:\n        try:\n            os.unlink(apath(filename, r=request))\n            session.flash = T(\'file "%(filename)s" deleted\',\n                              dict(filename=filename))\n        except Exception:\n            session.flash = T(\'unable to delete file "%(filename)s"\',\n                              dict(filename=filename))\n        redirect(URL(sender))\n    return dict(filename=filename, sender=sender)\n\ndef peek():\n    """ Visualize object code """\n    app = get_app()\n    filename = \'/\'.join(request.args)\n    try:\n        data = safe_read(apath(filename, r=request)).replace(\'\\r\',\'\')\n    except IOError:\n        session.flash = T(\'file does not exist\')\n        redirect(URL(\'site\'))\n\n    extension = filename[filename.rfind(\'.\') + 1:].lower()\n\n    return dict(app=request.args[0],\n                filename=filename,\n                data=data,\n                extension=extension)\n\n\ndef test():\n    """ Execute controller tests """\n    app = get_app()\n    if len(request.args) > 1:\n        file = request.args[1]\n    else:\n        file = \'.*\\.py\'\n\n    controllers = listdir(apath(\'%s/controllers/\' % app, r=request), file + \'$\')\n\n    return dict(app=app, controllers=controllers)\n\ndef keepalive():\n    return \'\'\n\ndef search():\n    keywords=request.vars.keywords or \'\'\n    app = get_app()\n    def match(filename,keywords):\n        filename=os.path.join(apath(app, r=request),filename)\n        if keywords in read_file(filename,\'rb\'):\n            return True\n        return False\n    path = apath(request.args[0], r=request)\n    files1 = glob(os.path.join(path,\'*/*.py\'))\n    files2 = glob(os.path.join(path,\'*/*.html\'))\n    files3 = glob(os.path.join(path,\'*/*/*.html\'))\n    files=[x[len(path)+1:].replace(\'\\\\\',\'/\') for x in files1+files2+files3 if match(x,keywords)]\n    return response.json({\'files\':files})\n\ndef edit():\n    """ File edit handler """\n    # Load json only if it is ajax edited...\n    app = get_app()\n    filename = \'/\'.join(request.args)\n    # Try to discover the file type\n    if filename[-3:] == \'.py\':\n        filetype = \'python\'\n    elif filename[-5:] == \'.html\':\n        filetype = \'html\'\n    elif filename[-5:] == \'.load\':\n        filetype = \'html\'\n    elif filename[-4:] == \'.css\':\n        filetype = \'css\'\n    elif filename[-3:] == \'.js\':\n        filetype = \'js\'\n    else:\n        filetype = \'html\'\n\n    # ## check if file is not there\n\n    path = apath(filename, r=request)\n\n    if request.vars.revert and os.path.exists(path + \'.bak\'):\n        try:\n            data = safe_read(path + \'.bak\')\n            data1 = safe_read(path)\n        except IOError:\n            session.flash = T(\'Invalid action\')\n            if \'from_ajax\' in request.vars:\n                 return response.json({\'error\': str(T(\'Invalid action\'))})\n            else:\n                redirect(URL(\'site\'))\n\n        safe_write(path, data)\n        file_hash = md5_hash(data)\n        saved_on = time.ctime(os.stat(path)[stat.ST_MTIME])\n        safe_write(path + \'.bak\', data1)\n        response.flash = T(\'file "%s" of %s restored\', (filename, saved_on))\n    else:\n        try:\n            data = safe_read(path)\n        except IOError:\n            session.flash = T(\'Invalid action\')\n            if \'from_ajax\' in request.vars:\n                return response.json({\'error\': str(T(\'Invalid action\'))})\n            else:\n                redirect(URL(\'site\'))\n\n        file_hash = md5_hash(data)\n        saved_on = time.ctime(os.stat(path)[stat.ST_MTIME])\n\n        if request.vars.file_hash and request.vars.file_hash != file_hash:\n            session.flash = T(\'file changed on disk\')\n            data = request.vars.data.replace(\'\\r\\n\', \'\\n\').strip() + \'\\n\'\n            safe_write(path + \'.1\', data)\n            if \'from_ajax\' in request.vars:\n                return response.json({\'error\': str(T(\'file changed on disk\')),\n                                      \'redirect\': URL(\'resolve\',\n                                                      args=request.args)})\n            else:\n                redirect(URL(\'resolve\', args=request.args))\n        elif request.vars.data:\n            safe_write(path + \'.bak\', data)\n            data = request.vars.data.replace(\'\\r\\n\', \'\\n\').strip() + \'\\n\'\n            safe_write(path, data)\n            file_hash = md5_hash(data)\n            saved_on = time.ctime(os.stat(path)[stat.ST_MTIME])\n            response.flash = T(\'file saved on %s\', saved_on)\n\n    data_or_revert = (request.vars.data or request.vars.revert)\n\n    # Check compile errors\n    highlight = None\n    if filetype == \'python\' and request.vars.data:\n        import _ast\n        try:\n            code = request.vars.data.rstrip().replace(\'\\r\\n\',\'\\n\')+\'\\n\'\n            compile(code, path, "exec", _ast.PyCF_ONLY_AST)\n        except Exception, e:\n            start = sum([len(line)+1 for l, line\n                            in enumerate(request.vars.data.split("\\n"))\n                            if l < e.lineno-1])\n            if e.text and e.offset:\n                offset = e.offset - (len(e.text) - len(e.text.splitlines()[-1]))\n            else:\n                offset = 0\n            highlight = {\'start\': start, \'end\': start + offset + 1}\n            try:\n                ex_name = e.__class__.__name__\n            except:\n                ex_name = \'unknown exception!\'\n            response.flash = DIV(T(\'failed to compile file because:\'), BR(),\n                                 B(ex_name), T(\' at line %s\') % e.lineno,\n                                 offset and T(\' at char %s\') % offset or \'\',\n                                 PRE(str(e)))\n\n    if data_or_revert and request.args[1] == \'modules\':\n        # Lets try to reload the modules\n        try:\n            mopath = \'.\'.join(request.args[2:])[:-3]\n            exec \'import applications.%s.modules.%s\' % (request.args[0], mopath)\n            reload(sys.modules[\'applications.%s.modules.%s\'\n                    % (request.args[0], mopath)])\n        except Exception, e:\n            response.flash = DIV(T(\'failed to reload module because:\'),PRE(str(e)))\n\n    edit_controller = None\n    editviewlinks = None\n    view_link = None\n    if filetype == \'html\' and len(request.args) >= 3:\n        cfilename = os.path.join(request.args[0], \'controllers\',\n                                 request.args[2] + \'.py\')\n        if os.path.exists(apath(cfilename, r=request)):\n            edit_controller = URL(\'edit\', args=[cfilename])\n            view = request.args[3].replace(\'.html\',\'\')\n            view_link = URL(request.args[0],request.args[2],view)\n    elif filetype == \'python\' and request.args[1] == \'controllers\':\n        ## it\'s a controller file.\n        ## Create links to all of the associated view files.\n        app = get_app()\n        viewname = os.path.splitext(request.args[2])[0]\n        viewpath = os.path.join(app,\'views\',viewname)\n        aviewpath = apath(viewpath, r=request)\n        viewlist = []\n        if os.path.exists(aviewpath):\n            if os.path.isdir(aviewpath):\n                viewlist = glob(os.path.join(aviewpath,\'*.html\'))\n        elif os.path.exists(aviewpath+\'.html\'):\n            viewlist.append(aviewpath+\'.html\')\n        if len(viewlist):\n            editviewlinks = []\n            for v in viewlist:\n                vf = os.path.split(v)[-1]\n                vargs = "/".join([viewpath.replace(os.sep,"/"),vf])\n                editviewlinks.append(A(T(vf.split(".")[0]),\\\n                    _href=URL(\'edit\',args=[vargs])))\n\n    if len(request.args) > 2 and request.args[1] == \'controllers\':\n        controller = (request.args[2])[:-3]\n        functions = regex_expose.findall(data)\n    else:\n        (controller, functions) = (None, None)\n\n    if \'from_ajax\' in request.vars:\n        return response.json({\'file_hash\': file_hash, \'saved_on\': saved_on, \'functions\':functions, \'controller\': controller, \'application\': request.args[0], \'highlight\': highlight })\n    else:\n\n        editarea_preferences = {}\n        editarea_preferences[\'FONT_SIZE\'] = \'10\'\n        editarea_preferences[\'FULL_SCREEN\'] = \'false\'\n        editarea_preferences[\'ALLOW_TOGGLE\'] = \'true\'\n        editarea_preferences[\'REPLACE_TAB_BY_SPACES\'] = \'4\'\n        editarea_preferences[\'DISPLAY\'] = \'onload\'\n        for key in editarea_preferences:\n            if globals().has_key(key):\n                editarea_preferences[key]=globals()[key]\n        return dict(app=request.args[0],\n                    filename=filename,\n                    filetype=filetype,\n                    data=data,\n                    edit_controller=edit_controller,\n                    file_hash=file_hash,\n                    saved_on=saved_on,\n                    controller=controller,\n                    functions=functions,\n                    view_link=view_link,\n                    editarea_preferences=editarea_preferences,\n                    editviewlinks=editviewlinks)\n\ndef resolve():\n    """\n    """\n\n    filename = \'/\'.join(request.args)\n    # ## check if file is not there\n    path = apath(filename, r=request)\n    a = safe_read(path).split(\'\\n\')\n    try:\n        b = safe_read(path + \'.1\').split(\'\\n\')\n    except IOError:\n        session.flash = \'Other file, no longer there\'\n        redirect(URL(\'edit\', args=request.args))\n\n    d = difflib.ndiff(a, b)\n\n    def leading(line):\n        """  """\n\n        # TODO: we really need to comment this\n        z = \'\'\n        for (k, c) in enumerate(line):\n            if c == \' \':\n                z += \'&nbsp;\'\n            elif c == \' \\t\':\n                z += \'&nbsp;\'\n            elif k == 0 and c == \'?\':\n                pass\n            else:\n                break\n\n        return XML(z)\n\n    def getclass(item):\n        """ Determine item class """\n\n        if item[0] == \' \':\n            return \'normal\'\n        if item[0] == \'+\':\n            return \'plus\'\n        if item[0] == \'-\':\n            return \'minus\'\n\n    if request.vars:\n        c = \'\\n\'.join([item[2:].rstrip() for (i, item) in enumerate(d) if item[0] \\\n                           == \' \' or \'line%i\' % i in request.vars])\n        safe_write(path, c)\n        session.flash = \'files merged\'\n        redirect(URL(\'edit\', args=request.args))\n    else:\n        # Making the short circuit compatible with <= python2.4\n        gen_data = lambda index,item: not item[:1] in [\'+\',\'-\'] and "" \\\n                   or INPUT(_type=\'checkbox\',\n                            _name=\'line%i\' % index,\n                            value=item[0] == \'+\')\n\n        diff = TABLE(*[TR(TD(gen_data(i,item)),\n                          TD(item[0]),\n                          TD(leading(item[2:]),\n                          TT(item[2:].rstrip())), _class=getclass(item))\n                       for (i, item) in enumerate(d) if item[0] != \'?\'])\n\n    return dict(diff=diff, filename=filename)\n\n\ndef edit_language():\n    """ Edit language file """\n    app = get_app()\n    filename = \'/\'.join(request.args)\n    from gluon.languages import read_dict, write_dict\n    strings = read_dict(apath(filename, r=request))\n    keys = sorted(strings.keys(),lambda x,y: cmp(x.lower(), y.lower()))\n    rows = []\n    rows.append(H2(T(\'Original/Translation\')))\n\n    for key in keys:\n        name = md5_hash(key)\n        if key==strings[key]:\n            _class=\'untranslated\'\n        else:\n            _class=\'translated\'\n        if len(key) <= 40:\n            elem = INPUT(_type=\'text\', _name=name,value=strings[key],\n                         _size=70,_class=_class)\n        else:\n            elem = TEXTAREA(_name=name, value=strings[key], _cols=70,\n                            _rows=5, _class=_class)\n\n        # Making the short circuit compatible with <= python2.4\n        k = (strings[key] != key) and key or B(key)\n\n        rows.append(P(k, BR(), elem, TAG.BUTTON(T(\'delete\'),\n                            _onclick=\'return delkey("%s")\' % name), _id=name))\n\n    rows.append(INPUT(_type=\'submit\', _value=T(\'update\')))\n    form = FORM(*rows)\n    if form.accepts(request.vars, keepvalues=True):\n        strs = dict()\n        for key in keys:\n            name = md5_hash(key)\n            if form.vars[name]==chr(127): continue\n            strs[key] = form.vars[name]\n        write_dict(apath(filename, r=request), strs)\n        session.flash = T(\'file saved on %(time)s\', dict(time=time.ctime()))\n        redirect(URL(r=request,args=request.args))\n    return dict(app=request.args[0], filename=filename, form=form)\n\n\ndef about():\n    """ Read about info """\n    app = get_app()\n    # ## check if file is not there\n    about = safe_read(apath(\'%s/ABOUT\' % app, r=request))\n    license = safe_read(apath(\'%s/LICENSE\' % app, r=request))\n    return dict(app=app, about=MARKMIN(about), license=MARKMIN(license))\n\n\ndef design():\n    """ Application design handler """\n    app = get_app()\n\n    if not response.flash and app == request.application:\n        msg = T(\'ATTENTION: you cannot edit the running application!\')\n        response.flash = msg\n\n    if request.vars.pluginfile!=None and not isinstance(request.vars.pluginfile,str):\n        filename=os.path.basename(request.vars.pluginfile.filename)\n        if plugin_install(app, request.vars.pluginfile.file,\n                          request, filename):\n            session.flash = T(\'new plugin installed\')\n            redirect(URL(\'design\',args=app))\n        else:\n            session.flash = \\\n                T(\'unable to create application "%s"\', request.vars.filename)\n        redirect(URL(r=request))\n    elif isinstance(request.vars.pluginfile,str):\n        session.flash = T(\'plugin not specified\')\n        redirect(URL(r=request))\n\n\n    # If we have only pyc files it means that\n    # we cannot design\n    if os.path.exists(apath(\'%s/compiled\' % app, r=request)):\n        session.flash = \\\n            T(\'application is compiled and cannot be designed\')\n        redirect(URL(\'site\'))\n\n    # Get all models\n    models = listdir(apath(\'%s/models/\' % app, r=request), \'.*\\.py$\')\n    models=[x.replace(\'\\\\\',\'/\') for x in models]\n    defines = {}\n    for m in models:\n        data = safe_read(apath(\'%s/models/%s\' % (app, m), r=request))\n        defines[m] = regex_tables.findall(data)\n        defines[m].sort()\n\n    # Get all controllers\n    controllers = sorted(listdir(apath(\'%s/controllers/\' % app, r=request), \'.*\\.py$\'))\n    controllers = [x.replace(\'\\\\\',\'/\') for x in controllers]\n    functions = {}\n    for c in controllers:\n        data = safe_read(apath(\'%s/controllers/%s\' % (app, c), r=request))\n        items = regex_expose.findall(data)\n        functions[c] = items\n\n    # Get all views\n    views = sorted(listdir(apath(\'%s/views/\' % app, r=request), \'[\\w/\\-]+(\\.\\w+)+$\'))\n    views = [x.replace(\'\\\\\',\'/\') for x in views if not x.endswith(\'.bak\')]\n    extend = {}\n    include = {}\n    for c in views:\n        data = safe_read(apath(\'%s/views/%s\' % (app, c), r=request))\n        items = regex_extend.findall(data)\n\n        if items:\n            extend[c] = items[0][1]\n\n        items = regex_include.findall(data)\n        include[c] = [i[1] for i in items]\n\n    # Get all modules\n    modules = listdir(apath(\'%s/modules/\' % app, r=request), \'.*\\.py$\')\n    modules = modules=[x.replace(\'\\\\\',\'/\') for x in modules]\n    modules.sort()\n\n    # Get all static files\n    statics = listdir(apath(\'%s/static/\' % app, r=request), \'[^\\.#].*\')\n    statics = [x.replace(\'\\\\\',\'/\') for x in statics]\n    statics.sort()\n\n    # Get all languages\n    languages = listdir(apath(\'%s/languages/\' % app, r=request), \'[\\w-]*\\.py\')\n\n    #Get crontab\n    cronfolder = apath(\'%s/cron\' % app, r=request)\n    if not os.path.exists(cronfolder): os.mkdir(cronfolder)\n    crontab = apath(\'%s/cron/crontab\' % app, r=request)\n    if not os.path.exists(crontab):\n        safe_write(crontab, \'#crontab\')\n\n    plugins=[]\n    def filter_plugins(items,plugins):\n        plugins+=[item[7:].split(\'/\')[0].split(\'.\')[0] for item in items if item.startswith(\'plugin_\')]\n        plugins[:]=list(set(plugins))\n        plugins.sort()\n        return [item for item in items if not item.startswith(\'plugin_\')]\n\n    return dict(app=app,\n                models=filter_plugins(models,plugins),\n                defines=defines,\n                controllers=filter_plugins(controllers,plugins),\n                functions=functions,\n                views=filter_plugins(views,plugins),\n                modules=filter_plugins(modules,plugins),\n                extend=extend,\n                include=include,\n                statics=filter_plugins(statics,plugins),\n                languages=languages,\n                crontab=crontab,\n                plugins=plugins)\n\ndef delete_plugin():\n    """ Object delete handler """\n    app=request.args(0)\n    plugin = request.args(1)\n    plugin_name=\'plugin_\'+plugin\n    if \'nodelete\' in request.vars:\n        redirect(URL(\'design\',args=app))\n    elif \'delete\' in request.vars:\n        try:\n            for folder in [\'models\',\'views\',\'controllers\',\'static\',\'modules\']:\n                path=os.path.join(apath(app,r=request),folder)\n                for item in os.listdir(path):\n                    if item.startswith(plugin_name):\n                        filename=os.path.join(path,item)\n                        if os.path.isdir(filename):\n                            shutil.rmtree(filename)\n                        else:\n                            os.unlink(filename)\n            session.flash = T(\'plugin "%(plugin)s" deleted\',\n                              dict(plugin=plugin))\n        except Exception:\n            session.flash = T(\'unable to delete file plugin "%(plugin)s"\',\n                              dict(plugin=plugin))\n        redirect(URL(\'design\',args=request.args(0)))\n    return dict(plugin=plugin)\n\ndef plugin():\n    """ Application design handler """\n    app = get_app()\n    plugin = request.args(1)\n\n    if not response.flash and app == request.application:\n        msg = T(\'ATTENTION: you cannot edit the running application!\')\n        response.flash = msg\n\n    # If we have only pyc files it means that\n    # we cannot design\n    if os.path.exists(apath(\'%s/compiled\' % app, r=request)):\n        session.flash = \\\n            T(\'application is compiled and cannot be designed\')\n        redirect(URL(\'site\'))\n\n    # Get all models\n    models = listdir(apath(\'%s/models/\' % app, r=request), \'.*\\.py$\')\n    models=[x.replace(\'\\\\\',\'/\') for x in models]\n    defines = {}\n    for m in models:\n        data = safe_read(apath(\'%s/models/%s\' % (app, m), r=request))\n        defines[m] = regex_tables.findall(data)\n        defines[m].sort()\n\n    # Get all controllers\n    controllers = sorted(listdir(apath(\'%s/controllers/\' % app, r=request), \'.*\\.py$\'))\n    controllers = [x.replace(\'\\\\\',\'/\') for x in controllers]\n    functions = {}\n    for c in controllers:\n        data = safe_read(apath(\'%s/controllers/%s\' % (app, c), r=request))\n        items = regex_expose.findall(data)\n        functions[c] = items\n\n    # Get all views\n    views = sorted(listdir(apath(\'%s/views/\' % app, r=request), \'[\\w/\\-]+\\.\\w+$\'))\n    views = [x.replace(\'\\\\\',\'/\') for x in views]\n    extend = {}\n    include = {}\n    for c in views:\n        data = safe_read(apath(\'%s/views/%s\' % (app, c), r=request))\n        items = regex_extend.findall(data)\n        if items:\n            extend[c] = items[0][1]\n\n        items = regex_include.findall(data)\n        include[c] = [i[1] for i in items]\n\n    # Get all modules\n    modules = listdir(apath(\'%s/modules/\' % app, r=request), \'.*\\.py$\')\n    modules = modules=[x.replace(\'\\\\\',\'/\') for x in modules]\n    modules.sort()\n\n    # Get all static files\n    statics = listdir(apath(\'%s/static/\' % app, r=request), \'[^\\.#].*\')\n    statics = [x.replace(\'\\\\\',\'/\') for x in statics]\n    statics.sort()\n\n    # Get all languages\n    languages = listdir(apath(\'%s/languages/\' % app, r=request), \'[\\w-]*\\.py\')\n\n    #Get crontab\n    crontab = apath(\'%s/cron/crontab\' % app, r=request)\n    if not os.path.exists(crontab):\n        safe_write(crontab, \'#crontab\')\n\n    def filter_plugins(items):\n        regex=re.compile(\'^plugin_\'+plugin+\'(/.*|\\..*)?$\')\n        return [item for item in items if regex.match(item)]\n\n    return dict(app=app,\n                models=filter_plugins(models),\n                defines=defines,\n                controllers=filter_plugins(controllers),\n                functions=functions,\n                views=filter_plugins(views),\n                modules=filter_plugins(modules),\n                extend=extend,\n                include=include,\n                statics=filter_plugins(statics),\n                languages=languages,\n                crontab=crontab)\n\n\ndef create_file():\n    """ Create files handler """\n    try:\n        app = get_app(name=request.vars.location.split(\'/\')[0])\n        path = apath(request.vars.location, r=request)\n        filename = re.sub(\'[^\\w./-]+\', \'_\', request.vars.filename)\n\n        if path[-11:] == \'/languages/\':\n            # Handle language files\n            if len(filename) == 0:\n                raise SyntaxError\n            if not filename[-3:] == \'.py\':\n                filename += \'.py\'\n            app = path.split(\'/\')[-3]\n            path=os.path.join(apath(app, r=request),\'languages\',filename)\n            if not os.path.exists(path):\n                safe_write(path, \'\')\n            findT(apath(app, r=request), filename[:-3])\n            session.flash = T(\'language file "%(filename)s" created/updated\',\n                              dict(filename=filename))\n            redirect(request.vars.sender)\n\n        elif path[-8:] == \'/models/\':\n            # Handle python models\n            if not filename[-3:] == \'.py\':\n                filename += \'.py\'\n\n            if len(filename) == 3:\n                raise SyntaxError\n\n            text = \'# coding: utf8\\n\'\n\n        elif path[-13:] == \'/controllers/\':\n            # Handle python controllers\n            if not filename[-3:] == \'.py\':\n                filename += \'.py\'\n\n            if len(filename) == 3:\n                raise SyntaxError\n\n            text = \'# coding: utf8\\n# %s\\ndef index(): return dict(message="hello from %s")\'\n            text = text % (T(\'try something like\'), filename)\n\n        elif path[-7:] == \'/views/\':\n            if request.vars.plugin and not filename.startswith(\'plugin_%s/\' % request.vars.plugin):\n                filename = \'plugin_%s/%s\' % (request.vars.plugin, filename)\n            # Handle template (html) views\n            if filename.find(\'.\')<0:\n                filename += \'.html\'\n            extension = filename.split(\'.\')[-1].lower()\n\n            if len(filename) == 5:\n                raise SyntaxError\n\n            msg = T(\'This is the %(filename)s template\',\n                    dict(filename=filename))            \n            if extension == \'html\':\n                text = dedent("""\n                   {{extend \'layout.html\'}}\n                   <h1>%s</h1>\n                   {{=BEAUTIFY(response._vars)}}""" % msg)\n            else:\n                generic = os.path.join(path,\'generic.\'+extension)\n                if os.path.exists(generic):\n                    text = read_file(generic)\n                else:\n                    text = \'\'\n                \n        elif path[-9:] == \'/modules/\':\n            if request.vars.plugin and not filename.startswith(\'plugin_%s/\' % request.vars.plugin):\n                filename = \'plugin_%s/%s\' % (request.vars.plugin, filename)\n            # Handle python module files\n            if not filename[-3:] == \'.py\':\n                filename += \'.py\'\n\n            if len(filename) == 3:\n                raise SyntaxError\n\n            text = dedent("""\n                   #!/usr/bin/env python\n                   # coding: utf8\n                   from gluon import *\\n""")\n\n        elif path[-8:] == \'/static/\':\n            if request.vars.plugin and not filename.startswith(\'plugin_%s/\' % request.vars.plugin):\n                filename = \'plugin_%s/%s\' % (request.vars.plugin, filename)\n            text = \'\'\n        else:\n            redirect(request.vars.sender)\n\n        full_filename = os.path.join(path, filename)\n        dirpath = os.path.dirname(full_filename)\n\n        if not os.path.exists(dirpath):\n            os.makedirs(dirpath)\n\n        if os.path.exists(full_filename):\n            raise SyntaxError\n\n        safe_write(full_filename, text)\n        session.flash = T(\'file "%(filename)s" created\',\n                          dict(filename=full_filename[len(path):]))\n        redirect(URL(\'edit\',\n                 args=[os.path.join(request.vars.location, filename)]))\n    except Exception, e:\n        if not isinstance(e,HTTP):\n            session.flash = T(\'cannot create file\')\n\n    redirect(request.vars.sender)\n\n\ndef upload_file():\n    """ File uploading handler """\n\n    try:\n        filename = None\n        app = get_app(name=request.vars.location.split(\'/\')[0])\n        path = apath(request.vars.location, r=request)\n\n        if request.vars.filename:\n            filename = re.sub(\'[^\\w\\./]+\', \'_\', request.vars.filename)\n        else:\n            filename = os.path.split(request.vars.file.filename)[-1]\n\n        if path[-8:] == \'/models/\' and not filename[-3:] == \'.py\':\n            filename += \'.py\'\n\n        if path[-9:] == \'/modules/\' and not filename[-3:] == \'.py\':\n            filename += \'.py\'\n\n        if path[-13:] == \'/controllers/\' and not filename[-3:] == \'.py\':\n            filename += \'.py\'\n\n        if path[-7:] == \'/views/\' and not filename[-5:] == \'.html\':\n            filename += \'.html\'\n\n        if path[-11:] == \'/languages/\' and not filename[-3:] == \'.py\':\n            filename += \'.py\'\n\n        filename = os.path.join(path, filename)\n        dirpath = os.path.dirname(filename)\n\n        if not os.path.exists(dirpath):\n            os.makedirs(dirpath)\n\n        safe_write(filename, request.vars.file.file.read(), \'wb\')\n        session.flash = T(\'file "%(filename)s" uploaded\',\n                          dict(filename=filename[len(path):]))\n    except Exception:\n        if filename:\n            d = dict(filename = filename[len(path):])\n        else:\n            d = dict(filename = \'unkown\')\n        session.flash = T(\'cannot upload file "%(filename)s"\', d)\n\n    redirect(request.vars.sender)\n\n\ndef errors():\n    """ Error handler """\n    import operator\n    import os\n    import pickle\n    import hashlib\n\n    app = get_app()\n\n    method = request.args(1) or \'new\'\n\n\n    if method == \'new\':\n        errors_path = apath(\'%s/errors\' % app, r=request)\n\n        delete_hashes = []\n        for item in request.vars:\n            if item[:7] == \'delete_\':\n                delete_hashes.append(item[7:])\n\n        hash2error = dict()\n\n        for fn in listdir(errors_path, \'^\\w.*\'):\n            fullpath = os.path.join(errors_path, fn)\n            if not os.path.isfile(fullpath): continue\n            try:\n                fullpath_file = open(fullpath, \'r\')\n                try:\n                    error = pickle.load(fullpath_file)\n                finally:\n                    fullpath_file.close()\n            except IOError:\n                continue\n\n            hash = hashlib.md5(error[\'traceback\']).hexdigest()\n\n            if hash in delete_hashes:\n                os.unlink(fullpath)\n            else:\n                try:\n                    hash2error[hash][\'count\'] += 1\n                except KeyError:\n                    error_lines = error[\'traceback\'].split("\\n")\n                    last_line = error_lines[-2]\n                    error_causer = os.path.split(error[\'layer\'])[1]\n                    hash2error[hash] = dict(count=1, pickel=error,\n                                            causer=error_causer,\n                                            last_line=last_line,\n                                            hash=hash,ticket=fn)\n\n        decorated = [(x[\'count\'], x) for x in hash2error.values()]\n        decorated.sort(key=operator.itemgetter(0), reverse=True)\n\n        return dict(errors = [x[1] for x in decorated], app=app, method=method)\n    else:\n        for item in request.vars:\n            if item[:7] == \'delete_\':\n                os.unlink(apath(\'%s/errors/%s\' % (app, item[7:]), r=request))\n        func = lambda p: os.stat(apath(\'%s/errors/%s\' % \\\n                                           (app, p), r=request)).st_mtime\n        tickets = sorted(listdir(apath(\'%s/errors/\' % app, r=request), \'^\\w.*\'),\n                         key=func,\n                         reverse=True)\n\n        return dict(app=app, tickets=tickets, method=method)\n\n\ndef make_link(path):\n    """ Create a link from a path """\n    tryFile = path.replace(\'\\\\\', \'/\')\n\n    if os.path.isabs(tryFile) and os.path.isfile(tryFile):\n        (folder, filename) = os.path.split(tryFile)\n        (base, ext) = os.path.splitext(filename)\n        app = get_app()\n\n        editable = {\'controllers\': \'.py\', \'models\': \'.py\', \'views\': \'.html\'}\n        for key in editable.keys():\n            check_extension = folder.endswith("%s/%s" % (app,key))\n            if ext.lower() == editable[key] and check_extension:\n                return A(\'"\' + tryFile + \'"\',\n                         _href=URL(r=request,\n                         f=\'edit/%s/%s/%s\' % (app, key, filename))).xml()\n    return \'\'\n\n\ndef make_links(traceback):\n    """ Make links using the given traceback """\n\n    lwords = traceback.split(\'"\')\n\n    # Making the short circuit compatible with <= python2.4\n    result = (len(lwords) != 0) and lwords[0] or \'\'\n\n    i = 1\n\n    while i < len(lwords):\n        link = make_link(lwords[i])\n\n        if link == \'\':\n            result += \'"\' + lwords[i]\n        else:\n            result += link\n\n            if i + 1 < len(lwords):\n                result += lwords[i + 1]\n                i = i + 1\n\n        i = i + 1\n\n    return result\n\n\nclass TRACEBACK(object):\n    """ Generate the traceback """\n\n    def __init__(self, text):\n        """ TRACEBACK constructor """\n\n        self.s = make_links(CODE(text).xml())\n\n    def xml(self):\n        """ Returns the xml """\n\n        return self.s\n\n\ndef ticket():\n    """ Ticket handler """\n\n    if len(request.args) != 2:\n        session.flash = T(\'invalid ticket\')\n        redirect(URL(\'site\'))\n\n    app = get_app()\n    myversion = request.env.web2py_version\n    ticket = request.args[1]\n    e = RestrictedError()\n    e.load(request, app, ticket)\n\n    return dict(app=app,\n                ticket=ticket,\n                output=e.output,\n                traceback=(e.traceback and TRACEBACK(e.traceback)),\n                snapshot=e.snapshot,\n                code=e.code,\n                layer=e.layer,\n                myversion=myversion)\n\ndef error():\n    """ Generate a ticket (for testing) """\n    raise RuntimeError(\'admin ticket generator at your service\')\n\ndef update_languages():\n    """ Update available languages """\n\n    app = get_app()\n    update_all_languages(apath(app, r=request))\n    session.flash = T(\'Language files (static strings) updated\')\n    redirect(URL(\'design\',args=app,anchor=\'languages\'))\n\ndef twitter():\n    session.forget()\n    session._unlock(response)\n    import gluon.tools\n    import gluon.contrib.simplejson as sj\n    try:\n        if TWITTER_HASH:\n            page = gluon.tools.fetch(\'http://twitter.com/%s?format=json\'%TWITTER_HASH)\n            return sj.loads(page)[\'#timeline\']\n        else:\n            return \'disabled\'\n    except Exception, e:\n        return DIV(T(\'Unable to download because:\'),BR(),str(e))\n\ndef user():\n    if MULTI_USER_MODE:\n        if not db(db.auth_user).count():\n            auth.settings.registration_requires_approval = False            \n        return dict(form=auth())\n    else:\n        return dict(form=T("Disabled"))\n\ndef reload_routes():\n    """ Reload routes.py """\n    import gluon.rewrite\n    gluon.rewrite.load()\n    redirect(URL(\'site\'))\n\nresponse._vars=response._caller(design)\n'
p6
sS'snapshot'
p7
(dp8
S'exception'
p9
(dp10
S'winerror'
p11
S'3'
sS'__hash__'
p12
S"<method-wrapper '__hash__' of exceptions.WindowsError object at 0x084F1F48>"
p13
sS'__setattr__'
p14
S"<method-wrapper '__setattr__' of exceptions.WindowsError object at 0x084F1F48>"
p15
sS'__reduce_ex__'
p16
S'<built-in method __reduce_ex__ of exceptions.WindowsError object at 0x084F1F48>'
p17
sS'__getslice__'
p18
S"<method-wrapper '__getslice__' of exceptions.WindowsError object at 0x084F1F48>"
p19
sS'__getitem__'
p20
S"<method-wrapper '__getitem__' of exceptions.WindowsError object at 0x084F1F48>"
p21
sS'__setstate__'
p22
S'<built-in method __setstate__ of exceptions.WindowsError object at 0x084F1F48>'
p23
sS'__reduce__'
p24
S'<built-in method __reduce__ of exceptions.WindowsError object at 0x084F1F48>'
p25
sS'__str__'
p26
S"<method-wrapper '__str__' of exceptions.WindowsError object at 0x084F1F48>"
p27
sS'args'
p28
S"(3, 'The system cannot find the path specified')"
p29
sS'__getattribute__'
p30
S"<method-wrapper '__getattribute__' of exceptions.WindowsError object at 0x084F1F48>"
p31
sS'__class__'
p32
S"<type 'exceptions.WindowsError'>"
p33
sS'filename'
p34
S"'D:/Dropbox/Eclipse/OJDevSourceProject/project/web2py/applications/myapp/cron'"
p35
sS'__delattr__'
p36
S"<method-wrapper '__delattr__' of exceptions.WindowsError object at 0x084F1F48>"
p37
sS'strerror'
p38
S"'The system cannot find the path specified'"
p39
sS'__repr__'
p40
S"<method-wrapper '__repr__' of exceptions.WindowsError object at 0x084F1F48>"
p41
sS'errno'
p42
S'2'
sS'__dict__'
p43
S'{}'
p44
sS'__doc__'
p45
S"'MS-Windows OS system call failed.'"
p46
sS'__init__'
p47
S"<method-wrapper '__init__' of exceptions.WindowsError object at 0x084F1F48>"
p48
sS'__new__'
p49
S'<built-in method __new__ of type object at 0x1E1CD5B8>'
p50
ssS'evalue'
p51
S"[Error 3] The system cannot find the path specified: 'D:/Dropbox/Eclipse/OJDevSourceProject/project/web2py/applications/myapp/cron'"
p52
sS'request'
p53
ccopy_reg
_reconstructor
p54
(cgluon.html
BEAUTIFY
p55
c__builtin__
object
p56
NtRp57
(dp58
S'attributes'
p59
(dp60
sS'components'
p61
(lp62
g54
(cgluon.html
TABLE
p63
g56
NtRp64
(dp65
g59
(dp66
S'level'
p67
I5
ssS'parent'
p68
Nsg61
(lp69
g54
(cgluon.html
TR
p70
g56
NtRp71
(dp72
g59
(dp73
sg68
g64
sg61
(lp74
g54
(cgluon.html
TD
p75
g56
NtRp76
(dp77
g59
(dp78
S'_style'
p79
S'font-weight:bold;'
p80
ssg68
g71
sg61
(lp81
S'ajax'
p82
asbag54
(g75
g56
NtRp83
(dp84
g59
(dp85
S'_valign'
p86
S'top'
p87
ssg68
g71
sg61
(lp88
S':'
asbag54
(g75
g56
NtRp89
(dp90
g59
(dp91
sg68
g71
sg61
(lp92
g54
(g55
g56
NtRp93
(dp94
g59
(dp95
g67
I5
ssg68
g89
sg61
(lp96
S'False'
p97
asbasbasbag54
(g70
g56
NtRp98
(dp99
g59
(dp100
sg68
g64
sg61
(lp101
g54
(g75
g56
NtRp102
(dp103
g59
(dp104
g79
g80
ssg68
g98
sg61
(lp105
S'application'
p106
asbag54
(g75
g56
NtRp107
(dp108
g59
(dp109
g86
g87
ssg68
g98
sg61
(lp110
S':'
asbag54
(g75
g56
NtRp111
(dp112
g59
(dp113
sg68
g98
sg61
(lp114
g54
(g55
g56
NtRp115
(dp116
g59
(dp117
g67
I5
ssg68
g111
sg61
(lp118
S'admin'
p119
asbasbasbag54
(g70
g56
NtRp120
(dp121
g59
(dp122
sg68
g64
sg61
(lp123
g54
(g75
g56
NtRp124
(dp125
g59
(dp126
g79
g80
ssg68
g120
sg61
(lp127
g28
asbag54
(g75
g56
NtRp128
(dp129
g59
(dp130
g86
g87
ssg68
g120
sg61
(lp131
S':'
asbag54
(g75
g56
NtRp132
(dp133
g59
(dp134
sg68
g120
sg61
(lp135
g54
(g55
g56
NtRp136
(dp137
g59
(dp138
g67
I5
ssg68
g132
sg61
(lp139
g54
(g63
g56
NtRp140
(dp141
g59
(dp142
g67
I4
ssg68
Nsg61
(lp143
g54
(g70
g56
NtRp144
(dp145
g59
(dp146
sg68
g140
sg61
(lp147
g54
(g75
g56
NtRp148
(dp149
g59
(dp150
sg68
g144
sg61
(lp151
g54
(g55
g56
NtRp152
(dp153
g59
(dp154
g67
I4
ssg68
g148
sg61
(lp155
S'myapp'
p156
asbasbasbasbasbasbasbag54
(g70
g56
NtRp157
(dp158
g59
(dp159
sg68
g64
sg61
(lp160
g54
(g75
g56
NtRp161
(dp162
g59
(dp163
g79
g80
ssg68
g157
sg61
(lp164
S'body'
p165
asbag54
(g75
g56
NtRp166
(dp167
g59
(dp168
g86
g87
ssg68
g157
sg61
(lp169
S':'
asbag54
(g75
g56
NtRp170
(dp171
g59
(dp172
sg68
g157
sg61
(lp173
g54
(g55
g56
NtRp174
(dp175
g59
(dp176
g67
I5
ssg68
g170
sg61
(lp177
S'<cStringIO.StringO object at 0x03677500>'
p178
asbasbasbag54
(g70
g56
NtRp179
(dp180
g59
(dp181
sg68
g64
sg61
(lp182
g54
(g75
g56
NtRp183
(dp184
g59
(dp185
g79
g80
ssg68
g179
sg61
(lp186
S'client'
p187
asbag54
(g75
g56
NtRp188
(dp189
g59
(dp190
g86
g87
ssg68
g179
sg61
(lp191
S':'
asbag54
(g75
g56
NtRp192
(dp193
g59
(dp194
sg68
g179
sg61
(lp195
g54
(g55
g56
NtRp196
(dp197
g59
(dp198
g67
I5
ssg68
g192
sg61
(lp199
S'127.0.0.1'
p200
asbasbasbag54
(g70
g56
NtRp201
(dp202
g59
(dp203
sg68
g64
sg61
(lp204
g54
(g75
g56
NtRp205
(dp206
g59
(dp207
g79
g80
ssg68
g201
sg61
(lp208
S'controller'
p209
asbag54
(g75
g56
NtRp210
(dp211
g59
(dp212
g86
g87
ssg68
g201
sg61
(lp213
S':'
asbag54
(g75
g56
NtRp214
(dp215
g59
(dp216
sg68
g201
sg61
(lp217
g54
(g55
g56
NtRp218
(dp219
g59
(dp220
g67
I5
ssg68
g214
sg61
(lp221
S'default'
p222
asbasbasbag54
(g70
g56
NtRp223
(dp224
g59
(dp225
sg68
g64
sg61
(lp226
g54
(g75
g56
NtRp227
(dp228
g59
(dp229
g79
g80
ssg68
g223
sg61
(lp230
S'cookies'
p231
asbag54
(g75
g56
NtRp232
(dp233
g59
(dp234
g86
g87
ssg68
g223
sg61
(lp235
S':'
asbag54
(g75
g56
NtRp236
(dp237
g59
(dp238
sg68
g223
sg61
(lp239
g54
(g55
g56
NtRp240
(dp241
g59
(dp242
g67
I5
ssg68
g236
sg61
(lp243
g54
(g63
g56
NtRp244
(dp245
g59
(dp246
g67
I4
ssg68
Nsg61
(lp247
g54
(g70
g56
NtRp248
(dp249
g59
(dp250
sg68
g244
sg61
(lp251
g54
(g75
g56
NtRp252
(dp253
g59
(dp254
g79
g80
ssg68
g248
sg61
(lp255
S'session_id_admin'
p256
asbag54
(g75
g56
NtRp257
(dp258
g59
(dp259
g86
g87
ssg68
g248
sg61
(lp260
S':'
asbag54
(g75
g56
NtRp261
(dp262
g59
(dp263
sg68
g248
sg61
(lp264
g54
(g55
g56
NtRp265
(dp266
g59
(dp267
g67
I4
ssg68
g261
sg61
(lp268
g54
(g63
g56
NtRp269
(dp270
g59
(dp271
g67
I3
ssg68
Nsg61
(lp272
g54
(g70
g56
NtRp273
(dp274
g59
(dp275
sg68
g269
sg61
(lp276
g54
(g75
g56
NtRp277
(dp278
g59
(dp279
g79
g80
ssg68
g273
sg61
(lp280
S'comment'
p281
asbag54
(g75
g56
NtRp282
(dp283
g59
(dp284
g86
g87
ssg68
g273
sg61
(lp285
S':'
asbag54
(g75
g56
NtRp286
(dp287
g59
(dp288
sg68
g273
sg61
(lp289
g54
(g55
g56
NtRp290
(dp291
g59
(dp292
g67
I3
ssg68
g286
sg61
(lp293
S''
asbasbasbag54
(g70
g56
NtRp294
(dp295
g59
(dp296
sg68
g269
sg61
(lp297
g54
(g75
g56
NtRp298
(dp299
g59
(dp300
g79
g80
ssg68
g294
sg61
(lp301
S'domain'
p302
asbag54
(g75
g56
NtRp303
(dp304
g59
(dp305
g86
g87
ssg68
g294
sg61
(lp306
S':'
asbag54
(g75
g56
NtRp307
(dp308
g59
(dp309
sg68
g294
sg61
(lp310
g54
(g55
g56
NtRp311
(dp312
g59
(dp313
g67
I3
ssg68
g307
sg61
(lp314
S''
asbasbasbag54
(g70
g56
NtRp315
(dp316
g59
(dp317
sg68
g269
sg61
(lp318
g54
(g75
g56
NtRp319
(dp320
g59
(dp321
g79
g80
ssg68
g315
sg61
(lp322
S'expires'
p323
asbag54
(g75
g56
NtRp324
(dp325
g59
(dp326
g86
g87
ssg68
g315
sg61
(lp327
S':'
asbag54
(g75
g56
NtRp328
(dp329
g59
(dp330
sg68
g315
sg61
(lp331
g54
(g55
g56
NtRp332
(dp333
g59
(dp334
g67
I3
ssg68
g328
sg61
(lp335
S''
asbasbasbag54
(g70
g56
NtRp336
(dp337
g59
(dp338
sg68
g269
sg61
(lp339
g54
(g75
g56
NtRp340
(dp341
g59
(dp342
g79
g80
ssg68
g336
sg61
(lp343
S'max-age'
p344
asbag54
(g75
g56
NtRp345
(dp346
g59
(dp347
g86
g87
ssg68
g336
sg61
(lp348
S':'
asbag54
(g75
g56
NtRp349
(dp350
g59
(dp351
sg68
g336
sg61
(lp352
g54
(g55
g56
NtRp353
(dp354
g59
(dp355
g67
I3
ssg68
g349
sg61
(lp356
S''
asbasbasbag54
(g70
g56
NtRp357
(dp358
g59
(dp359
sg68
g269
sg61
(lp360
g54
(g75
g56
NtRp361
(dp362
g59
(dp363
g79
g80
ssg68
g357
sg61
(lp364
S'path'
p365
asbag54
(g75
g56
NtRp366
(dp367
g59
(dp368
g86
g87
ssg68
g357
sg61
(lp369
S':'
asbag54
(g75
g56
NtRp370
(dp371
g59
(dp372
sg68
g357
sg61
(lp373
g54
(g55
g56
NtRp374
(dp375
g59
(dp376
g67
I3
ssg68
g370
sg61
(lp377
S''
asbasbasbag54
(g70
g56
NtRp378
(dp379
g59
(dp380
sg68
g269
sg61
(lp381
g54
(g75
g56
NtRp382
(dp383
g59
(dp384
g79
g80
ssg68
g378
sg61
(lp385
S'secure'
p386
asbag54
(g75
g56
NtRp387
(dp388
g59
(dp389
g86
g87
ssg68
g378
sg61
(lp390
S':'
asbag54
(g75
g56
NtRp391
(dp392
g59
(dp393
sg68
g378
sg61
(lp394
g54
(g55
g56
NtRp395
(dp396
g59
(dp397
g67
I3
ssg68
g391
sg61
(lp398
S''
asbasbasbag54
(g70
g56
NtRp399
(dp400
g59
(dp401
sg68
g269
sg61
(lp402
g54
(g75
g56
NtRp403
(dp404
g59
(dp405
g79
g80
ssg68
g399
sg61
(lp406
S'version'
p407
asbag54
(g75
g56
NtRp408
(dp409
g59
(dp410
g86
g87
ssg68
g399
sg61
(lp411
S':'
asbag54
(g75
g56
NtRp412
(dp413
g59
(dp414
sg68
g399
sg61
(lp415
g54
(g55
g56
NtRp416
(dp417
g59
(dp418
g67
I3
ssg68
g412
sg61
(lp419
S''
asbasbasbasbasbasbasbasbasbasbasbag54
(g70
g56
NtRp420
(dp421
g59
(dp422
sg68
g64
sg61
(lp423
g54
(g75
g56
NtRp424
(dp425
g59
(dp426
g79
g80
ssg68
g420
sg61
(lp427
S'env'
p428
asbag54
(g75
g56
NtRp429
(dp430
g59
(dp431
g86
g87
ssg68
g420
sg61
(lp432
S':'
asbag54
(g75
g56
NtRp433
(dp434
g59
(dp435
sg68
g420
sg61
(lp436
g54
(g55
g56
NtRp437
(dp438
g59
(dp439
g67
I5
ssg68
g433
sg61
(lp440
g54
(g63
g56
NtRp441
(dp442
g59
(dp443
g67
I4
ssg68
Nsg61
(lp444
g54
(g70
g56
NtRp445
(dp446
g59
(dp447
sg68
g441
sg61
(lp448
g54
(g75
g56
NtRp449
(dp450
g59
(dp451
g79
g80
ssg68
g445
sg61
(lp452
S'app_folders'
p453
asbag54
(g75
g56
NtRp454
(dp455
g59
(dp456
g86
g87
ssg68
g445
sg61
(lp457
S':'
asbag54
(g75
g56
NtRp458
(dp459
g59
(dp460
sg68
g445
sg61
(lp461
g54
(g55
g56
NtRp462
(dp463
g59
(dp464
g67
I4
ssg68
g458
sg61
(lp465
S"set(['D:\\\\Dropbox\\\\Eclipse\\\\OJDevSourceProject\\\\project\\\\web2py\\\\applications\\\\admin\\\\', 'D:\\\\Dropbox\\\\Eclipse\\\\OJDevSourceProject\\\\project\\\\web2py\\\\applications\\\\OJTest\\\\'])"
p466
asbasbasbag54
(g70
g56
NtRp467
(dp468
g59
(dp469
sg68
g441
sg61
(lp470
g54
(g75
g56
NtRp471
(dp472
g59
(dp473
g79
g80
ssg68
g467
sg61
(lp474
S'applications_parent'
p475
asbag54
(g75
g56
NtRp476
(dp477
g59
(dp478
g86
g87
ssg68
g467
sg61
(lp479
S':'
asbag54
(g75
g56
NtRp480
(dp481
g59
(dp482
sg68
g467
sg61
(lp483
g54
(g55
g56
NtRp484
(dp485
g59
(dp486
g67
I4
ssg68
g480
sg61
(lp487
S'D:\\Dropbox\\Eclipse\\OJDevSourceProject\\project\\web2py'
p488
asbasbasbag54
(g70
g56
NtRp489
(dp490
g59
(dp491
sg68
g441
sg61
(lp492
g54
(g75
g56
NtRp493
(dp494
g59
(dp495
g79
g80
ssg68
g489
sg61
(lp496
S'cmd_args'
p497
asbag54
(g75
g56
NtRp498
(dp499
g59
(dp500
g86
g87
ssg68
g489
sg61
(lp501
S':'
asbag54
(g75
g56
NtRp502
(dp503
g59
(dp504
sg68
g489
sg61
(lp505
g54
(g55
g56
NtRp506
(dp507
g59
(dp508
g67
I4
ssg68
g502
sg61
(lp509
g54
(g63
g56
NtRp510
(dp511
g59
(dp512
g67
I3
ssg68
Nsg61
(lp513
sbasbasbasbag54
(g70
g56
NtRp514
(dp515
g59
(dp516
sg68
g441
sg61
(lp517
g54
(g75
g56
NtRp518
(dp519
g59
(dp520
g79
g80
ssg68
g514
sg61
(lp521
S'cmd_options'
p522
asbag54
(g75
g56
NtRp523
(dp524
g59
(dp525
g86
g87
ssg68
g514
sg61
(lp526
S':'
asbag54
(g75
g56
NtRp527
(dp528
g59
(dp529
sg68
g514
sg61
(lp530
g54
(g55
g56
NtRp531
(dp532
g59
(dp533
g67
I4
ssg68
g527
sg61
(lp534
S"<Values at 0x34009e0: {'verbose': False, 'ip': '127.0.0.1', 'shutdown_timeout': 5, 'taskbar': False, 'nocron': False, 'pid_filename': 'httpserver.pid', 'maxthreads': None, 'softcron': False, 'server_name': 'John-PC', 'bpython': False, 'nogui': False, 'port': 8000, 'extcron': False, 'debuglevel': 30, 'test': None, 'folder': 'D:\\\\Dropbox\\\\Eclipse\\\\OJDevSourceProject\\\\project\\\\web2py', 'config': '', 'import_models': False, 'winservice': '', 'shell': None, 'run': '', 'log_filename': 'httpserver.log', 'args': [''], 'ssl_ca_certificate': None, 'scheduler': None, 'profiler_filename': None, 'ssl_private_key': '', 'password': '<ask>', 'request_queue_size': 5, 'ssl_certificate': '', 'cronjob': False, 'plain': False, 'quiet': False, 'interfaces': None, 'minthreads': None, 'timeout': 10, 'numthreads': None, 'nobanner': False}>"
p535
asbasbasbag54
(g70
g56
NtRp536
(dp537
g59
(dp538
sg68
g441
sg61
(lp539
g54
(g75
g56
NtRp540
(dp541
g59
(dp542
g79
g80
ssg68
g536
sg61
(lp543
S'db_sessions'
p544
asbag54
(g75
g56
NtRp545
(dp546
g59
(dp547
g86
g87
ssg68
g536
sg61
(lp548
S':'
asbag54
(g75
g56
NtRp549
(dp550
g59
(dp551
sg68
g536
sg61
(lp552
g54
(g55
g56
NtRp553
(dp554
g59
(dp555
g67
I4
ssg68
g549
sg61
(lp556
S'set([])'
p557
asbasbasbag54
(g70
g56
NtRp558
(dp559
g59
(dp560
sg68
g441
sg61
(lp561
g54
(g75
g56
NtRp562
(dp563
g59
(dp564
g79
g80
ssg68
g558
sg61
(lp565
S'debugging'
p566
asbag54
(g75
g56
NtRp567
(dp568
g59
(dp569
g86
g87
ssg68
g558
sg61
(lp570
S':'
asbag54
(g75
g56
NtRp571
(dp572
g59
(dp573
sg68
g558
sg61
(lp574
g54
(g55
g56
NtRp575
(dp576
g59
(dp577
g67
I4
ssg68
g571
sg61
(lp578
g97
asbasbasbag54
(g70
g56
NtRp579
(dp580
g59
(dp581
sg68
g441
sg61
(lp582
g54
(g75
g56
NtRp583
(dp584
g59
(dp585
g79
g80
ssg68
g579
sg61
(lp586
S'gluon_parent'
p587
asbag54
(g75
g56
NtRp588
(dp589
g59
(dp590
g86
g87
ssg68
g579
sg61
(lp591
S':'
asbag54
(g75
g56
NtRp592
(dp593
g59
(dp594
sg68
g579
sg61
(lp595
g54
(g55
g56
NtRp596
(dp597
g59
(dp598
g67
I4
ssg68
g592
sg61
(lp599
S'D:\\Dropbox\\Eclipse\\OJDevSourceProject\\project\\web2py'
p600
asbasbasbag54
(g70
g56
NtRp601
(dp602
g59
(dp603
sg68
g441
sg61
(lp604
g54
(g75
g56
NtRp605
(dp606
g59
(dp607
g79
g80
ssg68
g601
sg61
(lp608
S'http_accept'
p609
asbag54
(g75
g56
NtRp610
(dp611
g59
(dp612
g86
g87
ssg68
g601
sg61
(lp613
S':'
asbag54
(g75
g56
NtRp614
(dp615
g59
(dp616
sg68
g601
sg61
(lp617
g54
(g55
g56
NtRp618
(dp619
g59
(dp620
g67
I4
ssg68
g614
sg61
(lp621
S'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8'
p622
asbasbasbag54
(g70
g56
NtRp623
(dp624
g59
(dp625
sg68
g441
sg61
(lp626
g54
(g75
g56
NtRp627
(dp628
g59
(dp629
g79
g80
ssg68
g623
sg61
(lp630
S'http_accept_charset'
p631
asbag54
(g75
g56
NtRp632
(dp633
g59
(dp634
g86
g87
ssg68
g623
sg61
(lp635
S':'
asbag54
(g75
g56
NtRp636
(dp637
g59
(dp638
sg68
g623
sg61
(lp639
g54
(g55
g56
NtRp640
(dp641
g59
(dp642
g67
I4
ssg68
g636
sg61
(lp643
S'ISO-8859-1,utf-8;q=0.7,*;q=0.7'
p644
asbasbasbag54
(g70
g56
NtRp645
(dp646
g59
(dp647
sg68
g441
sg61
(lp648
g54
(g75
g56
NtRp649
(dp650
g59
(dp651
g79
g80
ssg68
g645
sg61
(lp652
S'http_accept_encoding'
p653
asbag54
(g75
g56
NtRp654
(dp655
g59
(dp656
g86
g87
ssg68
g645
sg61
(lp657
S':'
asbag54
(g75
g56
NtRp658
(dp659
g59
(dp660
sg68
g645
sg61
(lp661
g54
(g55
g56
NtRp662
(dp663
g59
(dp664
g67
I4
ssg68
g658
sg61
(lp665
S'gzip, deflate'
p666
asbasbasbag54
(g70
g56
NtRp667
(dp668
g59
(dp669
sg68
g441
sg61
(lp670
g54
(g75
g56
NtRp671
(dp672
g59
(dp673
g79
g80
ssg68
g667
sg61
(lp674
S'http_accept_language'
p675
asbag54
(g75
g56
NtRp676
(dp677
g59
(dp678
g86
g87
ssg68
g667
sg61
(lp679
S':'
asbag54
(g75
g56
NtRp680
(dp681
g59
(dp682
sg68
g667
sg61
(lp683
g54
(g55
g56
NtRp684
(dp685
g59
(dp686
g67
I4
ssg68
g680
sg61
(lp687
S'en-us,en;q=0.5'
p688
asbasbasbag54
(g70
g56
NtRp689
(dp690
g59
(dp691
sg68
g441
sg61
(lp692
g54
(g75
g56
NtRp693
(dp694
g59
(dp695
g79
g80
ssg68
g689
sg61
(lp696
S'http_connection'
p697
asbag54
(g75
g56
NtRp698
(dp699
g59
(dp700
g86
g87
ssg68
g689
sg61
(lp701
S':'
asbag54
(g75
g56
NtRp702
(dp703
g59
(dp704
sg68
g689
sg61
(lp705
g54
(g55
g56
NtRp706
(dp707
g59
(dp708
g67
I4
ssg68
g702
sg61
(lp709
S'keep-alive'
p710
asbasbasbag54
(g70
g56
NtRp711
(dp712
g59
(dp713
sg68
g441
sg61
(lp714
g54
(g75
g56
NtRp715
(dp716
g59
(dp717
g79
g80
ssg68
g711
sg61
(lp718
S'http_cookie'
p719
asbag54
(g75
g56
NtRp720
(dp721
g59
(dp722
g86
g87
ssg68
g711
sg61
(lp723
S':'
asbag54
(g75
g56
NtRp724
(dp725
g59
(dp726
sg68
g711
sg61
(lp727
g54
(g55
g56
NtRp728
(dp729
g59
(dp730
g67
I4
ssg68
g724
sg61
(lp731
S'session_id_admin=127.0.0.1-ffdc960a-67cc-4480-9b51-46aacf1c0196'
p732
asbasbasbag54
(g70
g56
NtRp733
(dp734
g59
(dp735
sg68
g441
sg61
(lp736
g54
(g75
g56
NtRp737
(dp738
g59
(dp739
g79
g80
ssg68
g733
sg61
(lp740
S'http_dnt'
p741
asbag54
(g75
g56
NtRp742
(dp743
g59
(dp744
g86
g87
ssg68
g733
sg61
(lp745
S':'
asbag54
(g75
g56
NtRp746
(dp747
g59
(dp748
sg68
g733
sg61
(lp749
g54
(g55
g56
NtRp750
(dp751
g59
(dp752
g67
I4
ssg68
g746
sg61
(lp753
S'1'
asbasbasbag54
(g70
g56
NtRp754
(dp755
g59
(dp756
sg68
g441
sg61
(lp757
g54
(g75
g56
NtRp758
(dp759
g59
(dp760
g79
g80
ssg68
g754
sg61
(lp761
S'http_host'
p762
asbag54
(g75
g56
NtRp763
(dp764
g59
(dp765
g86
g87
ssg68
g754
sg61
(lp766
S':'
asbag54
(g75
g56
NtRp767
(dp768
g59
(dp769
sg68
g754
sg61
(lp770
g54
(g55
g56
NtRp771
(dp772
g59
(dp773
g67
I4
ssg68
g767
sg61
(lp774
S'127.0.0.1:8000'
p775
asbasbasbag54
(g70
g56
NtRp776
(dp777
g59
(dp778
sg68
g441
sg61
(lp779
g54
(g75
g56
NtRp780
(dp781
g59
(dp782
g79
g80
ssg68
g776
sg61
(lp783
S'http_referer'
p784
asbag54
(g75
g56
NtRp785
(dp786
g59
(dp787
g86
g87
ssg68
g776
sg61
(lp788
S':'
asbag54
(g75
g56
NtRp789
(dp790
g59
(dp791
sg68
g776
sg61
(lp792
g54
(g55
g56
NtRp793
(dp794
g59
(dp795
g67
I4
ssg68
g789
sg61
(lp796
S'http://127.0.0.1:8000/admin/default/index?send=%2Fadmin%2Fdefault%2Fdesign%2Fmyapp'
p797
asbasbasbag54
(g70
g56
NtRp798
(dp799
g59
(dp800
sg68
g441
sg61
(lp801
g54
(g75
g56
NtRp802
(dp803
g59
(dp804
g79
g80
ssg68
g798
sg61
(lp805
S'http_user_agent'
p806
asbag54
(g75
g56
NtRp807
(dp808
g59
(dp809
g86
g87
ssg68
g798
sg61
(lp810
S':'
asbag54
(g75
g56
NtRp811
(dp812
g59
(dp813
sg68
g798
sg61
(lp814
g54
(g55
g56
NtRp815
(dp816
g59
(dp817
g67
I4
ssg68
g811
sg61
(lp818
S'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:8.0.1) Gecko/20100101 Firefox/8.0.1'
p819
asbasbasbag54
(g70
g56
NtRp820
(dp821
g59
(dp822
sg68
g441
sg61
(lp823
g54
(g75
g56
NtRp824
(dp825
g59
(dp826
g79
g80
ssg68
g820
sg61
(lp827
S'is_jython'
p828
asbag54
(g75
g56
NtRp829
(dp830
g59
(dp831
g86
g87
ssg68
g820
sg61
(lp832
S':'
asbag54
(g75
g56
NtRp833
(dp834
g59
(dp835
sg68
g820
sg61
(lp836
g54
(g55
g56
NtRp837
(dp838
g59
(dp839
g67
I4
ssg68
g833
sg61
(lp840
g97
asbasbasbag54
(g70
g56
NtRp841
(dp842
g59
(dp843
sg68
g441
sg61
(lp844
g54
(g75
g56
NtRp845
(dp846
g59
(dp847
g79
g80
ssg68
g841
sg61
(lp848
S'path_info'
p849
asbag54
(g75
g56
NtRp850
(dp851
g59
(dp852
g86
g87
ssg68
g841
sg61
(lp853
S':'
asbag54
(g75
g56
NtRp854
(dp855
g59
(dp856
sg68
g841
sg61
(lp857
g54
(g55
g56
NtRp858
(dp859
g59
(dp860
g67
I4
ssg68
g854
sg61
(lp861
S'/admin/default/design/myapp'
p862
asbasbasbag54
(g70
g56
NtRp863
(dp864
g59
(dp865
sg68
g441
sg61
(lp866
g54
(g75
g56
NtRp867
(dp868
g59
(dp869
g79
g80
ssg68
g863
sg61
(lp870
S'query_string'
p871
asbag54
(g75
g56
NtRp872
(dp873
g59
(dp874
g86
g87
ssg68
g863
sg61
(lp875
S':'
asbag54
(g75
g56
NtRp876
(dp877
g59
(dp878
sg68
g863
sg61
(lp879
g54
(g55
g56
NtRp880
(dp881
g59
(dp882
g67
I4
ssg68
g876
sg61
(lp883
S''
asbasbasbag54
(g70
g56
NtRp884
(dp885
g59
(dp886
sg68
g441
sg61
(lp887
g54
(g75
g56
NtRp888
(dp889
g59
(dp890
g79
g80
ssg68
g884
sg61
(lp891
S'remote_addr'
p892
asbag54
(g75
g56
NtRp893
(dp894
g59
(dp895
g86
g87
ssg68
g884
sg61
(lp896
S':'
asbag54
(g75
g56
NtRp897
(dp898
g59
(dp899
sg68
g884
sg61
(lp900
g54
(g55
g56
NtRp901
(dp902
g59
(dp903
g67
I4
ssg68
g897
sg61
(lp904
g200
asbasbasbag54
(g70
g56
NtRp905
(dp906
g59
(dp907
sg68
g441
sg61
(lp908
g54
(g75
g56
NtRp909
(dp910
g59
(dp911
g79
g80
ssg68
g905
sg61
(lp912
S'remote_port'
p913
asbag54
(g75
g56
NtRp914
(dp915
g59
(dp916
g86
g87
ssg68
g905
sg61
(lp917
S':'
asbag54
(g75
g56
NtRp918
(dp919
g59
(dp920
sg68
g905
sg61
(lp921
g54
(g55
g56
NtRp922
(dp923
g59
(dp924
g67
I4
ssg68
g918
sg61
(lp925
S'52697'
p926
asbasbasbag54
(g70
g56
NtRp927
(dp928
g59
(dp929
sg68
g441
sg61
(lp930
g54
(g75
g56
NtRp931
(dp932
g59
(dp933
g79
g80
ssg68
g927
sg61
(lp934
S'request_method'
p935
asbag54
(g75
g56
NtRp936
(dp937
g59
(dp938
g86
g87
ssg68
g927
sg61
(lp939
S':'
asbag54
(g75
g56
NtRp940
(dp941
g59
(dp942
sg68
g927
sg61
(lp943
g54
(g55
g56
NtRp944
(dp945
g59
(dp946
g67
I4
ssg68
g940
sg61
(lp947
S'GET'
p948
asbasbasbag54
(g70
g56
NtRp949
(dp950
g59
(dp951
sg68
g441
sg61
(lp952
g54
(g75
g56
NtRp953
(dp954
g59
(dp955
g79
g80
ssg68
g949
sg61
(lp956
S'request_uri'
p957
asbag54
(g75
g56
NtRp958
(dp959
g59
(dp960
g86
g87
ssg68
g949
sg61
(lp961
S':'
asbag54
(g75
g56
NtRp962
(dp963
g59
(dp964
sg68
g949
sg61
(lp965
g54
(g55
g56
NtRp966
(dp967
g59
(dp968
g67
I4
ssg68
g962
sg61
(lp969
g862
asbasbasbag54
(g70
g56
NtRp970
(dp971
g59
(dp972
sg68
g441
sg61
(lp973
g54
(g75
g56
NtRp974
(dp975
g59
(dp976
g79
g80
ssg68
g970
sg61
(lp977
S'script_name'
p978
asbag54
(g75
g56
NtRp979
(dp980
g59
(dp981
g86
g87
ssg68
g970
sg61
(lp982
S':'
asbag54
(g75
g56
NtRp983
(dp984
g59
(dp985
sg68
g970
sg61
(lp986
g54
(g55
g56
NtRp987
(dp988
g59
(dp989
g67
I4
ssg68
g983
sg61
(lp990
S''
asbasbasbag54
(g70
g56
NtRp991
(dp992
g59
(dp993
sg68
g441
sg61
(lp994
g54
(g75
g56
NtRp995
(dp996
g59
(dp997
g79
g80
ssg68
g991
sg61
(lp998
S'server_name'
p999
asbag54
(g75
g56
NtRp1000
(dp1001
g59
(dp1002
g86
g87
ssg68
g991
sg61
(lp1003
S':'
asbag54
(g75
g56
NtRp1004
(dp1005
g59
(dp1006
sg68
g991
sg61
(lp1007
g54
(g55
g56
NtRp1008
(dp1009
g59
(dp1010
g67
I4
ssg68
g1004
sg61
(lp1011
S'John-PC'
p1012
asbasbasbag54
(g70
g56
NtRp1013
(dp1014
g59
(dp1015
sg68
g441
sg61
(lp1016
g54
(g75
g56
NtRp1017
(dp1018
g59
(dp1019
g79
g80
ssg68
g1013
sg61
(lp1020
S'server_port'
p1021
asbag54
(g75
g56
NtRp1022
(dp1023
g59
(dp1024
g86
g87
ssg68
g1013
sg61
(lp1025
S':'
asbag54
(g75
g56
NtRp1026
(dp1027
g59
(dp1028
sg68
g1013
sg61
(lp1029
g54
(g55
g56
NtRp1030
(dp1031
g59
(dp1032
g67
I4
ssg68
g1026
sg61
(lp1033
S'8000'
p1034
asbasbasbag54
(g70
g56
NtRp1035
(dp1036
g59
(dp1037
sg68
g441
sg61
(lp1038
g54
(g75
g56
NtRp1039
(dp1040
g59
(dp1041
g79
g80
ssg68
g1035
sg61
(lp1042
S'server_protocol'
p1043
asbag54
(g75
g56
NtRp1044
(dp1045
g59
(dp1046
g86
g87
ssg68
g1035
sg61
(lp1047
S':'
asbag54
(g75
g56
NtRp1048
(dp1049
g59
(dp1050
sg68
g1035
sg61
(lp1051
g54
(g55
g56
NtRp1052
(dp1053
g59
(dp1054
g67
I4
ssg68
g1048
sg61
(lp1055
S'HTTP/1.1'
p1056
asbasbasbag54
(g70
g56
NtRp1057
(dp1058
g59
(dp1059
sg68
g441
sg61
(lp1060
g54
(g75
g56
NtRp1061
(dp1062
g59
(dp1063
g79
g80
ssg68
g1057
sg61
(lp1064
S'server_software'
p1065
asbag54
(g75
g56
NtRp1066
(dp1067
g59
(dp1068
g86
g87
ssg68
g1057
sg61
(lp1069
S':'
asbag54
(g75
g56
NtRp1070
(dp1071
g59
(dp1072
sg68
g1057
sg61
(lp1073
g54
(g55
g56
NtRp1074
(dp1075
g59
(dp1076
g67
I4
ssg68
g1070
sg61
(lp1077
S'Rocket 1.2.4'
p1078
asbasbasbag54
(g70
g56
NtRp1079
(dp1080
g59
(dp1081
sg68
g441
sg61
(lp1082
g54
(g75
g56
NtRp1083
(dp1084
g59
(dp1085
g79
g80
ssg68
g1079
sg61
(lp1086
S'web2py_crontype'
p1087
asbag54
(g75
g56
NtRp1088
(dp1089
g59
(dp1090
g86
g87
ssg68
g1079
sg61
(lp1091
S':'
asbag54
(g75
g56
NtRp1092
(dp1093
g59
(dp1094
sg68
g1079
sg61
(lp1095
g54
(g55
g56
NtRp1096
(dp1097
g59
(dp1098
g67
I4
ssg68
g1092
sg61
(lp1099
S'hard'
p1100
asbasbasbag54
(g70
g56
NtRp1101
(dp1102
g59
(dp1103
sg68
g441
sg61
(lp1104
g54
(g75
g56
NtRp1105
(dp1106
g59
(dp1107
g79
g80
ssg68
g1101
sg61
(lp1108
S'web2py_original_uri'
p1109
asbag54
(g75
g56
NtRp1110
(dp1111
g59
(dp1112
g86
g87
ssg68
g1101
sg61
(lp1113
S':'
asbag54
(g75
g56
NtRp1114
(dp1115
g59
(dp1116
sg68
g1101
sg61
(lp1117
g54
(g55
g56
NtRp1118
(dp1119
g59
(dp1120
g67
I4
ssg68
g1114
sg61
(lp1121
S'/admin/default/design/myapp'
p1122
asbasbasbag54
(g70
g56
NtRp1123
(dp1124
g59
(dp1125
sg68
g441
sg61
(lp1126
g54
(g75
g56
NtRp1127
(dp1128
g59
(dp1129
g79
g80
ssg68
g1123
sg61
(lp1130
S'web2py_path'
p1131
asbag54
(g75
g56
NtRp1132
(dp1133
g59
(dp1134
g86
g87
ssg68
g1123
sg61
(lp1135
S':'
asbag54
(g75
g56
NtRp1136
(dp1137
g59
(dp1138
sg68
g1123
sg61
(lp1139
g54
(g55
g56
NtRp1140
(dp1141
g59
(dp1142
g67
I4
ssg68
g1136
sg61
(lp1143
g488
asbasbasbag54
(g70
g56
NtRp1144
(dp1145
g59
(dp1146
sg68
g441
sg61
(lp1147
g54
(g75
g56
NtRp1148
(dp1149
g59
(dp1150
g79
g80
ssg68
g1144
sg61
(lp1151
S'web2py_version'
p1152
asbag54
(g75
g56
NtRp1153
(dp1154
g59
(dp1155
g86
g87
ssg68
g1144
sg61
(lp1156
S':'
asbag54
(g75
g56
NtRp1157
(dp1158
g59
(dp1159
sg68
g1144
sg61
(lp1160
g54
(g55
g56
NtRp1161
(dp1162
g59
(dp1163
g67
I4
ssg68
g1157
sg61
(lp1164
g54
(g63
g56
NtRp1165
(dp1166
g59
(dp1167
g67
I3
ssg68
Nsg61
(lp1168
g54
(g70
g56
NtRp1169
(dp1170
g59
(dp1171
sg68
g1165
sg61
(lp1172
g54
(g75
g56
NtRp1173
(dp1174
g59
(dp1175
sg68
g1169
sg61
(lp1176
g54
(g55
g56
NtRp1177
(dp1178
g59
(dp1179
g67
I3
ssg68
g1173
sg61
(lp1180
S'1'
asbasbasbag54
(g70
g56
NtRp1181
(dp1182
g59
(dp1183
sg68
g1165
sg61
(lp1184
g54
(g75
g56
NtRp1185
(dp1186
g59
(dp1187
sg68
g1181
sg61
(lp1188
g54
(g55
g56
NtRp1189
(dp1190
g59
(dp1191
g67
I3
ssg68
g1185
sg61
(lp1192
S'99'
p1193
asbasbasbag54
(g70
g56
NtRp1194
(dp1195
g59
(dp1196
sg68
g1165
sg61
(lp1197
g54
(g75
g56
NtRp1198
(dp1199
g59
(dp1200
sg68
g1194
sg61
(lp1201
g54
(g55
g56
NtRp1202
(dp1203
g59
(dp1204
g67
I3
ssg68
g1198
sg61
(lp1205
S'2'
asbasbasbag54
(g70
g56
NtRp1206
(dp1207
g59
(dp1208
sg68
g1165
sg61
(lp1209
g54
(g75
g56
NtRp1210
(dp1211
g59
(dp1212
sg68
g1206
sg61
(lp1213
g54
(g55
g56
NtRp1214
(dp1215
g59
(dp1216
g67
I3
ssg68
g1210
sg61
(lp1217
S'datetime.datetime(2011, 9, 26, 6, 55, 33)'
p1218
asbasbasbag54
(g70
g56
NtRp1219
(dp1220
g59
(dp1221
sg68
g1165
sg61
(lp1222
g54
(g75
g56
NtRp1223
(dp1224
g59
(dp1225
sg68
g1219
sg61
(lp1226
g54
(g55
g56
NtRp1227
(dp1228
g59
(dp1229
g67
I3
ssg68
g1223
sg61
(lp1230
S'stable'
p1231
asbasbasbasbasbasbasbag54
(g70
g56
NtRp1232
(dp1233
g59
(dp1234
sg68
g441
sg61
(lp1235
g54
(g75
g56
NtRp1236
(dp1237
g59
(dp1238
g79
g80
ssg68
g1232
sg61
(lp1239
S'wsgi_errors'
p1240
asbag54
(g75
g56
NtRp1241
(dp1242
g59
(dp1243
g86
g87
ssg68
g1232
sg61
(lp1244
S':'
asbag54
(g75
g56
NtRp1245
(dp1246
g59
(dp1247
sg68
g1232
sg61
(lp1248
g54
(g55
g56
NtRp1249
(dp1250
g59
(dp1251
g67
I4
ssg68
g1245
sg61
(lp1252
S"<open file '<stderr>', mode 'w' at 0x004800B0>"
p1253
asbasbasbag54
(g70
g56
NtRp1254
(dp1255
g59
(dp1256
sg68
g441
sg61
(lp1257
g54
(g75
g56
NtRp1258
(dp1259
g59
(dp1260
g79
g80
ssg68
g1254
sg61
(lp1261
S'wsgi_file_wrapper'
p1262
asbag54
(g75
g56
NtRp1263
(dp1264
g59
(dp1265
g86
g87
ssg68
g1254
sg61
(lp1266
S':'
asbag54
(g75
g56
NtRp1267
(dp1268
g59
(dp1269
sg68
g1254
sg61
(lp1270
g54
(g55
g56
NtRp1271
(dp1272
g59
(dp1273
g67
I4
ssg68
g1267
sg61
(lp1274
S'<class wsgiref.util.FileWrapper at 0x033242A0>'
p1275
asbasbasbag54
(g70
g56
NtRp1276
(dp1277
g59
(dp1278
sg68
g441
sg61
(lp1279
g54
(g75
g56
NtRp1280
(dp1281
g59
(dp1282
g79
g80
ssg68
g1276
sg61
(lp1283
S'wsgi_input'
p1284
asbag54
(g75
g56
NtRp1285
(dp1286
g59
(dp1287
g86
g87
ssg68
g1276
sg61
(lp1288
S':'
asbag54
(g75
g56
NtRp1289
(dp1290
g59
(dp1291
sg68
g1276
sg61
(lp1292
g54
(g55
g56
NtRp1293
(dp1294
g59
(dp1295
g67
I4
ssg68
g1289
sg61
(lp1296
S'<socket._fileobject object at 0x08511EB0>'
p1297
asbasbasbag54
(g70
g56
NtRp1298
(dp1299
g59
(dp1300
sg68
g441
sg61
(lp1301
g54
(g75
g56
NtRp1302
(dp1303
g59
(dp1304
g79
g80
ssg68
g1298
sg61
(lp1305
S'wsgi_multiprocess'
p1306
asbag54
(g75
g56
NtRp1307
(dp1308
g59
(dp1309
g86
g87
ssg68
g1298
sg61
(lp1310
S':'
asbag54
(g75
g56
NtRp1311
(dp1312
g59
(dp1313
sg68
g1298
sg61
(lp1314
g54
(g55
g56
NtRp1315
(dp1316
g59
(dp1317
g67
I4
ssg68
g1311
sg61
(lp1318
g97
asbasbasbag54
(g70
g56
NtRp1319
(dp1320
g59
(dp1321
sg68
g441
sg61
(lp1322
g54
(g75
g56
NtRp1323
(dp1324
g59
(dp1325
g79
g80
ssg68
g1319
sg61
(lp1326
S'wsgi_multithread'
p1327
asbag54
(g75
g56
NtRp1328
(dp1329
g59
(dp1330
g86
g87
ssg68
g1319
sg61
(lp1331
S':'
asbag54
(g75
g56
NtRp1332
(dp1333
g59
(dp1334
sg68
g1319
sg61
(lp1335
g54
(g55
g56
NtRp1336
(dp1337
g59
(dp1338
g67
I4
ssg68
g1332
sg61
(lp1339
S'True'
p1340
asbasbasbag54
(g70
g56
NtRp1341
(dp1342
g59
(dp1343
sg68
g441
sg61
(lp1344
g54
(g75
g56
NtRp1345
(dp1346
g59
(dp1347
g79
g80
ssg68
g1341
sg61
(lp1348
S'wsgi_run_once'
p1349
asbag54
(g75
g56
NtRp1350
(dp1351
g59
(dp1352
g86
g87
ssg68
g1341
sg61
(lp1353
S':'
asbag54
(g75
g56
NtRp1354
(dp1355
g59
(dp1356
sg68
g1341
sg61
(lp1357
g54
(g55
g56
NtRp1358
(dp1359
g59
(dp1360
g67
I4
ssg68
g1354
sg61
(lp1361
g97
asbasbasbag54
(g70
g56
NtRp1362
(dp1363
g59
(dp1364
sg68
g441
sg61
(lp1365
g54
(g75
g56
NtRp1366
(dp1367
g59
(dp1368
g79
g80
ssg68
g1362
sg61
(lp1369
S'wsgi_url_scheme'
p1370
asbag54
(g75
g56
NtRp1371
(dp1372
g59
(dp1373
g86
g87
ssg68
g1362
sg61
(lp1374
S':'
asbag54
(g75
g56
NtRp1375
(dp1376
g59
(dp1377
sg68
g1362
sg61
(lp1378
g54
(g55
g56
NtRp1379
(dp1380
g59
(dp1381
g67
I4
ssg68
g1375
sg61
(lp1382
S'http'
p1383
asbasbasbag54
(g70
g56
NtRp1384
(dp1385
g59
(dp1386
sg68
g441
sg61
(lp1387
g54
(g75
g56
NtRp1388
(dp1389
g59
(dp1390
g79
g80
ssg68
g1384
sg61
(lp1391
S'wsgi_version'
p1392
asbag54
(g75
g56
NtRp1393
(dp1394
g59
(dp1395
g86
g87
ssg68
g1384
sg61
(lp1396
S':'
asbag54
(g75
g56
NtRp1397
(dp1398
g59
(dp1399
sg68
g1384
sg61
(lp1400
g54
(g55
g56
NtRp1401
(dp1402
g59
(dp1403
g67
I4
ssg68
g1397
sg61
(lp1404
g54
(g63
g56
NtRp1405
(dp1406
g59
(dp1407
g67
I3
ssg68
Nsg61
(lp1408
g54
(g70
g56
NtRp1409
(dp1410
g59
(dp1411
sg68
g1405
sg61
(lp1412
g54
(g75
g56
NtRp1413
(dp1414
g59
(dp1415
sg68
g1409
sg61
(lp1416
g54
(g55
g56
NtRp1417
(dp1418
g59
(dp1419
g67
I3
ssg68
g1413
sg61
(lp1420
S'1'
asbasbasbag54
(g70
g56
NtRp1421
(dp1422
g59
(dp1423
sg68
g1405
sg61
(lp1424
g54
(g75
g56
NtRp1425
(dp1426
g59
(dp1427
sg68
g1421
sg61
(lp1428
g54
(g55
g56
NtRp1429
(dp1430
g59
(dp1431
g67
I3
ssg68
g1425
sg61
(lp1432
S'0'
asbasbasbasbasbasbasbasbasbasbasbag54
(g70
g56
NtRp1433
(dp1434
g59
(dp1435
sg68
g64
sg61
(lp1436
g54
(g75
g56
NtRp1437
(dp1438
g59
(dp1439
g79
g80
ssg68
g1433
sg61
(lp1440
S'extension'
p1441
asbag54
(g75
g56
NtRp1442
(dp1443
g59
(dp1444
g86
g87
ssg68
g1433
sg61
(lp1445
S':'
asbag54
(g75
g56
NtRp1446
(dp1447
g59
(dp1448
sg68
g1433
sg61
(lp1449
g54
(g55
g56
NtRp1450
(dp1451
g59
(dp1452
g67
I5
ssg68
g1446
sg61
(lp1453
S'html'
p1454
asbasbasbag54
(g70
g56
NtRp1455
(dp1456
g59
(dp1457
sg68
g64
sg61
(lp1458
g54
(g75
g56
NtRp1459
(dp1460
g59
(dp1461
g79
g80
ssg68
g1455
sg61
(lp1462
S'folder'
p1463
asbag54
(g75
g56
NtRp1464
(dp1465
g59
(dp1466
g86
g87
ssg68
g1455
sg61
(lp1467
S':'
asbag54
(g75
g56
NtRp1468
(dp1469
g59
(dp1470
sg68
g1455
sg61
(lp1471
g54
(g55
g56
NtRp1472
(dp1473
g59
(dp1474
g67
I5
ssg68
g1468
sg61
(lp1475
S'D:\\Dropbox\\Eclipse\\OJDevSourceProject\\project\\web2py\\applications\\admin\\'
p1476
asbasbasbag54
(g70
g56
NtRp1477
(dp1478
g59
(dp1479
sg68
g64
sg61
(lp1480
g54
(g75
g56
NtRp1481
(dp1482
g59
(dp1483
g79
g80
ssg68
g1477
sg61
(lp1484
S'function'
p1485
asbag54
(g75
g56
NtRp1486
(dp1487
g59
(dp1488
g86
g87
ssg68
g1477
sg61
(lp1489
S':'
asbag54
(g75
g56
NtRp1490
(dp1491
g59
(dp1492
sg68
g1477
sg61
(lp1493
g54
(g55
g56
NtRp1494
(dp1495
g59
(dp1496
g67
I5
ssg68
g1490
sg61
(lp1497
S'design'
p1498
asbasbasbag54
(g70
g56
NtRp1499
(dp1500
g59
(dp1501
sg68
g64
sg61
(lp1502
g54
(g75
g56
NtRp1503
(dp1504
g59
(dp1505
g79
g80
ssg68
g1499
sg61
(lp1506
S'get_vars'
p1507
asbag54
(g75
g56
NtRp1508
(dp1509
g59
(dp1510
g86
g87
ssg68
g1499
sg61
(lp1511
S':'
asbag54
(g75
g56
NtRp1512
(dp1513
g59
(dp1514
sg68
g1499
sg61
(lp1515
g54
(g55
g56
NtRp1516
(dp1517
g59
(dp1518
g67
I5
ssg68
g1512
sg61
(lp1519
g54
(g63
g56
NtRp1520
(dp1521
g59
(dp1522
g67
I4
ssg68
Nsg61
(lp1523
sbasbasbasbag54
(g70
g56
NtRp1524
(dp1525
g59
(dp1526
sg68
g64
sg61
(lp1527
g54
(g75
g56
NtRp1528
(dp1529
g59
(dp1530
g79
g80
ssg68
g1524
sg61
(lp1531
S'global_settings'
p1532
asbag54
(g75
g56
NtRp1533
(dp1534
g59
(dp1535
g86
g87
ssg68
g1524
sg61
(lp1536
S':'
asbag54
(g75
g56
NtRp1537
(dp1538
g59
(dp1539
sg68
g1524
sg61
(lp1540
g54
(g55
g56
NtRp1541
(dp1542
g59
(dp1543
g67
I5
ssg68
g1537
sg61
(lp1544
g54
(g63
g56
NtRp1545
(dp1546
g59
(dp1547
g67
I4
ssg68
Nsg61
(lp1548
g54
(g70
g56
NtRp1549
(dp1550
g59
(dp1551
sg68
g1545
sg61
(lp1552
g54
(g75
g56
NtRp1553
(dp1554
g59
(dp1555
g79
g80
ssg68
g1549
sg61
(lp1556
g453
asbag54
(g75
g56
NtRp1557
(dp1558
g59
(dp1559
g86
g87
ssg68
g1549
sg61
(lp1560
S':'
asbag54
(g75
g56
NtRp1561
(dp1562
g59
(dp1563
sg68
g1549
sg61
(lp1564
g54
(g55
g56
NtRp1565
(dp1566
g59
(dp1567
g67
I4
ssg68
g1561
sg61
(lp1568
S"set(['D:\\\\Dropbox\\\\Eclipse\\\\OJDevSourceProject\\\\project\\\\web2py\\\\applications\\\\admin\\\\', 'D:\\\\Dropbox\\\\Eclipse\\\\OJDevSourceProject\\\\project\\\\web2py\\\\applications\\\\OJTest\\\\'])"
p1569
asbasbasbag54
(g70
g56
NtRp1570
(dp1571
g59
(dp1572
sg68
g1545
sg61
(lp1573
g54
(g75
g56
NtRp1574
(dp1575
g59
(dp1576
g79
g80
ssg68
g1570
sg61
(lp1577
g475
asbag54
(g75
g56
NtRp1578
(dp1579
g59
(dp1580
g86
g87
ssg68
g1570
sg61
(lp1581
S':'
asbag54
(g75
g56
NtRp1582
(dp1583
g59
(dp1584
sg68
g1570
sg61
(lp1585
g54
(g55
g56
NtRp1586
(dp1587
g59
(dp1588
g67
I4
ssg68
g1582
sg61
(lp1589
g488
asbasbasbag54
(g70
g56
NtRp1590
(dp1591
g59
(dp1592
sg68
g1545
sg61
(lp1593
g54
(g75
g56
NtRp1594
(dp1595
g59
(dp1596
g79
g80
ssg68
g1590
sg61
(lp1597
g497
asbag54
(g75
g56
NtRp1598
(dp1599
g59
(dp1600
g86
g87
ssg68
g1590
sg61
(lp1601
S':'
asbag54
(g75
g56
NtRp1602
(dp1603
g59
(dp1604
sg68
g1590
sg61
(lp1605
g54
(g55
g56
NtRp1606
(dp1607
g59
(dp1608
g67
I4
ssg68
g1602
sg61
(lp1609
g54
(g63
g56
NtRp1610
(dp1611
g59
(dp1612
g67
I3
ssg68
Nsg61
(lp1613
sbasbasbasbag54
(g70
g56
NtRp1614
(dp1615
g59
(dp1616
sg68
g1545
sg61
(lp1617
g54
(g75
g56
NtRp1618
(dp1619
g59
(dp1620
g79
g80
ssg68
g1614
sg61
(lp1621
g522
asbag54
(g75
g56
NtRp1622
(dp1623
g59
(dp1624
g86
g87
ssg68
g1614
sg61
(lp1625
S':'
asbag54
(g75
g56
NtRp1626
(dp1627
g59
(dp1628
sg68
g1614
sg61
(lp1629
g54
(g55
g56
NtRp1630
(dp1631
g59
(dp1632
g67
I4
ssg68
g1626
sg61
(lp1633
S"<Values at 0x34009e0: {'verbose': False, 'ip': '127.0.0.1', 'shutdown_timeout': 5, 'taskbar': False, 'nocron': False, 'pid_filename': 'httpserver.pid', 'maxthreads': None, 'softcron': False, 'server_name': 'John-PC', 'bpython': False, 'nogui': False, 'port': 8000, 'extcron': False, 'debuglevel': 30, 'test': None, 'folder': 'D:\\\\Dropbox\\\\Eclipse\\\\OJDevSourceProject\\\\project\\\\web2py', 'config': '', 'import_models': False, 'winservice': '', 'shell': None, 'run': '', 'log_filename': 'httpserver.log', 'args': [''], 'ssl_ca_certificate': None, 'scheduler': None, 'profiler_filename': None, 'ssl_private_key': '', 'password': '<ask>', 'request_queue_size': 5, 'ssl_certificate': '', 'cronjob': False, 'plain': False, 'quiet': False, 'interfaces': None, 'minthreads': None, 'timeout': 10, 'numthreads': None, 'nobanner': False}>"
p1634
asbasbasbag54
(g70
g56
NtRp1635
(dp1636
g59
(dp1637
sg68
g1545
sg61
(lp1638
g54
(g75
g56
NtRp1639
(dp1640
g59
(dp1641
g79
g80
ssg68
g1635
sg61
(lp1642
g544
asbag54
(g75
g56
NtRp1643
(dp1644
g59
(dp1645
g86
g87
ssg68
g1635
sg61
(lp1646
S':'
asbag54
(g75
g56
NtRp1647
(dp1648
g59
(dp1649
sg68
g1635
sg61
(lp1650
g54
(g55
g56
NtRp1651
(dp1652
g59
(dp1653
g67
I4
ssg68
g1647
sg61
(lp1654
S'set([])'
p1655
asbasbasbag54
(g70
g56
NtRp1656
(dp1657
g59
(dp1658
sg68
g1545
sg61
(lp1659
g54
(g75
g56
NtRp1660
(dp1661
g59
(dp1662
g79
g80
ssg68
g1656
sg61
(lp1663
g566
asbag54
(g75
g56
NtRp1664
(dp1665
g59
(dp1666
g86
g87
ssg68
g1656
sg61
(lp1667
S':'
asbag54
(g75
g56
NtRp1668
(dp1669
g59
(dp1670
sg68
g1656
sg61
(lp1671
g54
(g55
g56
NtRp1672
(dp1673
g59
(dp1674
g67
I4
ssg68
g1668
sg61
(lp1675
g97
asbasbasbag54
(g70
g56
NtRp1676
(dp1677
g59
(dp1678
sg68
g1545
sg61
(lp1679
g54
(g75
g56
NtRp1680
(dp1681
g59
(dp1682
g79
g80
ssg68
g1676
sg61
(lp1683
g587
asbag54
(g75
g56
NtRp1684
(dp1685
g59
(dp1686
g86
g87
ssg68
g1676
sg61
(lp1687
S':'
asbag54
(g75
g56
NtRp1688
(dp1689
g59
(dp1690
sg68
g1676
sg61
(lp1691
g54
(g55
g56
NtRp1692
(dp1693
g59
(dp1694
g67
I4
ssg68
g1688
sg61
(lp1695
g600
asbasbasbag54
(g70
g56
NtRp1696
(dp1697
g59
(dp1698
sg68
g1545
sg61
(lp1699
g54
(g75
g56
NtRp1700
(dp1701
g59
(dp1702
g79
g80
ssg68
g1696
sg61
(lp1703
g828
asbag54
(g75
g56
NtRp1704
(dp1705
g59
(dp1706
g86
g87
ssg68
g1696
sg61
(lp1707
S':'
asbag54
(g75
g56
NtRp1708
(dp1709
g59
(dp1710
sg68
g1696
sg61
(lp1711
g54
(g55
g56
NtRp1712
(dp1713
g59
(dp1714
g67
I4
ssg68
g1708
sg61
(lp1715
g97
asbasbasbag54
(g70
g56
NtRp1716
(dp1717
g59
(dp1718
sg68
g1545
sg61
(lp1719
g54
(g75
g56
NtRp1720
(dp1721
g59
(dp1722
g79
g80
ssg68
g1716
sg61
(lp1723
g1087
asbag54
(g75
g56
NtRp1724
(dp1725
g59
(dp1726
g86
g87
ssg68
g1716
sg61
(lp1727
S':'
asbag54
(g75
g56
NtRp1728
(dp1729
g59
(dp1730
sg68
g1716
sg61
(lp1731
g54
(g55
g56
NtRp1732
(dp1733
g59
(dp1734
g67
I4
ssg68
g1728
sg61
(lp1735
g1100
asbasbasbag54
(g70
g56
NtRp1736
(dp1737
g59
(dp1738
sg68
g1545
sg61
(lp1739
g54
(g75
g56
NtRp1740
(dp1741
g59
(dp1742
g79
g80
ssg68
g1736
sg61
(lp1743
g1152
asbag54
(g75
g56
NtRp1744
(dp1745
g59
(dp1746
g86
g87
ssg68
g1736
sg61
(lp1747
S':'
asbag54
(g75
g56
NtRp1748
(dp1749
g59
(dp1750
sg68
g1736
sg61
(lp1751
g54
(g55
g56
NtRp1752
(dp1753
g59
(dp1754
g67
I4
ssg68
g1748
sg61
(lp1755
g54
(g63
g56
NtRp1756
(dp1757
g59
(dp1758
g67
I3
ssg68
Nsg61
(lp1759
g54
(g70
g56
NtRp1760
(dp1761
g59
(dp1762
sg68
g1756
sg61
(lp1763
g54
(g75
g56
NtRp1764
(dp1765
g59
(dp1766
sg68
g1760
sg61
(lp1767
g54
(g55
g56
NtRp1768
(dp1769
g59
(dp1770
g67
I3
ssg68
g1764
sg61
(lp1771
S'1'
asbasbasbag54
(g70
g56
NtRp1772
(dp1773
g59
(dp1774
sg68
g1756
sg61
(lp1775
g54
(g75
g56
NtRp1776
(dp1777
g59
(dp1778
sg68
g1772
sg61
(lp1779
g54
(g55
g56
NtRp1780
(dp1781
g59
(dp1782
g67
I3
ssg68
g1776
sg61
(lp1783
S'99'
p1784
asbasbasbag54
(g70
g56
NtRp1785
(dp1786
g59
(dp1787
sg68
g1756
sg61
(lp1788
g54
(g75
g56
NtRp1789
(dp1790
g59
(dp1791
sg68
g1785
sg61
(lp1792
g54
(g55
g56
NtRp1793
(dp1794
g59
(dp1795
g67
I3
ssg68
g1789
sg61
(lp1796
S'2'
asbasbasbag54
(g70
g56
NtRp1797
(dp1798
g59
(dp1799
sg68
g1756
sg61
(lp1800
g54
(g75
g56
NtRp1801
(dp1802
g59
(dp1803
sg68
g1797
sg61
(lp1804
g54
(g55
g56
NtRp1805
(dp1806
g59
(dp1807
g67
I3
ssg68
g1801
sg61
(lp1808
S'datetime.datetime(2011, 9, 26, 6, 55, 33)'
p1809
asbasbasbag54
(g70
g56
NtRp1810
(dp1811
g59
(dp1812
sg68
g1756
sg61
(lp1813
g54
(g75
g56
NtRp1814
(dp1815
g59
(dp1816
sg68
g1810
sg61
(lp1817
g54
(g55
g56
NtRp1818
(dp1819
g59
(dp1820
g67
I3
ssg68
g1814
sg61
(lp1821
g1231
asbasbasbasbasbasbasbasbasbasbasbag54
(g70
g56
NtRp1822
(dp1823
g59
(dp1824
sg68
g64
sg61
(lp1825
g54
(g75
g56
NtRp1826
(dp1827
g59
(dp1828
g79
g80
ssg68
g1822
sg61
(lp1829
S'is_https'
p1830
asbag54
(g75
g56
NtRp1831
(dp1832
g59
(dp1833
g86
g87
ssg68
g1822
sg61
(lp1834
S':'
asbag54
(g75
g56
NtRp1835
(dp1836
g59
(dp1837
sg68
g1822
sg61
(lp1838
g54
(g55
g56
NtRp1839
(dp1840
g59
(dp1841
g67
I5
ssg68
g1835
sg61
(lp1842
g97
asbasbasbag54
(g70
g56
NtRp1843
(dp1844
g59
(dp1845
sg68
g64
sg61
(lp1846
g54
(g75
g56
NtRp1847
(dp1848
g59
(dp1849
g79
g80
ssg68
g1843
sg61
(lp1850
S'is_local'
p1851
asbag54
(g75
g56
NtRp1852
(dp1853
g59
(dp1854
g86
g87
ssg68
g1843
sg61
(lp1855
S':'
asbag54
(g75
g56
NtRp1856
(dp1857
g59
(dp1858
sg68
g1843
sg61
(lp1859
g54
(g55
g56
NtRp1860
(dp1861
g59
(dp1862
g67
I5
ssg68
g1856
sg61
(lp1863
g1340
asbasbasbag54
(g70
g56
NtRp1864
(dp1865
g59
(dp1866
sg68
g64
sg61
(lp1867
g54
(g75
g56
NtRp1868
(dp1869
g59
(dp1870
g79
g80
ssg68
g1864
sg61
(lp1871
S'is_restful'
p1872
asbag54
(g75
g56
NtRp1873
(dp1874
g59
(dp1875
g86
g87
ssg68
g1864
sg61
(lp1876
S':'
asbag54
(g75
g56
NtRp1877
(dp1878
g59
(dp1879
sg68
g1864
sg61
(lp1880
g54
(g55
g56
NtRp1881
(dp1882
g59
(dp1883
g67
I5
ssg68
g1877
sg61
(lp1884
g97
asbasbasbag54
(g70
g56
NtRp1885
(dp1886
g59
(dp1887
sg68
g64
sg61
(lp1888
g54
(g75
g56
NtRp1889
(dp1890
g59
(dp1891
g79
g80
ssg68
g1885
sg61
(lp1892
S'now'
p1893
asbag54
(g75
g56
NtRp1894
(dp1895
g59
(dp1896
g86
g87
ssg68
g1885
sg61
(lp1897
S':'
asbag54
(g75
g56
NtRp1898
(dp1899
g59
(dp1900
sg68
g1885
sg61
(lp1901
g54
(g55
g56
NtRp1902
(dp1903
g59
(dp1904
g67
I5
ssg68
g1898
sg61
(lp1905
S'datetime.datetime(2011, 12, 28, 3, 35, 20, 695000)'
p1906
asbasbasbag54
(g70
g56
NtRp1907
(dp1908
g59
(dp1909
sg68
g64
sg61
(lp1910
g54
(g75
g56
NtRp1911
(dp1912
g59
(dp1913
g79
g80
ssg68
g1907
sg61
(lp1914
S'post_vars'
p1915
asbag54
(g75
g56
NtRp1916
(dp1917
g59
(dp1918
g86
g87
ssg68
g1907
sg61
(lp1919
S':'
asbag54
(g75
g56
NtRp1920
(dp1921
g59
(dp1922
sg68
g1907
sg61
(lp1923
g54
(g55
g56
NtRp1924
(dp1925
g59
(dp1926
g67
I5
ssg68
g1920
sg61
(lp1927
g54
(g63
g56
NtRp1928
(dp1929
g59
(dp1930
g67
I4
ssg68
Nsg61
(lp1931
sbasbasbasbag54
(g70
g56
NtRp1932
(dp1933
g59
(dp1934
sg68
g64
sg61
(lp1935
g54
(g75
g56
NtRp1936
(dp1937
g59
(dp1938
g79
g80
ssg68
g1932
sg61
(lp1939
S'raw_args'
p1940
asbag54
(g75
g56
NtRp1941
(dp1942
g59
(dp1943
g86
g87
ssg68
g1932
sg61
(lp1944
S':'
asbag54
(g75
g56
NtRp1945
(dp1946
g59
(dp1947
sg68
g1932
sg61
(lp1948
g54
(g55
g56
NtRp1949
(dp1950
g59
(dp1951
g67
I5
ssg68
g1945
sg61
(lp1952
S'myapp'
p1953
asbasbasbag54
(g70
g56
NtRp1954
(dp1955
g59
(dp1956
sg68
g64
sg61
(lp1957
g54
(g75
g56
NtRp1958
(dp1959
g59
(dp1960
g79
g80
ssg68
g1954
sg61
(lp1961
S'url'
p1962
asbag54
(g75
g56
NtRp1963
(dp1964
g59
(dp1965
g86
g87
ssg68
g1954
sg61
(lp1966
S':'
asbag54
(g75
g56
NtRp1967
(dp1968
g59
(dp1969
sg68
g1954
sg61
(lp1970
g54
(g55
g56
NtRp1971
(dp1972
g59
(dp1973
g67
I5
ssg68
g1967
sg61
(lp1974
S'/admin/default/design/myapp'
p1975
asbasbasbag54
(g70
g56
NtRp1976
(dp1977
g59
(dp1978
sg68
g64
sg61
(lp1979
g54
(g75
g56
NtRp1980
(dp1981
g59
(dp1982
g79
g80
ssg68
g1976
sg61
(lp1983
S'utcnow'
p1984
asbag54
(g75
g56
NtRp1985
(dp1986
g59
(dp1987
g86
g87
ssg68
g1976
sg61
(lp1988
S':'
asbag54
(g75
g56
NtRp1989
(dp1990
g59
(dp1991
sg68
g1976
sg61
(lp1992
g54
(g55
g56
NtRp1993
(dp1994
g59
(dp1995
g67
I5
ssg68
g1989
sg61
(lp1996
S'datetime.datetime(2011, 12, 27, 16, 35, 20, 695000)'
p1997
asbasbasbag54
(g70
g56
NtRp1998
(dp1999
g59
(dp2000
sg68
g64
sg61
(lp2001
g54
(g75
g56
NtRp2002
(dp2003
g59
(dp2004
g79
g80
ssg68
g1998
sg61
(lp2005
S'uuid'
p2006
asbag54
(g75
g56
NtRp2007
(dp2008
g59
(dp2009
g86
g87
ssg68
g1998
sg61
(lp2010
S':'
asbag54
(g75
g56
NtRp2011
(dp2012
g59
(dp2013
sg68
g1998
sg61
(lp2014
g54
(g55
g56
NtRp2015
(dp2016
g59
(dp2017
g67
I5
ssg68
g2011
sg61
(lp2018
S'admin/127.0.0.1.2011-12-28.03-35-20.6a308b86-f906-43af-9cab-ff81a04b41d3'
p2019
asbasbasbag54
(g70
g56
NtRp2020
(dp2021
g59
(dp2022
sg68
g64
sg61
(lp2023
g54
(g75
g56
NtRp2024
(dp2025
g59
(dp2026
g79
g80
ssg68
g2020
sg61
(lp2027
S'vars'
p2028
asbag54
(g75
g56
NtRp2029
(dp2030
g59
(dp2031
g86
g87
ssg68
g2020
sg61
(lp2032
S':'
asbag54
(g75
g56
NtRp2033
(dp2034
g59
(dp2035
sg68
g2020
sg61
(lp2036
g54
(g55
g56
NtRp2037
(dp2038
g59
(dp2039
g67
I5
ssg68
g2033
sg61
(lp2040
g54
(g63
g56
NtRp2041
(dp2042
g59
(dp2043
g67
I4
ssg68
Nsg61
(lp2044
sbasbasbasbag54
(g70
g56
NtRp2045
(dp2046
g59
(dp2047
sg68
g64
sg61
(lp2048
g54
(g75
g56
NtRp2049
(dp2050
g59
(dp2051
g79
g80
ssg68
g2045
sg61
(lp2052
S'wsgi'
p2053
asbag54
(g75
g56
NtRp2054
(dp2055
g59
(dp2056
g86
g87
ssg68
g2045
sg61
(lp2057
S':'
asbag54
(g75
g56
NtRp2058
(dp2059
g59
(dp2060
sg68
g2045
sg61
(lp2061
g54
(g55
g56
NtRp2062
(dp2063
g59
(dp2064
g67
I5
ssg68
g2058
sg61
(lp2065
g54
(g63
g56
NtRp2066
(dp2067
g59
(dp2068
g67
I4
ssg68
Nsg61
(lp2069
g54
(g70
g56
NtRp2070
(dp2071
g59
(dp2072
sg68
g2066
sg61
(lp2073
g54
(g75
g56
NtRp2074
(dp2075
g59
(dp2076
g79
g80
ssg68
g2070
sg61
(lp2077
S'environ'
p2078
asbag54
(g75
g56
NtRp2079
(dp2080
g59
(dp2081
g86
g87
ssg68
g2070
sg61
(lp2082
S':'
asbag54
(g75
g56
NtRp2083
(dp2084
g59
(dp2085
sg68
g2070
sg61
(lp2086
g54
(g55
g56
NtRp2087
(dp2088
g59
(dp2089
g67
I4
ssg68
g2083
sg61
(lp2090
g54
(g63
g56
NtRp2091
(dp2092
g59
(dp2093
g67
I3
ssg68
Nsg61
(lp2094
g54
(g70
g56
NtRp2095
(dp2096
g59
(dp2097
sg68
g2091
sg61
(lp2098
g54
(g75
g56
NtRp2099
(dp2100
g59
(dp2101
g79
g80
ssg68
g2095
sg61
(lp2102
S'HTTP_ACCEPT'
p2103
asbag54
(g75
g56
NtRp2104
(dp2105
g59
(dp2106
g86
g87
ssg68
g2095
sg61
(lp2107
S':'
asbag54
(g75
g56
NtRp2108
(dp2109
g59
(dp2110
sg68
g2095
sg61
(lp2111
g54
(g55
g56
NtRp2112
(dp2113
g59
(dp2114
g67
I3
ssg68
g2108
sg61
(lp2115
g622
asbasbasbag54
(g70
g56
NtRp2116
(dp2117
g59
(dp2118
sg68
g2091
sg61
(lp2119
g54
(g75
g56
NtRp2120
(dp2121
g59
(dp2122
g79
g80
ssg68
g2116
sg61
(lp2123
S'HTTP_ACCEPT_CHARSET'
p2124
asbag54
(g75
g56
NtRp2125
(dp2126
g59
(dp2127
g86
g87
ssg68
g2116
sg61
(lp2128
S':'
asbag54
(g75
g56
NtRp2129
(dp2130
g59
(dp2131
sg68
g2116
sg61
(lp2132
g54
(g55
g56
NtRp2133
(dp2134
g59
(dp2135
g67
I3
ssg68
g2129
sg61
(lp2136
g644
asbasbasbag54
(g70
g56
NtRp2137
(dp2138
g59
(dp2139
sg68
g2091
sg61
(lp2140
g54
(g75
g56
NtRp2141
(dp2142
g59
(dp2143
g79
g80
ssg68
g2137
sg61
(lp2144
S'HTTP_ACCEPT_ENCODING'
p2145
asbag54
(g75
g56
NtRp2146
(dp2147
g59
(dp2148
g86
g87
ssg68
g2137
sg61
(lp2149
S':'
asbag54
(g75
g56
NtRp2150
(dp2151
g59
(dp2152
sg68
g2137
sg61
(lp2153
g54
(g55
g56
NtRp2154
(dp2155
g59
(dp2156
g67
I3
ssg68
g2150
sg61
(lp2157
g666
asbasbasbag54
(g70
g56
NtRp2158
(dp2159
g59
(dp2160
sg68
g2091
sg61
(lp2161
g54
(g75
g56
NtRp2162
(dp2163
g59
(dp2164
g79
g80
ssg68
g2158
sg61
(lp2165
S'HTTP_ACCEPT_LANGUAGE'
p2166
asbag54
(g75
g56
NtRp2167
(dp2168
g59
(dp2169
g86
g87
ssg68
g2158
sg61
(lp2170
S':'
asbag54
(g75
g56
NtRp2171
(dp2172
g59
(dp2173
sg68
g2158
sg61
(lp2174
g54
(g55
g56
NtRp2175
(dp2176
g59
(dp2177
g67
I3
ssg68
g2171
sg61
(lp2178
g688
asbasbasbag54
(g70
g56
NtRp2179
(dp2180
g59
(dp2181
sg68
g2091
sg61
(lp2182
g54
(g75
g56
NtRp2183
(dp2184
g59
(dp2185
g79
g80
ssg68
g2179
sg61
(lp2186
S'HTTP_CONNECTION'
p2187
asbag54
(g75
g56
NtRp2188
(dp2189
g59
(dp2190
g86
g87
ssg68
g2179
sg61
(lp2191
S':'
asbag54
(g75
g56
NtRp2192
(dp2193
g59
(dp2194
sg68
g2179
sg61
(lp2195
g54
(g55
g56
NtRp2196
(dp2197
g59
(dp2198
g67
I3
ssg68
g2192
sg61
(lp2199
g710
asbasbasbag54
(g70
g56
NtRp2200
(dp2201
g59
(dp2202
sg68
g2091
sg61
(lp2203
g54
(g75
g56
NtRp2204
(dp2205
g59
(dp2206
g79
g80
ssg68
g2200
sg61
(lp2207
S'HTTP_COOKIE'
p2208
asbag54
(g75
g56
NtRp2209
(dp2210
g59
(dp2211
g86
g87
ssg68
g2200
sg61
(lp2212
S':'
asbag54
(g75
g56
NtRp2213
(dp2214
g59
(dp2215
sg68
g2200
sg61
(lp2216
g54
(g55
g56
NtRp2217
(dp2218
g59
(dp2219
g67
I3
ssg68
g2213
sg61
(lp2220
g732
asbasbasbag54
(g70
g56
NtRp2221
(dp2222
g59
(dp2223
sg68
g2091
sg61
(lp2224
g54
(g75
g56
NtRp2225
(dp2226
g59
(dp2227
g79
g80
ssg68
g2221
sg61
(lp2228
S'HTTP_DNT'
p2229
asbag54
(g75
g56
NtRp2230
(dp2231
g59
(dp2232
g86
g87
ssg68
g2221
sg61
(lp2233
S':'
asbag54
(g75
g56
NtRp2234
(dp2235
g59
(dp2236
sg68
g2221
sg61
(lp2237
g54
(g55
g56
NtRp2238
(dp2239
g59
(dp2240
g67
I3
ssg68
g2234
sg61
(lp2241
S'1'
asbasbasbag54
(g70
g56
NtRp2242
(dp2243
g59
(dp2244
sg68
g2091
sg61
(lp2245
g54
(g75
g56
NtRp2246
(dp2247
g59
(dp2248
g79
g80
ssg68
g2242
sg61
(lp2249
S'HTTP_HOST'
p2250
asbag54
(g75
g56
NtRp2251
(dp2252
g59
(dp2253
g86
g87
ssg68
g2242
sg61
(lp2254
S':'
asbag54
(g75
g56
NtRp2255
(dp2256
g59
(dp2257
sg68
g2242
sg61
(lp2258
g54
(g55
g56
NtRp2259
(dp2260
g59
(dp2261
g67
I3
ssg68
g2255
sg61
(lp2262
g775
asbasbasbag54
(g70
g56
NtRp2263
(dp2264
g59
(dp2265
sg68
g2091
sg61
(lp2266
g54
(g75
g56
NtRp2267
(dp2268
g59
(dp2269
g79
g80
ssg68
g2263
sg61
(lp2270
S'HTTP_REFERER'
p2271
asbag54
(g75
g56
NtRp2272
(dp2273
g59
(dp2274
g86
g87
ssg68
g2263
sg61
(lp2275
S':'
asbag54
(g75
g56
NtRp2276
(dp2277
g59
(dp2278
sg68
g2263
sg61
(lp2279
g54
(g55
g56
NtRp2280
(dp2281
g59
(dp2282
g67
I3
ssg68
g2276
sg61
(lp2283
g797
asbasbasbag54
(g70
g56
NtRp2284
(dp2285
g59
(dp2286
sg68
g2091
sg61
(lp2287
g54
(g75
g56
NtRp2288
(dp2289
g59
(dp2290
g79
g80
ssg68
g2284
sg61
(lp2291
S'HTTP_USER_AGENT'
p2292
asbag54
(g75
g56
NtRp2293
(dp2294
g59
(dp2295
g86
g87
ssg68
g2284
sg61
(lp2296
S':'
asbag54
(g75
g56
NtRp2297
(dp2298
g59
(dp2299
sg68
g2284
sg61
(lp2300
g54
(g55
g56
NtRp2301
(dp2302
g59
(dp2303
g67
I3
ssg68
g2297
sg61
(lp2304
g819
asbasbasbag54
(g70
g56
NtRp2305
(dp2306
g59
(dp2307
sg68
g2091
sg61
(lp2308
g54
(g75
g56
NtRp2309
(dp2310
g59
(dp2311
g79
g80
ssg68
g2305
sg61
(lp2312
S'PATH_INFO'
p2313
asbag54
(g75
g56
NtRp2314
(dp2315
g59
(dp2316
g86
g87
ssg68
g2305
sg61
(lp2317
S':'
asbag54
(g75
g56
NtRp2318
(dp2319
g59
(dp2320
sg68
g2305
sg61
(lp2321
g54
(g55
g56
NtRp2322
(dp2323
g59
(dp2324
g67
I3
ssg68
g2318
sg61
(lp2325
g862
asbasbasbag54
(g70
g56
NtRp2326
(dp2327
g59
(dp2328
sg68
g2091
sg61
(lp2329
g54
(g75
g56
NtRp2330
(dp2331
g59
(dp2332
g79
g80
ssg68
g2326
sg61
(lp2333
S'QUERY_STRING'
p2334
asbag54
(g75
g56
NtRp2335
(dp2336
g59
(dp2337
g86
g87
ssg68
g2326
sg61
(lp2338
S':'
asbag54
(g75
g56
NtRp2339
(dp2340
g59
(dp2341
sg68
g2326
sg61
(lp2342
g54
(g55
g56
NtRp2343
(dp2344
g59
(dp2345
g67
I3
ssg68
g2339
sg61
(lp2346
S''
asbasbasbag54
(g70
g56
NtRp2347
(dp2348
g59
(dp2349
sg68
g2091
sg61
(lp2350
g54
(g75
g56
NtRp2351
(dp2352
g59
(dp2353
g79
g80
ssg68
g2347
sg61
(lp2354
S'REMOTE_ADDR'
p2355
asbag54
(g75
g56
NtRp2356
(dp2357
g59
(dp2358
g86
g87
ssg68
g2347
sg61
(lp2359
S':'
asbag54
(g75
g56
NtRp2360
(dp2361
g59
(dp2362
sg68
g2347
sg61
(lp2363
g54
(g55
g56
NtRp2364
(dp2365
g59
(dp2366
g67
I3
ssg68
g2360
sg61
(lp2367
g200
asbasbasbag54
(g70
g56
NtRp2368
(dp2369
g59
(dp2370
sg68
g2091
sg61
(lp2371
g54
(g75
g56
NtRp2372
(dp2373
g59
(dp2374
g79
g80
ssg68
g2368
sg61
(lp2375
S'REMOTE_PORT'
p2376
asbag54
(g75
g56
NtRp2377
(dp2378
g59
(dp2379
g86
g87
ssg68
g2368
sg61
(lp2380
S':'
asbag54
(g75
g56
NtRp2381
(dp2382
g59
(dp2383
sg68
g2368
sg61
(lp2384
g54
(g55
g56
NtRp2385
(dp2386
g59
(dp2387
g67
I3
ssg68
g2381
sg61
(lp2388
g926
asbasbasbag54
(g70
g56
NtRp2389
(dp2390
g59
(dp2391
sg68
g2091
sg61
(lp2392
g54
(g75
g56
NtRp2393
(dp2394
g59
(dp2395
g79
g80
ssg68
g2389
sg61
(lp2396
S'REQUEST_METHOD'
p2397
asbag54
(g75
g56
NtRp2398
(dp2399
g59
(dp2400
g86
g87
ssg68
g2389
sg61
(lp2401
S':'
asbag54
(g75
g56
NtRp2402
(dp2403
g59
(dp2404
sg68
g2389
sg61
(lp2405
g54
(g55
g56
NtRp2406
(dp2407
g59
(dp2408
g67
I3
ssg68
g2402
sg61
(lp2409
g948
asbasbasbag54
(g70
g56
NtRp2410
(dp2411
g59
(dp2412
sg68
g2091
sg61
(lp2413
g54
(g75
g56
NtRp2414
(dp2415
g59
(dp2416
g79
g80
ssg68
g2410
sg61
(lp2417
S'REQUEST_URI'
p2418
asbag54
(g75
g56
NtRp2419
(dp2420
g59
(dp2421
g86
g87
ssg68
g2410
sg61
(lp2422
S':'
asbag54
(g75
g56
NtRp2423
(dp2424
g59
(dp2425
sg68
g2410
sg61
(lp2426
g54
(g55
g56
NtRp2427
(dp2428
g59
(dp2429
g67
I3
ssg68
g2423
sg61
(lp2430
g862
asbasbasbag54
(g70
g56
NtRp2431
(dp2432
g59
(dp2433
sg68
g2091
sg61
(lp2434
g54
(g75
g56
NtRp2435
(dp2436
g59
(dp2437
g79
g80
ssg68
g2431
sg61
(lp2438
S'SCRIPT_NAME'
p2439
asbag54
(g75
g56
NtRp2440
(dp2441
g59
(dp2442
g86
g87
ssg68
g2431
sg61
(lp2443
S':'
asbag54
(g75
g56
NtRp2444
(dp2445
g59
(dp2446
sg68
g2431
sg61
(lp2447
g54
(g55
g56
NtRp2448
(dp2449
g59
(dp2450
g67
I3
ssg68
g2444
sg61
(lp2451
S''
asbasbasbag54
(g70
g56
NtRp2452
(dp2453
g59
(dp2454
sg68
g2091
sg61
(lp2455
g54
(g75
g56
NtRp2456
(dp2457
g59
(dp2458
g79
g80
ssg68
g2452
sg61
(lp2459
S'SERVER_NAME'
p2460
asbag54
(g75
g56
NtRp2461
(dp2462
g59
(dp2463
g86
g87
ssg68
g2452
sg61
(lp2464
S':'
asbag54
(g75
g56
NtRp2465
(dp2466
g59
(dp2467
sg68
g2452
sg61
(lp2468
g54
(g55
g56
NtRp2469
(dp2470
g59
(dp2471
g67
I3
ssg68
g2465
sg61
(lp2472
g1012
asbasbasbag54
(g70
g56
NtRp2473
(dp2474
g59
(dp2475
sg68
g2091
sg61
(lp2476
g54
(g75
g56
NtRp2477
(dp2478
g59
(dp2479
g79
g80
ssg68
g2473
sg61
(lp2480
S'SERVER_PORT'
p2481
asbag54
(g75
g56
NtRp2482
(dp2483
g59
(dp2484
g86
g87
ssg68
g2473
sg61
(lp2485
S':'
asbag54
(g75
g56
NtRp2486
(dp2487
g59
(dp2488
sg68
g2473
sg61
(lp2489
g54
(g55
g56
NtRp2490
(dp2491
g59
(dp2492
g67
I3
ssg68
g2486
sg61
(lp2493
g1034
asbasbasbag54
(g70
g56
NtRp2494
(dp2495
g59
(dp2496
sg68
g2091
sg61
(lp2497
g54
(g75
g56
NtRp2498
(dp2499
g59
(dp2500
g79
g80
ssg68
g2494
sg61
(lp2501
S'SERVER_PROTOCOL'
p2502
asbag54
(g75
g56
NtRp2503
(dp2504
g59
(dp2505
g86
g87
ssg68
g2494
sg61
(lp2506
S':'
asbag54
(g75
g56
NtRp2507
(dp2508
g59
(dp2509
sg68
g2494
sg61
(lp2510
g54
(g55
g56
NtRp2511
(dp2512
g59
(dp2513
g67
I3
ssg68
g2507
sg61
(lp2514
g1056
asbasbasbag54
(g70
g56
NtRp2515
(dp2516
g59
(dp2517
sg68
g2091
sg61
(lp2518
g54
(g75
g56
NtRp2519
(dp2520
g59
(dp2521
g79
g80
ssg68
g2515
sg61
(lp2522
S'SERVER_SOFTWARE'
p2523
asbag54
(g75
g56
NtRp2524
(dp2525
g59
(dp2526
g86
g87
ssg68
g2515
sg61
(lp2527
S':'
asbag54
(g75
g56
NtRp2528
(dp2529
g59
(dp2530
sg68
g2515
sg61
(lp2531
g54
(g55
g56
NtRp2532
(dp2533
g59
(dp2534
g67
I3
ssg68
g2528
sg61
(lp2535
g1078
asbasbasbag54
(g70
g56
NtRp2536
(dp2537
g59
(dp2538
sg68
g2091
sg61
(lp2539
g54
(g75
g56
NtRp2540
(dp2541
g59
(dp2542
g79
g80
ssg68
g2536
sg61
(lp2543
S'WEB2PY_ORIGINAL_URI'
p2544
asbag54
(g75
g56
NtRp2545
(dp2546
g59
(dp2547
g86
g87
ssg68
g2536
sg61
(lp2548
S':'
asbag54
(g75
g56
NtRp2549
(dp2550
g59
(dp2551
sg68
g2536
sg61
(lp2552
g54
(g55
g56
NtRp2553
(dp2554
g59
(dp2555
g67
I3
ssg68
g2549
sg61
(lp2556
g1122
asbasbasbag54
(g70
g56
NtRp2557
(dp2558
g59
(dp2559
sg68
g2091
sg61
(lp2560
g54
(g75
g56
NtRp2561
(dp2562
g59
(dp2563
g79
g80
ssg68
g2557
sg61
(lp2564
S'wsgi.errors'
p2565
asbag54
(g75
g56
NtRp2566
(dp2567
g59
(dp2568
g86
g87
ssg68
g2557
sg61
(lp2569
S':'
asbag54
(g75
g56
NtRp2570
(dp2571
g59
(dp2572
sg68
g2557
sg61
(lp2573
g54
(g55
g56
NtRp2574
(dp2575
g59
(dp2576
g67
I3
ssg68
g2570
sg61
(lp2577
S"<open file '<stderr>', mode 'w' at 0x004800B0>"
p2578
asbasbasbag54
(g70
g56
NtRp2579
(dp2580
g59
(dp2581
sg68
g2091
sg61
(lp2582
g54
(g75
g56
NtRp2583
(dp2584
g59
(dp2585
g79
g80
ssg68
g2579
sg61
(lp2586
S'wsgi.file_wrapper'
p2587
asbag54
(g75
g56
NtRp2588
(dp2589
g59
(dp2590
g86
g87
ssg68
g2579
sg61
(lp2591
S':'
asbag54
(g75
g56
NtRp2592
(dp2593
g59
(dp2594
sg68
g2579
sg61
(lp2595
g54
(g55
g56
NtRp2596
(dp2597
g59
(dp2598
g67
I3
ssg68
g2592
sg61
(lp2599
S'<class wsgiref.util.FileWrapper at 0x033242A0>'
p2600
asbasbasbag54
(g70
g56
NtRp2601
(dp2602
g59
(dp2603
sg68
g2091
sg61
(lp2604
g54
(g75
g56
NtRp2605
(dp2606
g59
(dp2607
g79
g80
ssg68
g2601
sg61
(lp2608
S'wsgi.input'
p2609
asbag54
(g75
g56
NtRp2610
(dp2611
g59
(dp2612
g86
g87
ssg68
g2601
sg61
(lp2613
S':'
asbag54
(g75
g56
NtRp2614
(dp2615
g59
(dp2616
sg68
g2601
sg61
(lp2617
g54
(g55
g56
NtRp2618
(dp2619
g59
(dp2620
g67
I3
ssg68
g2614
sg61
(lp2621
S'<cStringIO.StringO object at 0x03677500>'
p2622
asbasbasbag54
(g70
g56
NtRp2623
(dp2624
g59
(dp2625
sg68
g2091
sg61
(lp2626
g54
(g75
g56
NtRp2627
(dp2628
g59
(dp2629
g79
g80
ssg68
g2623
sg61
(lp2630
S'wsgi.multiprocess'
p2631
asbag54
(g75
g56
NtRp2632
(dp2633
g59
(dp2634
g86
g87
ssg68
g2623
sg61
(lp2635
S':'
asbag54
(g75
g56
NtRp2636
(dp2637
g59
(dp2638
sg68
g2623
sg61
(lp2639
g54
(g55
g56
NtRp2640
(dp2641
g59
(dp2642
g67
I3
ssg68
g2636
sg61
(lp2643
g97
asbasbasbag54
(g70
g56
NtRp2644
(dp2645
g59
(dp2646
sg68
g2091
sg61
(lp2647
g54
(g75
g56
NtRp2648
(dp2649
g59
(dp2650
g79
g80
ssg68
g2644
sg61
(lp2651
S'wsgi.multithread'
p2652
asbag54
(g75
g56
NtRp2653
(dp2654
g59
(dp2655
g86
g87
ssg68
g2644
sg61
(lp2656
S':'
asbag54
(g75
g56
NtRp2657
(dp2658
g59
(dp2659
sg68
g2644
sg61
(lp2660
g54
(g55
g56
NtRp2661
(dp2662
g59
(dp2663
g67
I3
ssg68
g2657
sg61
(lp2664
g1340
asbasbasbag54
(g70
g56
NtRp2665
(dp2666
g59
(dp2667
sg68
g2091
sg61
(lp2668
g54
(g75
g56
NtRp2669
(dp2670
g59
(dp2671
g79
g80
ssg68
g2665
sg61
(lp2672
S'wsgi.run_once'
p2673
asbag54
(g75
g56
NtRp2674
(dp2675
g59
(dp2676
g86
g87
ssg68
g2665
sg61
(lp2677
S':'
asbag54
(g75
g56
NtRp2678
(dp2679
g59
(dp2680
sg68
g2665
sg61
(lp2681
g54
(g55
g56
NtRp2682
(dp2683
g59
(dp2684
g67
I3
ssg68
g2678
sg61
(lp2685
g97
asbasbasbag54
(g70
g56
NtRp2686
(dp2687
g59
(dp2688
sg68
g2091
sg61
(lp2689
g54
(g75
g56
NtRp2690
(dp2691
g59
(dp2692
g79
g80
ssg68
g2686
sg61
(lp2693
S'wsgi.url_scheme'
p2694
asbag54
(g75
g56
NtRp2695
(dp2696
g59
(dp2697
g86
g87
ssg68
g2686
sg61
(lp2698
S':'
asbag54
(g75
g56
NtRp2699
(dp2700
g59
(dp2701
sg68
g2686
sg61
(lp2702
g54
(g55
g56
NtRp2703
(dp2704
g59
(dp2705
g67
I3
ssg68
g2699
sg61
(lp2706
g1383
asbasbasbag54
(g70
g56
NtRp2707
(dp2708
g59
(dp2709
sg68
g2091
sg61
(lp2710
g54
(g75
g56
NtRp2711
(dp2712
g59
(dp2713
g79
g80
ssg68
g2707
sg61
(lp2714
S'wsgi.version'
p2715
asbag54
(g75
g56
NtRp2716
(dp2717
g59
(dp2718
g86
g87
ssg68
g2707
sg61
(lp2719
S':'
asbag54
(g75
g56
NtRp2720
(dp2721
g59
(dp2722
sg68
g2707
sg61
(lp2723
g54
(g55
g56
NtRp2724
(dp2725
g59
(dp2726
g67
I3
ssg68
g2720
sg61
(lp2727
S'1'
asbasbasbasbasbasbasbasbasbasbasbasbasbsS'frames'
p2728
(lp2729
(dp2730
S'file'
p2731
S'D:\\Dropbox\\Eclipse\\OJDevSourceProject\\project\\web2py\\gluon\\restricted.py'
p2732
sS'dump'
p2733
(dp2734
S'environment'
p2735
S"{'A': <class 'gluon.html.A'>, 'ALLOW_TOGGLE': 'true', 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, 'CENTER': <class 'gluon.html.CENTER'>, 'CHECK_VERSION': True, ...}"
p2736
sS'ccode'
p2737
S'<code object <module> at 0883B218, file "D:\\Drop...plications\\admin\\controllers/default.py", line 3>'
p2738
ssS'lnum'
p2739
I194
sS'lines'
p2740
(dp2741
I192
S'        else:'
p2742
sI193
S'            ccode = compile2(code,layer)'
p2743
sI194
S'        exec ccode in environment'
p2744
sI195
S'    except HTTP:'
p2745
sI196
S'        raise'
p2746
sI197
S'    except Exception, error:'
p2747
sI198
S'        # XXX Show exception in Wing IDE if running in debugger'
p2748
sI189
S'    try:'
p2749
sI190
S'        if type(code) == types.CodeType:'
p2750
sI191
S'            ccode = code'
p2751
ssS'call'
p2752
S'(code="# coding: utf8\\n\\nfrom gluon.admin import *\\nfrom g...site\'))\\n\\nresponse._vars=response._caller(design)\\n", environment={\'A\': <class \'gluon.html.A\'>, \'ALLOW_TOGGLE\': \'true\', \'B\': <class \'gluon.html.B\'>, \'BEAUTIFY\': <class \'gluon.html.BEAUTIFY\'>, \'BODY\': <class \'gluon.html.BODY\'>, \'BR\': <class \'gluon.html.BR\'>, \'BUTTON\': <class \'gluon.html.BUTTON\'>, \'CAT\': <class \'gluon.html.CAT\'>, \'CENTER\': <class \'gluon.html.CENTER\'>, \'CHECK_VERSION\': True, ...}, layer=r\'D:\\Dropbox\\Eclipse\\OJDevSourceProject\\project\\web2py\\applications\\admin\\controllers/default.py\')'
p2753
sS'func'
p2754
S'restricted'
p2755
sa(dp2756
g2731
S'D:\\Dropbox\\Eclipse\\OJDevSourceProject\\project\\web2py\\applications\\admin\\controllers\\default.py'
p2757
sg2733
(dp2758
sg2739
I1225
sg2740
(dp2759
I1216
S'    else:'
p2760
sI1217
S'        return dict(form=T("Disabled"))'
p2761
sI1218
S''
sI1219
S'def reload_routes():'
p2762
sI1220
S'    """ Reload routes.py """'
p2763
sI1221
S'    import gluon.rewrite'
p2764
sI1222
S'    gluon.rewrite.load()'
p2765
sI1223
S"    redirect(URL('site'))"
p2766
sI1214
S'            auth.settings.registration_requires_approval = False'
p2767
sI1215
S'        return dict(form=auth())'
p2768
ssg2752
S'()'
p2769
sg2754
S'<module>'
p2770
sa(dp2771
g2731
S'D:\\Dropbox\\Eclipse\\OJDevSourceProject\\project\\web2py\\gluon\\globals.py'
p2772
sg2733
(dp2773
S'self'
p2774
S'undefined'
p2775
sS'f'
S'<function design at 0x0367FA70>'
p2776
ssg2739
I149
sg2740
(dp2777
I144
S'        self.meta = Storage()      # used by web2py_ajax.html'
p2778
sI145
S'        self.menu = []             # used by the default view layout'
p2779
sI146
S'        self.files = []            # used by web2py_ajax.html'
p2780
sI147
S'        self.generic_patterns = [] # patterns to allow generic views'
p2781
sI148
S'        self._vars = None'
p2782
sI149
S'        self._caller = lambda f: f()'
p2783
sI150
S'        self._view_environment = None'
p2784
sI151
S'        self._custom_commit = None'
p2785
sI152
S'        self._custom_rollback = None'
p2786
sI153
S''
ssg2752
S'(f=<function design at 0x0367FA70>)'
p2787
sg2754
S'<lambda>'
p2788
sa(dp2789
g2731
S'D:\\Dropbox\\Eclipse\\OJDevSourceProject\\project\\web2py\\applications\\admin\\controllers\\default.py'
p2790
sg2733
(dp2791
S'cronfolder'
p2792
S"'D:/Dropbox/Eclipse/OJDevSourceProject/project/web2py/applications/myapp/cron'"
p2793
sS'os.path.exists'
p2794
S'<function exists at 0x004AC2B0>'
p2795
sS'global os'
p2796
S"<module 'os' from 'C:\\python25\\lib\\os.pyc'>"
p2797
sS'os.mkdir'
p2798
S'<built-in function mkdir>'
p2799
sS'os.path'
p2800
S"<module 'ntpath' from 'C:\\python25\\lib\\ntpath.pyc'>"
p2801
ssg2739
I742
sg2740
(dp2802
I737
S'    # Get all languages'
p2803
sI738
S"    languages = listdir(apath('%s/languages/' % app, r=request), '[\\w-]*\\.py')"
p2804
sI739
S''
sI740
S'    #Get crontab'
p2805
sI741
S"    cronfolder = apath('%s/cron' % app, r=request)"
p2806
sI742
S'    if not os.path.exists(cronfolder): os.mkdir(cronfolder)'
p2807
sI743
S"    crontab = apath('%s/cron/crontab' % app, r=request)"
p2808
sI744
S'    if not os.path.exists(crontab):'
p2809
sI745
S"        safe_write(crontab, '#crontab')"
p2810
sI746
S''
ssg2752
S'()'
p2811
sg2754
S'design'
p2812
sasS'pyver'
p2813
S'Python 2.5.4: C:\\python25\\python.exe'
p2814
sS'session'
p2815
g54
(g55
g56
NtRp2816
(dp2817
g59
(dp2818
sg61
(lp2819
g54
(g63
g56
NtRp2820
(dp2821
g59
(dp2822
g67
I5
ssg68
Nsg61
(lp2823
g54
(g70
g56
NtRp2824
(dp2825
g59
(dp2826
sg68
g2820
sg61
(lp2827
g54
(g75
g56
NtRp2828
(dp2829
g59
(dp2830
g79
g80
ssg68
g2824
sg61
(lp2831
S'authorized'
p2832
asbag54
(g75
g56
NtRp2833
(dp2834
g59
(dp2835
g86
g87
ssg68
g2824
sg61
(lp2836
S':'
asbag54
(g75
g56
NtRp2837
(dp2838
g59
(dp2839
sg68
g2824
sg61
(lp2840
g54
(g55
g56
NtRp2841
(dp2842
g59
(dp2843
g67
I5
ssg68
g2837
sg61
(lp2844
g1340
asbasbasbag54
(g70
g56
NtRp2845
(dp2846
g59
(dp2847
sg68
g2820
sg61
(lp2848
g54
(g75
g56
NtRp2849
(dp2850
g59
(dp2851
g79
g80
ssg68
g2845
sg61
(lp2852
S'check_version'
p2853
asbag54
(g75
g56
NtRp2854
(dp2855
g59
(dp2856
g86
g87
ssg68
g2845
sg61
(lp2857
S':'
asbag54
(g75
g56
NtRp2858
(dp2859
g59
(dp2860
sg68
g2845
sg61
(lp2861
g54
(g55
g56
NtRp2862
(dp2863
g59
(dp2864
g67
I5
ssg68
g2858
sg61
(lp2865
g1340
asbasbasbag54
(g70
g56
NtRp2866
(dp2867
g59
(dp2868
sg68
g2820
sg61
(lp2869
g54
(g75
g56
NtRp2870
(dp2871
g59
(dp2872
g79
g80
ssg68
g2866
sg61
(lp2873
S'last_time'
p2874
asbag54
(g75
g56
NtRp2875
(dp2876
g59
(dp2877
g86
g87
ssg68
g2866
sg61
(lp2878
S':'
asbag54
(g75
g56
NtRp2879
(dp2880
g59
(dp2881
sg68
g2866
sg61
(lp2882
g54
(g55
g56
NtRp2883
(dp2884
g59
(dp2885
g67
I5
ssg68
g2879
sg61
(lp2886
S'1325003720.7160001'
p2887
asbasbasbasbasbsS'etype'
p2888
S"<type 'exceptions.WindowsError'>"
p2889
sS'date'
p2890
S'Wed Dec 28 03:35:20 2011'
p2891
sS'response'
p2892
g54
(g55
g56
NtRp2893
(dp2894
g59
(dp2895
sg61
(lp2896
g54
(g63
g56
NtRp2897
(dp2898
g59
(dp2899
g67
I5
ssg68
Nsg61
(lp2900
g54
(g70
g56
NtRp2901
(dp2902
g59
(dp2903
sg68
g2897
sg61
(lp2904
g54
(g75
g56
NtRp2905
(dp2906
g59
(dp2907
g79
g80
ssg68
g2901
sg61
(lp2908
g165
asbag54
(g75
g56
NtRp2909
(dp2910
g59
(dp2911
g86
g87
ssg68
g2901
sg61
(lp2912
S':'
asbag54
(g75
g56
NtRp2913
(dp2914
g59
(dp2915
sg68
g2901
sg61
(lp2916
g54
(g55
g56
NtRp2917
(dp2918
g59
(dp2919
g67
I5
ssg68
g2913
sg61
(lp2920
S'<cStringIO.StringO object at 0x03684EA0>'
p2921
asbasbasbag54
(g70
g56
NtRp2922
(dp2923
g59
(dp2924
sg68
g2897
sg61
(lp2925
g54
(g75
g56
NtRp2926
(dp2927
g59
(dp2928
g79
g80
ssg68
g2922
sg61
(lp2929
g231
asbag54
(g75
g56
NtRp2930
(dp2931
g59
(dp2932
g86
g87
ssg68
g2922
sg61
(lp2933
S':'
asbag54
(g75
g56
NtRp2934
(dp2935
g59
(dp2936
sg68
g2922
sg61
(lp2937
g54
(g55
g56
NtRp2938
(dp2939
g59
(dp2940
g67
I5
ssg68
g2934
sg61
(lp2941
g54
(g63
g56
NtRp2942
(dp2943
g59
(dp2944
g67
I4
ssg68
Nsg61
(lp2945
g54
(g70
g56
NtRp2946
(dp2947
g59
(dp2948
sg68
g2942
sg61
(lp2949
g54
(g75
g56
NtRp2950
(dp2951
g59
(dp2952
g79
g80
ssg68
g2946
sg61
(lp2953
S'session_id_admin'
p2954
asbag54
(g75
g56
NtRp2955
(dp2956
g59
(dp2957
g86
g87
ssg68
g2946
sg61
(lp2958
S':'
asbag54
(g75
g56
NtRp2959
(dp2960
g59
(dp2961
sg68
g2946
sg61
(lp2962
g54
(g55
g56
NtRp2963
(dp2964
g59
(dp2965
g67
I4
ssg68
g2959
sg61
(lp2966
g54
(g63
g56
NtRp2967
(dp2968
g59
(dp2969
g67
I3
ssg68
Nsg61
(lp2970
g54
(g70
g56
NtRp2971
(dp2972
g59
(dp2973
sg68
g2967
sg61
(lp2974
g54
(g75
g56
NtRp2975
(dp2976
g59
(dp2977
g79
g80
ssg68
g2971
sg61
(lp2978
g281
asbag54
(g75
g56
NtRp2979
(dp2980
g59
(dp2981
g86
g87
ssg68
g2971
sg61
(lp2982
S':'
asbag54
(g75
g56
NtRp2983
(dp2984
g59
(dp2985
sg68
g2971
sg61
(lp2986
g54
(g55
g56
NtRp2987
(dp2988
g59
(dp2989
g67
I3
ssg68
g2983
sg61
(lp2990
S''
asbasbasbag54
(g70
g56
NtRp2991
(dp2992
g59
(dp2993
sg68
g2967
sg61
(lp2994
g54
(g75
g56
NtRp2995
(dp2996
g59
(dp2997
g79
g80
ssg68
g2991
sg61
(lp2998
g302
asbag54
(g75
g56
NtRp2999
(dp3000
g59
(dp3001
g86
g87
ssg68
g2991
sg61
(lp3002
S':'
asbag54
(g75
g56
NtRp3003
(dp3004
g59
(dp3005
sg68
g2991
sg61
(lp3006
g54
(g55
g56
NtRp3007
(dp3008
g59
(dp3009
g67
I3
ssg68
g3003
sg61
(lp3010
S''
asbasbasbag54
(g70
g56
NtRp3011
(dp3012
g59
(dp3013
sg68
g2967
sg61
(lp3014
g54
(g75
g56
NtRp3015
(dp3016
g59
(dp3017
g79
g80
ssg68
g3011
sg61
(lp3018
g323
asbag54
(g75
g56
NtRp3019
(dp3020
g59
(dp3021
g86
g87
ssg68
g3011
sg61
(lp3022
S':'
asbag54
(g75
g56
NtRp3023
(dp3024
g59
(dp3025
sg68
g3011
sg61
(lp3026
g54
(g55
g56
NtRp3027
(dp3028
g59
(dp3029
g67
I3
ssg68
g3023
sg61
(lp3030
S''
asbasbasbag54
(g70
g56
NtRp3031
(dp3032
g59
(dp3033
sg68
g2967
sg61
(lp3034
g54
(g75
g56
NtRp3035
(dp3036
g59
(dp3037
g79
g80
ssg68
g3031
sg61
(lp3038
g344
asbag54
(g75
g56
NtRp3039
(dp3040
g59
(dp3041
g86
g87
ssg68
g3031
sg61
(lp3042
S':'
asbag54
(g75
g56
NtRp3043
(dp3044
g59
(dp3045
sg68
g3031
sg61
(lp3046
g54
(g55
g56
NtRp3047
(dp3048
g59
(dp3049
g67
I3
ssg68
g3043
sg61
(lp3050
S''
asbasbasbag54
(g70
g56
NtRp3051
(dp3052
g59
(dp3053
sg68
g2967
sg61
(lp3054
g54
(g75
g56
NtRp3055
(dp3056
g59
(dp3057
g79
g80
ssg68
g3051
sg61
(lp3058
g365
asbag54
(g75
g56
NtRp3059
(dp3060
g59
(dp3061
g86
g87
ssg68
g3051
sg61
(lp3062
S':'
asbag54
(g75
g56
NtRp3063
(dp3064
g59
(dp3065
sg68
g3051
sg61
(lp3066
g54
(g55
g56
NtRp3067
(dp3068
g59
(dp3069
g67
I3
ssg68
g3063
sg61
(lp3070
S'/'
asbasbasbag54
(g70
g56
NtRp3071
(dp3072
g59
(dp3073
sg68
g2967
sg61
(lp3074
g54
(g75
g56
NtRp3075
(dp3076
g59
(dp3077
g79
g80
ssg68
g3071
sg61
(lp3078
g386
asbag54
(g75
g56
NtRp3079
(dp3080
g59
(dp3081
g86
g87
ssg68
g3071
sg61
(lp3082
S':'
asbag54
(g75
g56
NtRp3083
(dp3084
g59
(dp3085
sg68
g3071
sg61
(lp3086
g54
(g55
g56
NtRp3087
(dp3088
g59
(dp3089
g67
I3
ssg68
g3083
sg61
(lp3090
S''
asbasbasbag54
(g70
g56
NtRp3091
(dp3092
g59
(dp3093
sg68
g2967
sg61
(lp3094
g54
(g75
g56
NtRp3095
(dp3096
g59
(dp3097
g79
g80
ssg68
g3091
sg61
(lp3098
g407
asbag54
(g75
g56
NtRp3099
(dp3100
g59
(dp3101
g86
g87
ssg68
g3091
sg61
(lp3102
S':'
asbag54
(g75
g56
NtRp3103
(dp3104
g59
(dp3105
sg68
g3091
sg61
(lp3106
g54
(g55
g56
NtRp3107
(dp3108
g59
(dp3109
g67
I3
ssg68
g3103
sg61
(lp3110
S''
asbasbasbasbasbasbasbasbasbasbasbag54
(g70
g56
NtRp3111
(dp3112
g59
(dp3113
sg68
g2897
sg61
(lp3114
g54
(g75
g56
NtRp3115
(dp3116
g59
(dp3117
g79
g80
ssg68
g3111
sg61
(lp3118
S'files'
p3119
asbag54
(g75
g56
NtRp3120
(dp3121
g59
(dp3122
g86
g87
ssg68
g3111
sg61
(lp3123
S':'
asbag54
(g75
g56
NtRp3124
(dp3125
g59
(dp3126
sg68
g3111
sg61
(lp3127
g54
(g55
g56
NtRp3128
(dp3129
g59
(dp3130
g67
I5
ssg68
g3124
sg61
(lp3131
g54
(g63
g56
NtRp3132
(dp3133
g59
(dp3134
g67
I4
ssg68
Nsg61
(lp3135
g54
(g70
g56
NtRp3136
(dp3137
g59
(dp3138
sg68
g3132
sg61
(lp3139
g54
(g75
g56
NtRp3140
(dp3141
g59
(dp3142
sg68
g3136
sg61
(lp3143
g54
(g55
g56
NtRp3144
(dp3145
g59
(dp3146
g67
I4
ssg68
g3140
sg61
(lp3147
S'/admin/static/plugin_multiselect/jquery.dimensions.js'
p3148
asbasbasbag54
(g70
g56
NtRp3149
(dp3150
g59
(dp3151
sg68
g3132
sg61
(lp3152
g54
(g75
g56
NtRp3153
(dp3154
g59
(dp3155
sg68
g3149
sg61
(lp3156
g54
(g55
g56
NtRp3157
(dp3158
g59
(dp3159
g67
I4
ssg68
g3153
sg61
(lp3160
S'/admin/static/plugin_multiselect/jquery.multiselect.js'
p3161
asbasbasbag54
(g70
g56
NtRp3162
(dp3163
g59
(dp3164
sg68
g3132
sg61
(lp3165
g54
(g75
g56
NtRp3166
(dp3167
g59
(dp3168
sg68
g3162
sg61
(lp3169
g54
(g55
g56
NtRp3170
(dp3171
g59
(dp3172
g67
I4
ssg68
g3166
sg61
(lp3173
S'/admin/static/plugin_multiselect/jquery.multiselect.css'
p3174
asbasbasbag54
(g70
g56
NtRp3175
(dp3176
g59
(dp3177
sg68
g3132
sg61
(lp3178
g54
(g75
g56
NtRp3179
(dp3180
g59
(dp3181
sg68
g3175
sg61
(lp3182
g54
(g55
g56
NtRp3183
(dp3184
g59
(dp3185
g67
I4
ssg68
g3179
sg61
(lp3186
S'/admin/static/plugin_multiselect/start.js'
p3187
asbasbasbasbasbasbasbag54
(g70
g56
NtRp3188
(dp3189
g59
(dp3190
sg68
g2897
sg61
(lp3191
g54
(g75
g56
NtRp3192
(dp3193
g59
(dp3194
g79
g80
ssg68
g3188
sg61
(lp3195
S'flash'
p3196
asbag54
(g75
g56
NtRp3197
(dp3198
g59
(dp3199
g86
g87
ssg68
g3188
sg61
(lp3200
S':'
asbag54
(g75
g56
NtRp3201
(dp3202
g59
(dp3203
sg68
g3188
sg61
(lp3204
g54
(g55
g56
NtRp3205
(dp3206
g59
(dp3207
g67
I5
ssg68
g3201
sg61
(lp3208
S''
asbasbasbag54
(g70
g56
NtRp3209
(dp3210
g59
(dp3211
sg68
g2897
sg61
(lp3212
g54
(g75
g56
NtRp3213
(dp3214
g59
(dp3215
g79
g80
ssg68
g3209
sg61
(lp3216
S'generic_patterns'
p3217
asbag54
(g75
g56
NtRp3218
(dp3219
g59
(dp3220
g86
g87
ssg68
g3209
sg61
(lp3221
S':'
asbag54
(g75
g56
NtRp3222
(dp3223
g59
(dp3224
sg68
g3209
sg61
(lp3225
g54
(g55
g56
NtRp3226
(dp3227
g59
(dp3228
g67
I5
ssg68
g3222
sg61
(lp3229
g54
(g63
g56
NtRp3230
(dp3231
g59
(dp3232
g67
I4
ssg68
Nsg61
(lp3233
sbasbasbasbag54
(g70
g56
NtRp3234
(dp3235
g59
(dp3236
sg68
g2897
sg61
(lp3237
g54
(g75
g56
NtRp3238
(dp3239
g59
(dp3240
g79
g80
ssg68
g3234
sg61
(lp3241
S'headers'
p3242
asbag54
(g75
g56
NtRp3243
(dp3244
g59
(dp3245
g86
g87
ssg68
g3234
sg61
(lp3246
S':'
asbag54
(g75
g56
NtRp3247
(dp3248
g59
(dp3249
sg68
g3234
sg61
(lp3250
g54
(g55
g56
NtRp3251
(dp3252
g59
(dp3253
g67
I5
ssg68
g3247
sg61
(lp3254
g54
(g63
g56
NtRp3255
(dp3256
g59
(dp3257
g67
I4
ssg68
Nsg61
(lp3258
g54
(g70
g56
NtRp3259
(dp3260
g59
(dp3261
sg68
g3255
sg61
(lp3262
g54
(g75
g56
NtRp3263
(dp3264
g59
(dp3265
g79
g80
ssg68
g3259
sg61
(lp3266
S'Cache-Control'
p3267
asbag54
(g75
g56
NtRp3268
(dp3269
g59
(dp3270
g86
g87
ssg68
g3259
sg61
(lp3271
S':'
asbag54
(g75
g56
NtRp3272
(dp3273
g59
(dp3274
sg68
g3259
sg61
(lp3275
g54
(g55
g56
NtRp3276
(dp3277
g59
(dp3278
g67
I4
ssg68
g3272
sg61
(lp3279
S'no-store, no-cache, must-revalidate, post-check=0, pre-check=0'
p3280
asbasbasbag54
(g70
g56
NtRp3281
(dp3282
g59
(dp3283
sg68
g3255
sg61
(lp3284
g54
(g75
g56
NtRp3285
(dp3286
g59
(dp3287
g79
g80
ssg68
g3281
sg61
(lp3288
S'Content-Type'
p3289
asbag54
(g75
g56
NtRp3290
(dp3291
g59
(dp3292
g86
g87
ssg68
g3281
sg61
(lp3293
S':'
asbag54
(g75
g56
NtRp3294
(dp3295
g59
(dp3296
sg68
g3281
sg61
(lp3297
g54
(g55
g56
NtRp3298
(dp3299
g59
(dp3300
g67
I4
ssg68
g3294
sg61
(lp3301
S'text/html; charset=utf-8'
p3302
asbasbasbag54
(g70
g56
NtRp3303
(dp3304
g59
(dp3305
sg68
g3255
sg61
(lp3306
g54
(g75
g56
NtRp3307
(dp3308
g59
(dp3309
g79
g80
ssg68
g3303
sg61
(lp3310
S'Expires'
p3311
asbag54
(g75
g56
NtRp3312
(dp3313
g59
(dp3314
g86
g87
ssg68
g3303
sg61
(lp3315
S':'
asbag54
(g75
g56
NtRp3316
(dp3317
g59
(dp3318
sg68
g3303
sg61
(lp3319
g54
(g55
g56
NtRp3320
(dp3321
g59
(dp3322
g67
I4
ssg68
g3316
sg61
(lp3323
S'Tue, 27 Dec 2011 16:35:20 GMT'
p3324
asbasbasbag54
(g70
g56
NtRp3325
(dp3326
g59
(dp3327
sg68
g3255
sg61
(lp3328
g54
(g75
g56
NtRp3329
(dp3330
g59
(dp3331
g79
g80
ssg68
g3325
sg61
(lp3332
S'NingNang'
p3333
asbag54
(g75
g56
NtRp3334
(dp3335
g59
(dp3336
g86
g87
ssg68
g3325
sg61
(lp3337
S':'
asbag54
(g75
g56
NtRp3338
(dp3339
g59
(dp3340
sg68
g3325
sg61
(lp3341
g54
(g55
g56
NtRp3342
(dp3343
g59
(dp3344
g67
I4
ssg68
g3338
sg61
(lp3345
S'Nong'
p3346
asbasbasbag54
(g70
g56
NtRp3347
(dp3348
g59
(dp3349
sg68
g3255
sg61
(lp3350
g54
(g75
g56
NtRp3351
(dp3352
g59
(dp3353
g79
g80
ssg68
g3347
sg61
(lp3354
S'Pragma'
p3355
asbag54
(g75
g56
NtRp3356
(dp3357
g59
(dp3358
g86
g87
ssg68
g3347
sg61
(lp3359
S':'
asbag54
(g75
g56
NtRp3360
(dp3361
g59
(dp3362
sg68
g3347
sg61
(lp3363
g54
(g55
g56
NtRp3364
(dp3365
g59
(dp3366
g67
I4
ssg68
g3360
sg61
(lp3367
S'no-cache'
p3368
asbasbasbasbasbasbasbag54
(g70
g56
NtRp3369
(dp3370
g59
(dp3371
sg68
g2897
sg61
(lp3372
g54
(g75
g56
NtRp3373
(dp3374
g59
(dp3375
g79
g80
ssg68
g3369
sg61
(lp3376
S'menu'
p3377
asbag54
(g75
g56
NtRp3378
(dp3379
g59
(dp3380
g86
g87
ssg68
g3369
sg61
(lp3381
S':'
asbag54
(g75
g56
NtRp3382
(dp3383
g59
(dp3384
sg68
g3369
sg61
(lp3385
g54
(g55
g56
NtRp3386
(dp3387
g59
(dp3388
g67
I5
ssg68
g3382
sg61
(lp3389
g54
(g63
g56
NtRp3390
(dp3391
g59
(dp3392
g67
I4
ssg68
Nsg61
(lp3393
g54
(g70
g56
NtRp3394
(dp3395
g59
(dp3396
sg68
g3390
sg61
(lp3397
g54
(g75
g56
NtRp3398
(dp3399
g59
(dp3400
sg68
g3394
sg61
(lp3401
g54
(g55
g56
NtRp3402
(dp3403
g59
(dp3404
g67
I4
ssg68
g3398
sg61
(lp3405
g54
(g63
g56
NtRp3406
(dp3407
g59
(dp3408
g67
I3
ssg68
Nsg61
(lp3409
g54
(g70
g56
NtRp3410
(dp3411
g59
(dp3412
sg68
g3406
sg61
(lp3413
g54
(g75
g56
NtRp3414
(dp3415
g59
(dp3416
sg68
g3410
sg61
(lp3417
g54
(g55
g56
NtRp3418
(dp3419
g59
(dp3420
g67
I3
ssg68
g3414
sg61
(lp3421
cgluon.languages
lazyT_unpickle
p3422
(S's\x04\x00\x00\x00Site'
tRp3423
asbasbasbag54
(g70
g56
NtRp3424
(dp3425
g59
(dp3426
sg68
g3406
sg61
(lp3427
g54
(g75
g56
NtRp3428
(dp3429
g59
(dp3430
sg68
g3424
sg61
(lp3431
g54
(g55
g56
NtRp3432
(dp3433
g59
(dp3434
g67
I3
ssg68
g3428
sg61
(lp3435
g97
asbasbasbag54
(g70
g56
NtRp3436
(dp3437
g59
(dp3438
sg68
g3406
sg61
(lp3439
g54
(g75
g56
NtRp3440
(dp3441
g59
(dp3442
sg68
g3436
sg61
(lp3443
g54
(g55
g56
NtRp3444
(dp3445
g59
(dp3446
g67
I3
ssg68
g3440
sg61
(lp3447
S'/admin/default/site'
p3448
asbasbasbasbasbasbasbag54
(g70
g56
NtRp3449
(dp3450
g59
(dp3451
sg68
g3390
sg61
(lp3452
g54
(g75
g56
NtRp3453
(dp3454
g59
(dp3455
sg68
g3449
sg61
(lp3456
g54
(g55
g56
NtRp3457
(dp3458
g59
(dp3459
g67
I4
ssg68
g3453
sg61
(lp3460
g54
(g63
g56
NtRp3461
(dp3462
g59
(dp3463
g67
I3
ssg68
Nsg61
(lp3464
g54
(g70
g56
NtRp3465
(dp3466
g59
(dp3467
sg68
g3461
sg61
(lp3468
g54
(g75
g56
NtRp3469
(dp3470
g59
(dp3471
sg68
g3465
sg61
(lp3472
g54
(g55
g56
NtRp3473
(dp3474
g59
(dp3475
g67
I3
ssg68
g3469
sg61
(lp3476
g3422
(S's\x04\x00\x00\x00Edit'
tRp3477
asbasbasbag54
(g70
g56
NtRp3478
(dp3479
g59
(dp3480
sg68
g3461
sg61
(lp3481
g54
(g75
g56
NtRp3482
(dp3483
g59
(dp3484
sg68
g3478
sg61
(lp3485
g54
(g55
g56
NtRp3486
(dp3487
g59
(dp3488
g67
I3
ssg68
g3482
sg61
(lp3489
g1340
asbasbasbag54
(g70
g56
NtRp3490
(dp3491
g59
(dp3492
sg68
g3461
sg61
(lp3493
g54
(g75
g56
NtRp3494
(dp3495
g59
(dp3496
sg68
g3490
sg61
(lp3497
g54
(g55
g56
NtRp3498
(dp3499
g59
(dp3500
g67
I3
ssg68
g3494
sg61
(lp3501
S'/admin/default/design/myapp'
p3502
asbasbasbasbasbasbasbag54
(g70
g56
NtRp3503
(dp3504
g59
(dp3505
sg68
g3390
sg61
(lp3506
g54
(g75
g56
NtRp3507
(dp3508
g59
(dp3509
sg68
g3503
sg61
(lp3510
g54
(g55
g56
NtRp3511
(dp3512
g59
(dp3513
g67
I4
ssg68
g3507
sg61
(lp3514
g54
(g63
g56
NtRp3515
(dp3516
g59
(dp3517
g67
I3
ssg68
Nsg61
(lp3518
g54
(g70
g56
NtRp3519
(dp3520
g59
(dp3521
sg68
g3515
sg61
(lp3522
g54
(g75
g56
NtRp3523
(dp3524
g59
(dp3525
sg68
g3519
sg61
(lp3526
g54
(g55
g56
NtRp3527
(dp3528
g59
(dp3529
g67
I3
ssg68
g3523
sg61
(lp3530
g3422
(S's\x05\x00\x00\x00About'
tRp3531
asbasbasbag54
(g70
g56
NtRp3532
(dp3533
g59
(dp3534
sg68
g3515
sg61
(lp3535
g54
(g75
g56
NtRp3536
(dp3537
g59
(dp3538
sg68
g3532
sg61
(lp3539
g54
(g55
g56
NtRp3540
(dp3541
g59
(dp3542
g67
I3
ssg68
g3536
sg61
(lp3543
g97
asbasbasbag54
(g70
g56
NtRp3544
(dp3545
g59
(dp3546
sg68
g3515
sg61
(lp3547
g54
(g75
g56
NtRp3548
(dp3549
g59
(dp3550
sg68
g3544
sg61
(lp3551
g54
(g55
g56
NtRp3552
(dp3553
g59
(dp3554
g67
I3
ssg68
g3548
sg61
(lp3555
S'/admin/default/about/myapp'
p3556
asbasbasbasbasbasbasbag54
(g70
g56
NtRp3557
(dp3558
g59
(dp3559
sg68
g3390
sg61
(lp3560
g54
(g75
g56
NtRp3561
(dp3562
g59
(dp3563
sg68
g3557
sg61
(lp3564
g54
(g55
g56
NtRp3565
(dp3566
g59
(dp3567
g67
I4
ssg68
g3561
sg61
(lp3568
g54
(g63
g56
NtRp3569
(dp3570
g59
(dp3571
g67
I3
ssg68
Nsg61
(lp3572
g54
(g70
g56
NtRp3573
(dp3574
g59
(dp3575
sg68
g3569
sg61
(lp3576
g54
(g75
g56
NtRp3577
(dp3578
g59
(dp3579
sg68
g3573
sg61
(lp3580
g54
(g55
g56
NtRp3581
(dp3582
g59
(dp3583
g67
I3
ssg68
g3577
sg61
(lp3584
g3422
(S's\x06\x00\x00\x00Errors'
tRp3585
asbasbasbag54
(g70
g56
NtRp3586
(dp3587
g59
(dp3588
sg68
g3569
sg61
(lp3589
g54
(g75
g56
NtRp3590
(dp3591
g59
(dp3592
sg68
g3586
sg61
(lp3593
g54
(g55
g56
NtRp3594
(dp3595
g59
(dp3596
g67
I3
ssg68
g3590
sg61
(lp3597
g97
asbasbasbag54
(g70
g56
NtRp3598
(dp3599
g59
(dp3600
sg68
g3569
sg61
(lp3601
g54
(g75
g56
NtRp3602
(dp3603
g59
(dp3604
sg68
g3598
sg61
(lp3605
g54
(g55
g56
NtRp3606
(dp3607
g59
(dp3608
g67
I3
ssg68
g3602
sg61
(lp3609
S'/admin/default/errors/myapp'
p3610
asbasbasbasbasbasbasbag54
(g70
g56
NtRp3611
(dp3612
g59
(dp3613
sg68
g3390
sg61
(lp3614
g54
(g75
g56
NtRp3615
(dp3616
g59
(dp3617
sg68
g3611
sg61
(lp3618
g54
(g55
g56
NtRp3619
(dp3620
g59
(dp3621
g67
I4
ssg68
g3615
sg61
(lp3622
g54
(g63
g56
NtRp3623
(dp3624
g59
(dp3625
g67
I3
ssg68
Nsg61
(lp3626
g54
(g70
g56
NtRp3627
(dp3628
g59
(dp3629
sg68
g3623
sg61
(lp3630
g54
(g75
g56
NtRp3631
(dp3632
g59
(dp3633
sg68
g3627
sg61
(lp3634
g54
(g55
g56
NtRp3635
(dp3636
g59
(dp3637
g67
I3
ssg68
g3631
sg61
(lp3638
g3422
(S's\n\x00\x00\x00Versioning'
tRp3639
asbasbasbag54
(g70
g56
NtRp3640
(dp3641
g59
(dp3642
sg68
g3623
sg61
(lp3643
g54
(g75
g56
NtRp3644
(dp3645
g59
(dp3646
sg68
g3640
sg61
(lp3647
g54
(g55
g56
NtRp3648
(dp3649
g59
(dp3650
g67
I3
ssg68
g3644
sg61
(lp3651
g97
asbasbasbag54
(g70
g56
NtRp3652
(dp3653
g59
(dp3654
sg68
g3623
sg61
(lp3655
g54
(g75
g56
NtRp3656
(dp3657
g59
(dp3658
sg68
g3652
sg61
(lp3659
g54
(g55
g56
NtRp3660
(dp3661
g59
(dp3662
g67
I3
ssg68
g3656
sg61
(lp3663
S'/admin/mercurial/commit/myapp'
p3664
asbasbasbasbasbasbasbag54
(g70
g56
NtRp3665
(dp3666
g59
(dp3667
sg68
g3390
sg61
(lp3668
g54
(g75
g56
NtRp3669
(dp3670
g59
(dp3671
sg68
g3665
sg61
(lp3672
g54
(g55
g56
NtRp3673
(dp3674
g59
(dp3675
g67
I4
ssg68
g3669
sg61
(lp3676
g54
(g63
g56
NtRp3677
(dp3678
g59
(dp3679
g67
I3
ssg68
Nsg61
(lp3680
g54
(g70
g56
NtRp3681
(dp3682
g59
(dp3683
sg68
g3677
sg61
(lp3684
g54
(g75
g56
NtRp3685
(dp3686
g59
(dp3687
sg68
g3681
sg61
(lp3688
g54
(g55
g56
NtRp3689
(dp3690
g59
(dp3691
g67
I3
ssg68
g3685
sg61
(lp3692
g3422
(S's\x06\x00\x00\x00Logout'
tRp3693
asbasbasbag54
(g70
g56
NtRp3694
(dp3695
g59
(dp3696
sg68
g3677
sg61
(lp3697
g54
(g75
g56
NtRp3698
(dp3699
g59
(dp3700
sg68
g3694
sg61
(lp3701
g54
(g55
g56
NtRp3702
(dp3703
g59
(dp3704
g67
I3
ssg68
g3698
sg61
(lp3705
g97
asbasbasbag54
(g70
g56
NtRp3706
(dp3707
g59
(dp3708
sg68
g3677
sg61
(lp3709
g54
(g75
g56
NtRp3710
(dp3711
g59
(dp3712
sg68
g3706
sg61
(lp3713
g54
(g55
g56
NtRp3714
(dp3715
g59
(dp3716
g67
I3
ssg68
g3710
sg61
(lp3717
S'/admin/default/logout'
p3718
asbasbasbasbasbasbasbag54
(g70
g56
NtRp3719
(dp3720
g59
(dp3721
sg68
g3390
sg61
(lp3722
g54
(g75
g56
NtRp3723
(dp3724
g59
(dp3725
sg68
g3719
sg61
(lp3726
g54
(g55
g56
NtRp3727
(dp3728
g59
(dp3729
g67
I4
ssg68
g3723
sg61
(lp3730
g54
(g63
g56
NtRp3731
(dp3732
g59
(dp3733
g67
I3
ssg68
Nsg61
(lp3734
g54
(g70
g56
NtRp3735
(dp3736
g59
(dp3737
sg68
g3731
sg61
(lp3738
g54
(g75
g56
NtRp3739
(dp3740
g59
(dp3741
sg68
g3735
sg61
(lp3742
g54
(g55
g56
NtRp3743
(dp3744
g59
(dp3745
g67
I3
ssg68
g3739
sg61
(lp3746
g3422
(S's\x04\x00\x00\x00Help'
tRp3747
asbasbasbag54
(g70
g56
NtRp3748
(dp3749
g59
(dp3750
sg68
g3731
sg61
(lp3751
g54
(g75
g56
NtRp3752
(dp3753
g59
(dp3754
sg68
g3748
sg61
(lp3755
g54
(g55
g56
NtRp3756
(dp3757
g59
(dp3758
g67
I3
ssg68
g3752
sg61
(lp3759
g97
asbasbasbag54
(g70
g56
NtRp3760
(dp3761
g59
(dp3762
sg68
g3731
sg61
(lp3763
g54
(g75
g56
NtRp3764
(dp3765
g59
(dp3766
sg68
g3760
sg61
(lp3767
g54
(g55
g56
NtRp3768
(dp3769
g59
(dp3770
g67
I3
ssg68
g3764
sg61
(lp3771
S'/examples/default/index'
p3772
asbasbasbasbasbasbasbasbasbasbasbag54
(g70
g56
NtRp3773
(dp3774
g59
(dp3775
sg68
g2897
sg61
(lp3776
g54
(g75
g56
NtRp3777
(dp3778
g59
(dp3779
g79
g80
ssg68
g3773
sg61
(lp3780
S'meta'
p3781
asbag54
(g75
g56
NtRp3782
(dp3783
g59
(dp3784
g86
g87
ssg68
g3773
sg61
(lp3785
S':'
asbag54
(g75
g56
NtRp3786
(dp3787
g59
(dp3788
sg68
g3773
sg61
(lp3789
g54
(g55
g56
NtRp3790
(dp3791
g59
(dp3792
g67
I5
ssg68
g3786
sg61
(lp3793
g54
(g63
g56
NtRp3794
(dp3795
g59
(dp3796
g67
I4
ssg68
Nsg61
(lp3797
sbasbasbasbag54
(g70
g56
NtRp3798
(dp3799
g59
(dp3800
sg68
g2897
sg61
(lp3801
g54
(g75
g56
NtRp3802
(dp3803
g59
(dp3804
g79
g80
ssg68
g3798
sg61
(lp3805
S'postprocessing'
p3806
asbag54
(g75
g56
NtRp3807
(dp3808
g59
(dp3809
g86
g87
ssg68
g3798
sg61
(lp3810
S':'
asbag54
(g75
g56
NtRp3811
(dp3812
g59
(dp3813
sg68
g3798
sg61
(lp3814
g54
(g55
g56
NtRp3815
(dp3816
g59
(dp3817
g67
I5
ssg68
g3811
sg61
(lp3818
g54
(g63
g56
NtRp3819
(dp3820
g59
(dp3821
g67
I4
ssg68
Nsg61
(lp3822
sbasbasbasbag54
(g70
g56
NtRp3823
(dp3824
g59
(dp3825
sg68
g2897
sg61
(lp3826
g54
(g75
g56
NtRp3827
(dp3828
g59
(dp3829
g79
g80
ssg68
g3823
sg61
(lp3830
S'session_file'
p3831
asbag54
(g75
g56
NtRp3832
(dp3833
g59
(dp3834
g86
g87
ssg68
g3823
sg61
(lp3835
S':'
asbag54
(g75
g56
NtRp3836
(dp3837
g59
(dp3838
sg68
g3823
sg61
(lp3839
g54
(g55
g56
NtRp3840
(dp3841
g59
(dp3842
g67
I5
ssg68
g3836
sg61
(lp3843
S"<open file 'D:\\Dropbox\\Eclipse\\OJDevSourceProject\\project\\web2py\\applications\\admin\\sessions\\127.0.0.1-ffdc960a-67cc-4480-9b51-46aacf1c0196', mode 'rb+' at 0x07FA7968>"
p3844
asbasbasbag54
(g70
g56
NtRp3845
(dp3846
g59
(dp3847
sg68
g2897
sg61
(lp3848
g54
(g75
g56
NtRp3849
(dp3850
g59
(dp3851
g79
g80
ssg68
g3845
sg61
(lp3852
S'session_filename'
p3853
asbag54
(g75
g56
NtRp3854
(dp3855
g59
(dp3856
g86
g87
ssg68
g3845
sg61
(lp3857
S':'
asbag54
(g75
g56
NtRp3858
(dp3859
g59
(dp3860
sg68
g3845
sg61
(lp3861
g54
(g55
g56
NtRp3862
(dp3863
g59
(dp3864
g67
I5
ssg68
g3858
sg61
(lp3865
S'D:\\Dropbox\\Eclipse\\OJDevSourceProject\\project\\web2py\\applications\\admin\\sessions\\127.0.0.1-ffdc960a-67cc-4480-9b51-46aacf1c0196'
p3866
asbasbasbag54
(g70
g56
NtRp3867
(dp3868
g59
(dp3869
sg68
g2897
sg61
(lp3870
g54
(g75
g56
NtRp3871
(dp3872
g59
(dp3873
g79
g80
ssg68
g3867
sg61
(lp3874
S'session_id'
p3875
asbag54
(g75
g56
NtRp3876
(dp3877
g59
(dp3878
g86
g87
ssg68
g3867
sg61
(lp3879
S':'
asbag54
(g75
g56
NtRp3880
(dp3881
g59
(dp3882
sg68
g3867
sg61
(lp3883
g54
(g55
g56
NtRp3884
(dp3885
g59
(dp3886
g67
I5
ssg68
g3880
sg61
(lp3887
S'127.0.0.1-ffdc960a-67cc-4480-9b51-46aacf1c0196'
p3888
asbasbasbag54
(g70
g56
NtRp3889
(dp3890
g59
(dp3891
sg68
g2897
sg61
(lp3892
g54
(g75
g56
NtRp3893
(dp3894
g59
(dp3895
g79
g80
ssg68
g3889
sg61
(lp3896
S'session_id_name'
p3897
asbag54
(g75
g56
NtRp3898
(dp3899
g59
(dp3900
g86
g87
ssg68
g3889
sg61
(lp3901
S':'
asbag54
(g75
g56
NtRp3902
(dp3903
g59
(dp3904
sg68
g3889
sg61
(lp3905
g54
(g55
g56
NtRp3906
(dp3907
g59
(dp3908
g67
I5
ssg68
g3902
sg61
(lp3909
g2954
asbasbasbag54
(g70
g56
NtRp3910
(dp3911
g59
(dp3912
sg68
g2897
sg61
(lp3913
g54
(g75
g56
NtRp3914
(dp3915
g59
(dp3916
g79
g80
ssg68
g3910
sg61
(lp3917
S'session_locked'
p3918
asbag54
(g75
g56
NtRp3919
(dp3920
g59
(dp3921
g86
g87
ssg68
g3910
sg61
(lp3922
S':'
asbag54
(g75
g56
NtRp3923
(dp3924
g59
(dp3925
sg68
g3910
sg61
(lp3926
g54
(g55
g56
NtRp3927
(dp3928
g59
(dp3929
g67
I5
ssg68
g3923
sg61
(lp3930
g1340
asbasbasbag54
(g70
g56
NtRp3931
(dp3932
g59
(dp3933
sg68
g2897
sg61
(lp3934
g54
(g75
g56
NtRp3935
(dp3936
g59
(dp3937
g79
g80
ssg68
g3931
sg61
(lp3938
S'session_new'
p3939
asbag54
(g75
g56
NtRp3940
(dp3941
g59
(dp3942
g86
g87
ssg68
g3931
sg61
(lp3943
S':'
asbag54
(g75
g56
NtRp3944
(dp3945
g59
(dp3946
sg68
g3931
sg61
(lp3947
g54
(g55
g56
NtRp3948
(dp3949
g59
(dp3950
g67
I5
ssg68
g3944
sg61
(lp3951
g97
asbasbasbag54
(g70
g56
NtRp3952
(dp3953
g59
(dp3954
sg68
g2897
sg61
(lp3955
g54
(g75
g56
NtRp3956
(dp3957
g59
(dp3958
g79
g80
ssg68
g3952
sg61
(lp3959
S'status'
p3960
asbag54
(g75
g56
NtRp3961
(dp3962
g59
(dp3963
g86
g87
ssg68
g3952
sg61
(lp3964
S':'
asbag54
(g75
g56
NtRp3965
(dp3966
g59
(dp3967
sg68
g3952
sg61
(lp3968
g54
(g55
g56
NtRp3969
(dp3970
g59
(dp3971
g67
I5
ssg68
g3965
sg61
(lp3972
S'200'
p3973
asbasbasbag54
(g70
g56
NtRp3974
(dp3975
g59
(dp3976
sg68
g2897
sg61
(lp3977
g54
(g75
g56
NtRp3978
(dp3979
g59
(dp3980
g79
g80
ssg68
g3974
sg61
(lp3981
S'subtitle'
p3982
asbag54
(g75
g56
NtRp3983
(dp3984
g59
(dp3985
g86
g87
ssg68
g3974
sg61
(lp3986
S':'
asbag54
(g75
g56
NtRp3987
(dp3988
g59
(dp3989
sg68
g3974
sg61
(lp3990
g54
(g55
g56
NtRp3991
(dp3992
g59
(dp3993
g67
I5
ssg68
g3987
sg61
(lp3994
S'admin'
p3995
asbasbasbag54
(g70
g56
NtRp3996
(dp3997
g59
(dp3998
sg68
g2897
sg61
(lp3999
g54
(g75
g56
NtRp4000
(dp4001
g59
(dp4002
g79
g80
ssg68
g3996
sg61
(lp4003
S'title'
p4004
asbag54
(g75
g56
NtRp4005
(dp4006
g59
(dp4007
g86
g87
ssg68
g3996
sg61
(lp4008
S':'
asbag54
(g75
g56
NtRp4009
(dp4010
g59
(dp4011
sg68
g3996
sg61
(lp4012
g54
(g55
g56
NtRp4013
(dp4014
g59
(dp4015
g67
I5
ssg68
g4009
sg61
(lp4016
S'design myapp'
p4017
asbasbasbag54
(g70
g56
NtRp4018
(dp4019
g59
(dp4020
sg68
g2897
sg61
(lp4021
g54
(g75
g56
NtRp4022
(dp4023
g59
(dp4024
g79
g80
ssg68
g4018
sg61
(lp4025
g2006
asbag54
(g75
g56
NtRp4026
(dp4027
g59
(dp4028
g86
g87
ssg68
g4018
sg61
(lp4029
S':'
asbag54
(g75
g56
NtRp4030
(dp4031
g59
(dp4032
sg68
g4018
sg61
(lp4033
g54
(g55
g56
NtRp4034
(dp4035
g59
(dp4036
g67
I5
ssg68
g4030
sg61
(lp4037
g2019
asbasbasbag54
(g70
g56
NtRp4038
(dp4039
g59
(dp4040
sg68
g2897
sg61
(lp4041
g54
(g75
g56
NtRp4042
(dp4043
g59
(dp4044
g79
g80
ssg68
g4038
sg61
(lp4045
S'view'
p4046
asbag54
(g75
g56
NtRp4047
(dp4048
g59
(dp4049
g86
g87
ssg68
g4038
sg61
(lp4050
S':'
asbag54
(g75
g56
NtRp4051
(dp4052
g59
(dp4053
sg68
g4038
sg61
(lp4054
g54
(g55
g56
NtRp4055
(dp4056
g59
(dp4057
g67
I5
ssg68
g4051
sg61
(lp4058
S'default/design.html'
p4059
asbasbasbasbasbsS'locals'
p4060
(dp4061
S'languages'
p4062
S'[]'
p4063
sS'cronfolder'
p4064
S"'D:/Dropbox/Eclipse/OJDevSourceProject/project/web2py/applications/myapp/cron'"
p4065
sS'extend'
p4066
g44
sS'views'
p4067
S'[]'
p4068
sS'models'
p4069
S'[]'
p4070
sS'app'
p4071
S"'myapp'"
p4072
sS'functions'
p4073
g44
sS'modules'
p4074
S'[]'
p4075
sS'statics'
p4076
S'[]'
p4077
sS'controllers'
p4078
S'[]'
p4079
sS'include'
p4080
g44
sS'defines'
p4081
g44
sssS'traceback'
p4082
S'Traceback (most recent call last):\n  File "D:\\Dropbox\\Eclipse\\OJDevSourceProject\\project\\web2py\\gluon\\restricted.py", line 194, in restricted\n    exec ccode in environment\n  File "D:\\Dropbox\\Eclipse\\OJDevSourceProject\\project\\web2py\\applications\\admin\\controllers/default.py", line 1225, in <module>\n  File "D:\\Dropbox\\Eclipse\\OJDevSourceProject\\project\\web2py\\gluon\\globals.py", line 149, in <lambda>\n    self._caller = lambda f: f()\n  File "D:\\Dropbox\\Eclipse\\OJDevSourceProject\\project\\web2py\\applications\\admin\\controllers/default.py", line 742, in design\n    if not os.path.exists(cronfolder): os.mkdir(cronfolder)\nWindowsError: [Error 3] The system cannot find the path specified: \'D:/Dropbox/Eclipse/OJDevSourceProject/project/web2py/applications/myapp/cron\'\n'
p4083
s.